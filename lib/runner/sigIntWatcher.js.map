{
  "version": 3,
  "sources": ["../../src/runner/sigIntWatcher.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class SigIntWatcher {\n  private _hadSignal: boolean = false;\n  private _sigintPromise: Promise<void>;\n  private _sigintHandler: () => void;\n  constructor() {\n    let sigintCallback: () => void;\n    this._sigintPromise = new Promise<void>(f => sigintCallback = f);\n    this._sigintHandler = () => {\n      FixedNodeSIGINTHandler.off(this._sigintHandler);\n      this._hadSignal = true;\n      sigintCallback();\n    };\n    FixedNodeSIGINTHandler.on(this._sigintHandler);\n  }\n\n  promise(): Promise<void> {\n    return this._sigintPromise;\n  }\n\n  hadSignal(): boolean {\n    return this._hadSignal;\n  }\n\n  disarm() {\n    FixedNodeSIGINTHandler.off(this._sigintHandler);\n  }\n}\n\n// NPM/NPX will send us duplicate SIGINT signals, so we need to ignore them.\nclass FixedNodeSIGINTHandler {\n  private static _handlers: (() => void)[] = [];\n  private static _ignoreNextSIGINTs = false;\n  private static _handlerInstalled = false;\n\n  static _dispatch = () => {\n    if (this._ignoreNextSIGINTs)\n      return;\n\n    this._ignoreNextSIGINTs = true;\n    setTimeout(() => {\n      this._ignoreNextSIGINTs = false;\n      // We remove the handler so that second Ctrl+C immediately kills the process\n      // via the default sigint handler. This is handy in the case where our shutdown\n      // takes a lot of time or is buggy.\n      //\n      // When running through NPM we might get multiple SIGINT signals\n      // for a single Ctrl+C - this is an NPM bug present since NPM v6+.\n      // https://github.com/npm/cli/issues/1591\n      // https://github.com/npm/cli/issues/2124\n      // https://github.com/npm/cli/issues/5021\n      //\n      // Therefore, removing the handler too soon will just kill the process\n      // with default handler without printing the results.\n      // We work around this by giving NPM 1000ms to send us duplicate signals.\n      // The side effect is that slow shutdown or bug in our process will force\n      // the user to hit Ctrl+C again after at least a second.\n      if (!this._handlers.length)\n        this._uninstall();\n    }, 1000);\n    for (const handler of this._handlers)\n      handler();\n  };\n\n  static _install() {\n    if (!this._handlerInstalled) {\n      this._handlerInstalled = true;\n      process.on('SIGINT', this._dispatch);\n    }\n  }\n\n  static _uninstall() {\n    if (this._handlerInstalled) {\n      this._handlerInstalled = false;\n      process.off('SIGINT', this._dispatch);\n    }\n  }\n\n  static on(handler: () => void) {\n    this._handlers.push(handler);\n    if (this._handlers.length === 1)\n      this._install();\n  }\n\n  static off(handler: () => void) {\n    this._handlers = this._handlers.filter(h => h !== handler);\n    if (!this._ignoreNextSIGINTs && !this._handlers.length)\n      this._uninstall();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBO,MAAM,cAAc;AAAA,EAIzB,cAAc;AAHd,SAAQ,aAAsB;AAI5B,QAAI;AACJ,SAAK,iBAAiB,IAAI,QAAc,OAAK,iBAAiB,CAAC;AAC/D,SAAK,iBAAiB,MAAM;AAC1B,6BAAuB,IAAI,KAAK,cAAc;AAC9C,WAAK,aAAa;AAClB,qBAAe;AAAA,IACjB;AACA,2BAAuB,GAAG,KAAK,cAAc;AAAA,EAC/C;AAAA,EAEA,UAAyB;AACvB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,YAAqB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,SAAS;AACP,2BAAuB,IAAI,KAAK,cAAc;AAAA,EAChD;AACF;AAGA,MAAM,uBAAuB;AAAA,EAC3B;AAAA,SAAe,YAA4B,CAAC;AAAA;AAAA,EAC5C;AAAA,SAAe,qBAAqB;AAAA;AAAA,EACpC;AAAA,SAAe,oBAAoB;AAAA;AAAA,EAEnC;AAAA,SAAO,YAAY,MAAM;AACvB,UAAI,KAAK;AACP;AAEF,WAAK,qBAAqB;AAC1B,iBAAW,MAAM;AACf,aAAK,qBAAqB;AAgB1B,YAAI,CAAC,KAAK,UAAU;AAClB,eAAK,WAAW;AAAA,MACpB,GAAG,GAAI;AACP,iBAAW,WAAW,KAAK;AACzB,gBAAQ;AAAA,IACZ;AAAA;AAAA,EAEA,OAAO,WAAW;AAChB,QAAI,CAAC,KAAK,mBAAmB;AAC3B,WAAK,oBAAoB;AACzB,cAAQ,GAAG,UAAU,KAAK,SAAS;AAAA,IACrC;AAAA,EACF;AAAA,EAEA,OAAO,aAAa;AAClB,QAAI,KAAK,mBAAmB;AAC1B,WAAK,oBAAoB;AACzB,cAAQ,IAAI,UAAU,KAAK,SAAS;AAAA,IACtC;AAAA,EACF;AAAA,EAEA,OAAO,GAAG,SAAqB;AAC7B,SAAK,UAAU,KAAK,OAAO;AAC3B,QAAI,KAAK,UAAU,WAAW;AAC5B,WAAK,SAAS;AAAA,EAClB;AAAA,EAEA,OAAO,IAAI,SAAqB;AAC9B,SAAK,YAAY,KAAK,UAAU,OAAO,OAAK,MAAM,OAAO;AACzD,QAAI,CAAC,KAAK,sBAAsB,CAAC,KAAK,UAAU;AAC9C,WAAK,WAAW;AAAA,EACpB;AACF;",
  "names": []
}
