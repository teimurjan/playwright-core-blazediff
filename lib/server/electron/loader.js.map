{
  "version": 3,
  "sources": ["../../../src/server/electron/loader.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { app } = require('electron');\n\nconst { chromiumSwitches } = require('../chromium/chromiumSwitches');\n\n// Always pass user arguments first, see https://github.com/microsoft/playwright/issues/16614 and\n// https://github.com/microsoft/playwright/issues/29198.\n// [Electron, -r, loader.js[, --no-sandbox>], --inspect=0, --remote-debugging-port=0, ...args]\nprocess.argv.splice(1, process.argv.indexOf('--remote-debugging-port=0'));\n\nfor (const arg of chromiumSwitches()) {\n  const match = arg.match(/--([^=]*)=?(.*)/)!;\n  app.commandLine.appendSwitch(match[1], match[2]);\n}\n\n// Defer ready event.\nconst originalWhenReady = app.whenReady();\nconst originalEmit = app.emit.bind(app);\nlet readyEventArgs: any[];\napp.emit = (event: string | symbol, ...args: any[]): boolean => {\n  if (event === 'ready') {\n    readyEventArgs = args;\n    return app.listenerCount('ready') > 0;\n  }\n  return originalEmit(event, ...args);\n};\n\nlet isReady = false;\nlet whenReadyCallback: (event: any) => any;\nconst whenReadyPromise = new Promise<void>(f => whenReadyCallback = f);\napp.isReady = () => isReady;\napp.whenReady = () => whenReadyPromise;\n\n(globalThis as any).__playwright_run = async () => {\n  // Wait for app to be ready to avoid browser initialization races.\n  const event = await originalWhenReady;\n  isReady = true;\n  whenReadyCallback(event);\n  originalEmit('ready', ...readyEventArgs);\n};\n"],
  "mappings": ";AAgBA,MAAM,EAAE,IAAI,IAAI,QAAQ,UAAU;AAElC,MAAM,EAAE,iBAAiB,IAAI,QAAQ,8BAA8B;AAKnE,QAAQ,KAAK,OAAO,GAAG,QAAQ,KAAK,QAAQ,2BAA2B,CAAC;AAExE,WAAW,OAAO,iBAAiB,GAAG;AACpC,QAAM,QAAQ,IAAI,MAAM,iBAAiB;AACzC,MAAI,YAAY,aAAa,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AACjD;AAGA,MAAM,oBAAoB,IAAI,UAAU;AACxC,MAAM,eAAe,IAAI,KAAK,KAAK,GAAG;AACtC,IAAI;AACJ,IAAI,OAAO,CAAC,UAA2B,SAAyB;AAC9D,MAAI,UAAU,SAAS;AACrB,qBAAiB;AACjB,WAAO,IAAI,cAAc,OAAO,IAAI;AAAA,EACtC;AACA,SAAO,aAAa,OAAO,GAAG,IAAI;AACpC;AAEA,IAAI,UAAU;AACd,IAAI;AACJ,MAAM,mBAAmB,IAAI,QAAc,OAAK,oBAAoB,CAAC;AACrE,IAAI,UAAU,MAAM;AACpB,IAAI,YAAY,MAAM;AAErB,WAAmB,mBAAmB,YAAY;AAEjD,QAAM,QAAQ,MAAM;AACpB,YAAU;AACV,oBAAkB,KAAK;AACvB,eAAa,SAAS,GAAG,cAAc;AACzC;",
  "names": []
}
