{
  "version": 3,
  "sources": ["../../src/server/frameSelectors.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asLocator } from '../utils';\nimport { InvalidSelectorError,  splitSelectorByFrame, stringifySelector, visitAllSelectorParts } from '../utils/isomorphic/selectorParser';\n\nimport type { ElementHandle, FrameExecutionContext } from './dom';\nimport type { Frame } from './frames';\nimport type { InjectedScript } from '@injected/injectedScript';\nimport type { JSHandle } from './javascript';\nimport type * as types from './types';\nimport type { ParsedSelector } from '../utils/isomorphic/selectorParser';\n\n\nexport type SelectorInfo = {\n  parsed: ParsedSelector,\n  world: types.World,\n  strict: boolean,\n};\n\nexport type SelectorInFrame = {\n  frame: Frame;\n  info: SelectorInfo;\n  scope?: ElementHandle;\n};\n\nexport class FrameSelectors {\n  readonly frame: Frame;\n\n  constructor(frame: Frame) {\n    this.frame = frame;\n  }\n\n  private _parseSelector(selector: string | ParsedSelector, options?: types.StrictOptions): SelectorInfo {\n    const strict = typeof options?.strict === 'boolean' ? options.strict : !!this.frame._page.browserContext._options.strictSelectors;\n    return this.frame._page.browserContext.selectors().parseSelector(selector, strict);\n  }\n\n  async query(selector: string, options?: types.StrictOptions & { mainWorld?: boolean }, scope?: ElementHandle): Promise<ElementHandle<Element> | null> {\n    const resolved = await this.resolveInjectedForSelector(selector, options, scope);\n    // Be careful, |this.frame| can be different from |resolved.frame|.\n    if (!resolved)\n      return null;\n    const handle = await resolved.injected.evaluateHandle((injected, { info, scope }) => {\n      return injected.querySelector(info.parsed, scope || document, info.strict);\n    }, { info: resolved.info, scope: resolved.scope });\n    const elementHandle = handle.asElement() as ElementHandle<Element> | null;\n    if (!elementHandle) {\n      handle.dispose();\n      return null;\n    }\n    return adoptIfNeeded(elementHandle, await resolved.frame._mainContext());\n  }\n\n  async queryArrayInMainWorld(selector: string, scope?: ElementHandle): Promise<JSHandle<Element[]>> {\n    const resolved = await this.resolveInjectedForSelector(selector, { mainWorld: true }, scope);\n    // Be careful, |this.frame| can be different from |resolved.frame|.\n    if (!resolved)\n      throw new Error(`Failed to find frame for selector \"${selector}\"`);\n    return await resolved.injected.evaluateHandle((injected, { info, scope }) => {\n      return injected.querySelectorAll(info.parsed, scope || document);\n    }, { info: resolved.info, scope: resolved.scope });\n  }\n\n  async queryCount(selector: string, options: any): Promise<number> {\n    const resolved = await this.resolveInjectedForSelector(selector);\n    // Be careful, |this.frame| can be different from |resolved.frame|.\n    if (!resolved)\n      throw new Error(`Failed to find frame for selector \"${selector}\"`);\n    await options.__testHookBeforeQuery?.();\n    return await resolved.injected.evaluate((injected, { info }) => {\n      return injected.querySelectorAll(info.parsed, document).length;\n    }, { info: resolved.info });\n  }\n\n  async queryAll(selector: string, scope?: ElementHandle): Promise<ElementHandle<Element>[]> {\n    const resolved = await this.resolveInjectedForSelector(selector, {}, scope);\n    // Be careful, |this.frame| can be different from |resolved.frame|.\n    if (!resolved)\n      return [];\n    const arrayHandle = await resolved.injected.evaluateHandle((injected, { info, scope }) => {\n      return injected.querySelectorAll(info.parsed, scope || document);\n    }, { info: resolved.info, scope: resolved.scope });\n\n    const properties = await arrayHandle.getProperties();\n    arrayHandle.dispose();\n\n    // Note: adopting elements one by one may be slow. If we encounter the issue here,\n    // we might introduce 'useMainContext' option or similar to speed things up.\n    const targetContext = await resolved.frame._mainContext();\n    const result: Promise<ElementHandle<Element>>[] = [];\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement() as ElementHandle<Element>;\n      if (elementHandle)\n        result.push(adoptIfNeeded(elementHandle, targetContext));\n      else\n        property.dispose();\n    }\n    return Promise.all(result);\n  }\n\n  private _jumpToAriaRefFrameIfNeeded(selector: string, info: SelectorInfo, frame: Frame): Frame {\n    if (info.parsed.parts[0].name !== 'aria-ref')\n      return frame;\n    const body = info.parsed.parts[0].body as string;\n    const match = body.match(/^f(\\d+)e\\d+$/);\n    if (!match)\n      return frame;\n    const frameIndex = +match[1];\n    const page = this.frame._page;\n    const frameId = page.lastSnapshotFrameIds[frameIndex - 1];\n    const jumptToFrame = frameId ? page.frameManager.frame(frameId) : null;\n    if (!jumptToFrame)\n      throw new InvalidSelectorError(`Invalid frame in aria-ref selector \"${selector}\"`);\n    return jumptToFrame;\n  }\n\n  async resolveFrameForSelector(selector: string, options: types.StrictOptions = {}, scope?: ElementHandle): Promise<SelectorInFrame | null> {\n    let frame: Frame = this.frame;\n    const frameChunks = splitSelectorByFrame(selector);\n\n    for (const chunk of frameChunks) {\n      visitAllSelectorParts(chunk, (part, nested) => {\n        if (nested && part.name === 'internal:control' && part.body === 'enter-frame') {\n          const locator = asLocator(this.frame._page.browserContext._browser.sdkLanguage(), selector);\n          throw new InvalidSelectorError(`Frame locators are not allowed inside composite locators, while querying \"${locator}\"`);\n        }\n      });\n    }\n\n    for (let i = 0; i < frameChunks.length - 1; ++i) {\n      const info = this._parseSelector(frameChunks[i], options);\n      frame = this._jumpToAriaRefFrameIfNeeded(selector, info, frame);\n      const context = await frame._context(info.world);\n      const injectedScript = await context.injectedScript();\n      const handle = await injectedScript.evaluateHandle((injected, { info, scope, selectorString }) => {\n        const element = injected.querySelector(info.parsed, scope || document, info.strict);\n        if (element && element.nodeName !== 'IFRAME' && element.nodeName !== 'FRAME')\n          throw injected.createStacklessError(`Selector \"${selectorString}\" resolved to ${injected.previewNode(element)}, <iframe> was expected`);\n        return element;\n      }, { info, scope: i === 0 ? scope : undefined, selectorString: stringifySelector(info.parsed) });\n      const element = handle.asElement() as ElementHandle<Element> | null;\n      if (!element)\n        return null;\n      const maybeFrame = await frame._page.delegate.getContentFrame(element);\n      element.dispose();\n      if (!maybeFrame)\n        return null;\n      frame = maybeFrame;\n    }\n    // If we end up in the different frame, we should start from the frame root, so throw away the scope.\n    if (frame !== this.frame)\n      scope = undefined;\n    const lastChunk = frame.selectors._parseSelector(frameChunks[frameChunks.length - 1], options);\n    frame = this._jumpToAriaRefFrameIfNeeded(selector, lastChunk, frame);\n    return { frame, info: lastChunk, scope };\n  }\n\n  async resolveInjectedForSelector(selector: string, options?: { strict?: boolean, mainWorld?: boolean }, scope?: ElementHandle): Promise<{ injected: JSHandle<InjectedScript>, info: SelectorInfo, frame: Frame, scope?: ElementHandle } | undefined> {\n    const resolved = await this.resolveFrameForSelector(selector, options, scope);\n    // Be careful, |this.frame| can be different from |resolved.frame|.\n    if (!resolved)\n      return;\n    const context = await resolved.frame._context(options?.mainWorld ? 'main' : resolved.info.world);\n    const injected = await context.injectedScript();\n    return { injected, info: resolved.info, frame: resolved.frame, scope: resolved.scope };\n  }\n}\n\nasync function adoptIfNeeded<T extends Node>(handle: ElementHandle<T>, context: FrameExecutionContext): Promise<ElementHandle<T>> {\n  if (handle._context === context)\n    return handle;\n  const adopted = await handle._page.delegate.adoptElementHandle(handle, context);\n  handle.dispose();\n  return adopted;\n}\n"],
  "mappings": "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",
  "names": ["scope", "info", "element"]
}
