{
  "version": 3,
  "sources": ["../../../src/server/utils/pipeTransport.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { makeWaitForNextTask } from './task';\n\ninterface WritableStream {\n  write(data: Buffer): void;\n}\n\ninterface ReadableStream {\n  on(event: 'data', callback: (b: Buffer) => void): void;\n  on(event: 'close', callback: () => void): void;\n}\n\ninterface ClosableStream {\n  close(): void;\n}\n\nexport class PipeTransport {\n  private _pipeWrite: WritableStream;\n  private _data = Buffer.from([]);\n  private _waitForNextTask = makeWaitForNextTask();\n  private _closed = false;\n  private _bytesLeft = 0;\n\n  onmessage?: (message: string) => void;\n  onclose?: () => void;\n\n  private _endian: 'be' | 'le';\n  private _closeableStream: ClosableStream | undefined;\n\n  constructor(pipeWrite: WritableStream, pipeRead: ReadableStream, closeable?: ClosableStream, endian: 'be' | 'le' = 'le') {\n    this._pipeWrite = pipeWrite;\n    this._endian = endian;\n    this._closeableStream = closeable;\n    pipeRead.on('data', buffer => this._dispatch(buffer));\n    pipeRead.on('close', () => {\n      this._closed = true;\n      if (this.onclose)\n        this.onclose();\n    });\n    this.onmessage = undefined;\n    this.onclose = undefined;\n  }\n\n  send(message: string) {\n    if (this._closed)\n      throw new Error('Pipe has been closed');\n    const data = Buffer.from(message, 'utf-8');\n    const dataLength = Buffer.alloc(4);\n    if (this._endian === 'be')\n      dataLength.writeUInt32BE(data.length, 0);\n    else\n      dataLength.writeUInt32LE(data.length, 0);\n    this._pipeWrite.write(dataLength);\n    this._pipeWrite.write(data);\n  }\n\n  close() {\n    // Let it throw.\n    this._closeableStream!.close();\n  }\n\n  _dispatch(buffer: Buffer) {\n    this._data = Buffer.concat([this._data, buffer]);\n    while (true) {\n      if (!this._bytesLeft && this._data.length < 4) {\n        // Need more data.\n        break;\n      }\n\n      if (!this._bytesLeft) {\n        this._bytesLeft = this._endian === 'be' ? this._data.readUInt32BE(0) : this._data.readUInt32LE(0);\n        this._data = this._data.slice(4);\n      }\n\n      if (!this._bytesLeft || this._data.length < this._bytesLeft) {\n        // Need more data.\n        break;\n      }\n\n      const message = this._data.slice(0, this._bytesLeft);\n      this._data = this._data.slice(this._bytesLeft);\n      this._bytesLeft = 0;\n      this._waitForNextTask(() => {\n        if (this.onmessage)\n          this.onmessage(message.toString('utf-8'));\n      });\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,kBAAoC;AAe7B,MAAM,cAAc;AAAA,EAazB,YAAY,WAA2B,UAA0B,WAA4B,SAAsB,MAAM;AAXzH,SAAQ,QAAQ,OAAO,KAAK,CAAC,CAAC;AAC9B,SAAQ,uBAAmB,iCAAoB;AAC/C,SAAQ,UAAU;AAClB,SAAQ,aAAa;AASnB,SAAK,aAAa;AAClB,SAAK,UAAU;AACf,SAAK,mBAAmB;AACxB,aAAS,GAAG,QAAQ,YAAU,KAAK,UAAU,MAAM,CAAC;AACpD,aAAS,GAAG,SAAS,MAAM;AACzB,WAAK,UAAU;AACf,UAAI,KAAK;AACP,aAAK,QAAQ;AAAA,IACjB,CAAC;AACD,SAAK,YAAY;AACjB,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,KAAK,SAAiB;AACpB,QAAI,KAAK;AACP,YAAM,IAAI,MAAM,sBAAsB;AACxC,UAAM,OAAO,OAAO,KAAK,SAAS,OAAO;AACzC,UAAM,aAAa,OAAO,MAAM,CAAC;AACjC,QAAI,KAAK,YAAY;AACnB,iBAAW,cAAc,KAAK,QAAQ,CAAC;AAAA;AAEvC,iBAAW,cAAc,KAAK,QAAQ,CAAC;AACzC,SAAK,WAAW,MAAM,UAAU;AAChC,SAAK,WAAW,MAAM,IAAI;AAAA,EAC5B;AAAA,EAEA,QAAQ;AAEN,SAAK,iBAAkB,MAAM;AAAA,EAC/B;AAAA,EAEA,UAAU,QAAgB;AACxB,SAAK,QAAQ,OAAO,OAAO,CAAC,KAAK,OAAO,MAAM,CAAC;AAC/C,WAAO,MAAM;AACX,UAAI,CAAC,KAAK,cAAc,KAAK,MAAM,SAAS,GAAG;AAE7C;AAAA,MACF;AAEA,UAAI,CAAC,KAAK,YAAY;AACpB,aAAK,aAAa,KAAK,YAAY,OAAO,KAAK,MAAM,aAAa,CAAC,IAAI,KAAK,MAAM,aAAa,CAAC;AAChG,aAAK,QAAQ,KAAK,MAAM,MAAM,CAAC;AAAA,MACjC;AAEA,UAAI,CAAC,KAAK,cAAc,KAAK,MAAM,SAAS,KAAK,YAAY;AAE3D;AAAA,MACF;AAEA,YAAM,UAAU,KAAK,MAAM,MAAM,GAAG,KAAK,UAAU;AACnD,WAAK,QAAQ,KAAK,MAAM,MAAM,KAAK,UAAU;AAC7C,WAAK,aAAa;AAClB,WAAK,iBAAiB,MAAM;AAC1B,YAAI,KAAK;AACP,eAAK,UAAU,QAAQ,SAAS,OAAO,CAAC;AAAA,MAC5C,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": []
}
