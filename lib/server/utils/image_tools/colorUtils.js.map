{
  "version": 3,
  "sources": ["../../../../src/server/utils/image_tools/colorUtils.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function blendWithWhite(c: number, a: number): number {\n  return 255 + (c - 255) * a;\n}\n\nexport function rgb2gray(r: number, g: number, b: number): number {\n  // NOTE: this is the exact integer formula from SSIM.js.\n  // See https://github.com/obartra/ssim/blob/ca8e3c6a6ff5f4f2e232239e0c3d91806f3c97d5/src/matlab/rgb2gray.ts#L56\n  return (77 * r + 150 * g + 29 * b + 128) >> 8;\n}\n\n// Perceived color difference defined by CIE94.\n// See https://en.wikipedia.org/wiki/Color_difference#CIE94\n//\n// The result of 1.0 is a \"just-noticeable difference\".\n//\n// Other results interpretation (taken from http://zschuessler.github.io/DeltaE/learn/):\n//   < 1.0     Not perceptible by human eyes.\n//   1-2        Perceptible through close observation.\n//   2-10       Perceptible at a glance.\n//   11-49      Colors are more similar than opposite\n//   100        Colors are exact opposite\nexport function colorDeltaE94(rgb1: number[], rgb2: number[]) {\n  const [l1, a1, b1] = xyz2lab(srgb2xyz(rgb1));\n  const [l2, a2, b2] = xyz2lab(srgb2xyz(rgb2));\n  const deltaL = l1 - l2;\n  const deltaA = a1 - a2;\n  const deltaB = b1 - b2;\n  const c1 = Math.sqrt(a1 ** 2 + b1 ** 2);\n  const c2 = Math.sqrt(a2 ** 2 + b2 ** 2);\n  const deltaC = c1 - c2;\n  let deltaH = deltaA ** 2 + deltaB ** 2 - deltaC ** 2;\n  deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n  // The k1, k2, kL, kC, kH values for \"graphic arts\" applications.\n  // See https://en.wikipedia.org/wiki/Color_difference#CIE94\n  const k1 = 0.045;\n  const k2 = 0.015;\n  const kL = 1;\n  const kC = 1;\n  const kH = 1;\n\n  const sC = 1.0 + k1 * c1;\n  const sH = 1.0 + k2 * c1;\n  const sL = 1;\n\n  return Math.sqrt((deltaL / sL / kL) ** 2 + (deltaC / sC / kC) ** 2 + (deltaH / sH / kH) ** 2);\n}\n\n// sRGB -> 1-normalized XYZ (i.e. Y \u2208 [0, 1]) with D65 illuminant\n// See https://en.wikipedia.org/wiki/SRGB#From_sRGB_to_CIE_XYZ\nexport function srgb2xyz(rgb: number[]): number[] {\n  let r = rgb[0] / 255;\n  let g = rgb[1] / 255;\n  let b = rgb[2] / 255;\n  r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  return [\n    (r * 0.4124 + g * 0.3576 + b * 0.1805),\n    (r * 0.2126 + g * 0.7152 + b * 0.0722),\n    (r * 0.0193 + g * 0.1192 + b * 0.9505),\n  ];\n}\n\nconst sigma_pow2 = 6 * 6 / 29 / 29;\nconst sigma_pow3 = 6 * 6 * 6 / 29 / 29 / 29;\n\n// 1-normalized CIE XYZ with D65 to L*a*b*\n// See https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIEXYZ_to_CIELAB\nexport function xyz2lab(xyz: number[]): number[] {\n  const x = xyz[0] / 0.950489;\n  const y = xyz[1];\n  const z = xyz[2] / 1.088840;\n\n  const fx = x > sigma_pow3 ? x ** (1 / 3) : x / 3 / sigma_pow2 + 4 / 29;\n  const fy = y > sigma_pow3 ? y ** (1 / 3) : y / 3 / sigma_pow2 + 4 / 29;\n  const fz = z > sigma_pow3 ? z ** (1 / 3) : z / 3 / sigma_pow2 + 4 / 29;\n\n  const l = 116 * fy - 16;\n  const a = 500 * (fx - fy);\n  const b = 200 * (fy - fz);\n\n  return [l, a, b];\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBO,SAAS,eAAe,GAAW,GAAmB;AAC3D,SAAO,OAAO,IAAI,OAAO;AAC3B;AAEO,SAAS,SAAS,GAAW,GAAW,GAAmB;AAGhE,SAAQ,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,OAAQ;AAC9C;AAaO,SAAS,cAAc,MAAgB,MAAgB;AAC5D,QAAM,CAAC,IAAI,IAAI,EAAE,IAAI,QAAQ,SAAS,IAAI,CAAC;AAC3C,QAAM,CAAC,IAAI,IAAI,EAAE,IAAI,QAAQ,SAAS,IAAI,CAAC;AAC3C,QAAM,SAAS,KAAK;AACpB,QAAM,SAAS,KAAK;AACpB,QAAM,SAAS,KAAK;AACpB,QAAM,KAAK,KAAK,KAAK,MAAM,IAAI,MAAM,CAAC;AACtC,QAAM,KAAK,KAAK,KAAK,MAAM,IAAI,MAAM,CAAC;AACtC,QAAM,SAAS,KAAK;AACpB,MAAI,SAAS,UAAU,IAAI,UAAU,IAAI,UAAU;AACnD,WAAS,SAAS,IAAI,IAAI,KAAK,KAAK,MAAM;AAG1C,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AAEX,QAAM,KAAK,IAAM,KAAK;AACtB,QAAM,KAAK,IAAM,KAAK;AACtB,QAAM,KAAK;AAEX,SAAO,KAAK,MAAM,SAAS,KAAK,OAAO,KAAK,SAAS,KAAK,OAAO,KAAK,SAAS,KAAK,OAAO,CAAC;AAC9F;AAIO,SAAS,SAAS,KAAyB;AAChD,MAAI,IAAI,IAAI,CAAC,IAAI;AACjB,MAAI,IAAI,IAAI,CAAC,IAAI;AACjB,MAAI,IAAI,IAAI,CAAC,IAAI;AACjB,MAAK,IAAI,UAAW,KAAK,KAAK,IAAI,SAAS,OAAO,GAAG,IAAI,IAAI;AAC7D,MAAK,IAAI,UAAW,KAAK,KAAK,IAAI,SAAS,OAAO,GAAG,IAAI,IAAI;AAC7D,MAAK,IAAI,UAAW,KAAK,KAAK,IAAI,SAAS,OAAO,GAAG,IAAI,IAAI;AAC7D,SAAO;AAAA,IACJ,IAAI,SAAS,IAAI,SAAS,IAAI;AAAA,IAC9B,IAAI,SAAS,IAAI,SAAS,IAAI;AAAA,IAC9B,IAAI,SAAS,IAAI,SAAS,IAAI;AAAA,EACjC;AACF;AAEA,MAAM,aAAa,IAAI,IAAI,KAAK;AAChC,MAAM,aAAa,IAAI,IAAI,IAAI,KAAK,KAAK;AAIlC,SAAS,QAAQ,KAAyB;AAC/C,QAAM,IAAI,IAAI,CAAC,IAAI;AACnB,QAAM,IAAI,IAAI,CAAC;AACf,QAAM,IAAI,IAAI,CAAC,IAAI;AAEnB,QAAM,KAAK,IAAI,aAAa,MAAM,IAAI,KAAK,IAAI,IAAI,aAAa,IAAI;AACpE,QAAM,KAAK,IAAI,aAAa,MAAM,IAAI,KAAK,IAAI,IAAI,aAAa,IAAI;AACpE,QAAM,KAAK,IAAI,aAAa,MAAM,IAAI,KAAK,IAAI,IAAI,aAAa,IAAI;AAEpE,QAAM,IAAI,MAAM,KAAK;AACrB,QAAM,IAAI,OAAO,KAAK;AACtB,QAAM,IAAI,OAAO,KAAK;AAEtB,SAAO,CAAC,GAAG,GAAG,CAAC;AACjB;",
  "names": []
}
