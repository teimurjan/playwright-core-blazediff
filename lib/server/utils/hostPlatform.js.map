{
  "version": 3,
  "sources": ["../../../src/server/utils/hostPlatform.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport os from 'os';\n\nimport { getLinuxDistributionInfoSync } from './linuxUtils';\n\nexport type HostPlatform = 'win64' |\n                           'mac10.13' |\n                           'mac10.14' |\n                           'mac10.15' |\n                           'mac11' | 'mac11-arm64' |\n                           'mac12' | 'mac12-arm64' |\n                           'mac13' | 'mac13-arm64' |\n                           'mac14' | 'mac14-arm64' |\n                           'mac15' | 'mac15-arm64' |\n                           'ubuntu18.04-x64' | 'ubuntu18.04-arm64' |\n                           'ubuntu20.04-x64' | 'ubuntu20.04-arm64' |\n                           'ubuntu22.04-x64' | 'ubuntu22.04-arm64' |\n                           'ubuntu24.04-x64' | 'ubuntu24.04-arm64' |\n                           'debian11-x64' | 'debian11-arm64' |\n                           'debian12-x64' | 'debian12-arm64' |\n                           'debian13-x64' | 'debian13-arm64' |\n                           '<unknown>';\n\nfunction calculatePlatform(): { hostPlatform: HostPlatform, isOfficiallySupportedPlatform: boolean } {\n  if (process.env.PLAYWRIGHT_HOST_PLATFORM_OVERRIDE) {\n    return {\n      hostPlatform: process.env.PLAYWRIGHT_HOST_PLATFORM_OVERRIDE as HostPlatform,\n      isOfficiallySupportedPlatform: false\n    };\n  }\n  const platform = os.platform();\n  if (platform === 'darwin') {\n    const ver = os.release().split('.').map((a: string) => parseInt(a, 10));\n    let macVersion = '';\n    if (ver[0] < 18) {\n      // Everything before 10.14 is considered 10.13.\n      macVersion = 'mac10.13';\n    } else if (ver[0] === 18) {\n      macVersion = 'mac10.14';\n    } else if (ver[0] === 19) {\n      macVersion = 'mac10.15';\n    } else {\n      // ver[0] >= 20\n      const LAST_STABLE_MACOS_MAJOR_VERSION = 15;\n      // Best-effort support for MacOS beta versions.\n      macVersion = 'mac' + Math.min(ver[0] - 9, LAST_STABLE_MACOS_MAJOR_VERSION);\n      // BigSur is the first version that might run on Apple Silicon.\n      if (os.cpus().some(cpu => cpu.model.includes('Apple')))\n        macVersion += '-arm64';\n    }\n    return { hostPlatform: macVersion as HostPlatform, isOfficiallySupportedPlatform: true };\n  }\n  if (platform === 'linux') {\n    if (!['x64', 'arm64'].includes(os.arch()))\n      return { hostPlatform: '<unknown>', isOfficiallySupportedPlatform: false };\n\n    const archSuffix = '-' + os.arch();\n    const distroInfo = getLinuxDistributionInfoSync();\n\n    // Pop!_OS is ubuntu-based and has the same versions.\n    // KDE Neon is ubuntu-based and has the same versions.\n    // TUXEDO OS is ubuntu-based and has the same versions.\n    if (distroInfo?.id === 'ubuntu' || distroInfo?.id === 'pop' || distroInfo?.id === 'neon' || distroInfo?.id === 'tuxedo') {\n      const isUbuntu = distroInfo?.id === 'ubuntu';\n      const version = distroInfo?.version;\n      const major = parseInt(distroInfo.version, 10);\n      if (major < 20)\n        return { hostPlatform: ('ubuntu18.04' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform: false };\n      if (major < 22)\n        return { hostPlatform: ('ubuntu20.04' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform: isUbuntu && version === '20.04' };\n      if (major < 24)\n        return { hostPlatform: ('ubuntu22.04' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform: isUbuntu && version === '22.04' };\n      if (major < 26)\n        return { hostPlatform: ('ubuntu24.04' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform: isUbuntu && version === '24.04' };\n      return { hostPlatform: ('ubuntu' + distroInfo.version + archSuffix) as HostPlatform, isOfficiallySupportedPlatform: false };\n    }\n    // Linux Mint is ubuntu-based but does not have the same versions\n    if (distroInfo?.id === 'linuxmint') {\n      const mintMajor = parseInt(distroInfo.version, 10);\n      if (mintMajor <= 20)\n        return { hostPlatform: ('ubuntu20.04' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform: false };\n      if (mintMajor === 21)\n        return { hostPlatform: ('ubuntu22.04' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform: false };\n      return { hostPlatform: ('ubuntu24.04' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform: false };\n    }\n    if (distroInfo?.id === 'debian' || distroInfo?.id === 'raspbian') {\n      const isOfficiallySupportedPlatform = distroInfo?.id === 'debian';\n      if (distroInfo?.version === '11')\n        return { hostPlatform: ('debian11' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform };\n      if (distroInfo?.version === '12')\n        return { hostPlatform: ('debian12' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform };\n      if (distroInfo?.version === '13')\n        return { hostPlatform: ('debian13' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform };\n      // use most recent supported release for 'debian testing' and 'unstable'.\n      // they never include a numeric version entry in /etc/os-release.\n      if (distroInfo?.version === '')\n        return { hostPlatform: ('debian13' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform };\n    }\n    return { hostPlatform: ('ubuntu20.04' + archSuffix) as HostPlatform, isOfficiallySupportedPlatform: false };\n  }\n  if (platform === 'win32')\n    return { hostPlatform: 'win64', isOfficiallySupportedPlatform: true };\n  return { hostPlatform: '<unknown>', isOfficiallySupportedPlatform: false };\n}\n\nexport const { hostPlatform, isOfficiallySupportedPlatform } = calculatePlatform();\n"],
  "mappings": "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",
  "names": ["os", "isOfficiallySupportedPlatform"]
}
