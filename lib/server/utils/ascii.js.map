{
  "version": 3,
  "sources": ["../../../src/server/utils/ascii.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function wrapInASCIIBox(text: string, padding = 0): string {\n  const lines = text.split('\\n');\n  const maxLength = Math.max(...lines.map(line => line.length));\n  return [\n    '\u2554' + '\u2550'.repeat(maxLength + padding * 2) + '\u2557',\n    ...lines.map(line => '\u2551' + ' '.repeat(padding) + line + ' '.repeat(maxLength - line.length + padding) + '\u2551'),\n    '\u255A' + '\u2550'.repeat(maxLength + padding * 2) + '\u255D',\n  ].join('\\n');\n}\n\nexport function jsonStringifyForceASCII(object: any): string {\n  return JSON.stringify(object).replace(\n      /[\\u007f-\\uffff]/g,\n      c => '\\\\u' + ('0000' + c.charCodeAt(0).toString(16)).slice(-4)\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBO,SAAS,eAAe,MAAc,UAAU,GAAW;AAChE,QAAM,QAAQ,KAAK,MAAM,IAAI;AAC7B,QAAM,YAAY,KAAK,IAAI,GAAG,MAAM,IAAI,UAAQ,KAAK,MAAM,CAAC;AAC5D,SAAO;AAAA,IACL,WAAM,SAAI,OAAO,YAAY,UAAU,CAAC,IAAI;AAAA,IAC5C,GAAG,MAAM,IAAI,UAAQ,WAAM,IAAI,OAAO,OAAO,IAAI,OAAO,IAAI,OAAO,YAAY,KAAK,SAAS,OAAO,IAAI,QAAG;AAAA,IAC3G,WAAM,SAAI,OAAO,YAAY,UAAU,CAAC,IAAI;AAAA,EAC9C,EAAE,KAAK,IAAI;AACb;AAEO,SAAS,wBAAwB,QAAqB;AAC3D,SAAO,KAAK,UAAU,MAAM,EAAE;AAAA,IAC1B;AAAA,IACA,OAAK,SAAS,SAAS,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,MAAM,EAAE;AAAA,EACjE;AACF;",
  "names": []
}
