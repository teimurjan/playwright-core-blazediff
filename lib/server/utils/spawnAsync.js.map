{
  "version": 3,
  "sources": ["../../../src/server/utils/spawnAsync.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { spawn } from 'child_process';\n\nimport type { SpawnOptions } from 'child_process';\n\nexport function spawnAsync(cmd: string, args: string[], options: SpawnOptions = {}): Promise<{stdout: string, stderr: string, code: number | null, error?: Error}> {\n  const process = spawn(cmd, args, Object.assign({ windowsHide: true }, options));\n\n  return new Promise(resolve => {\n    let stdout = '';\n    let stderr = '';\n    /* eslint-disable no-restricted-properties */\n    if (process.stdout)\n      process.stdout.on('data', data => stdout += data.toString());\n    if (process.stderr)\n      process.stderr.on('data', data => stderr += data.toString());\n    /* eslint-enable no-restricted-properties */\n    process.on('close', code => resolve({ stdout, stderr, code }));\n    process.on('error', error => resolve({ stdout, stderr, code: 0, error }));\n  });\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,2BAAsB;AAIf,SAAS,WAAW,KAAa,MAAgB,UAAwB,CAAC,GAAkF;AACjK,QAAM,cAAU,4BAAM,KAAK,MAAM,OAAO,OAAO,EAAE,aAAa,KAAK,GAAG,OAAO,CAAC;AAE9E,SAAO,IAAI,QAAQ,aAAW;AAC5B,QAAI,SAAS;AACb,QAAI,SAAS;AAEb,QAAI,QAAQ;AACV,cAAQ,OAAO,GAAG,QAAQ,UAAQ,UAAU,KAAK,SAAS,CAAC;AAC7D,QAAI,QAAQ;AACV,cAAQ,OAAO,GAAG,QAAQ,UAAQ,UAAU,KAAK,SAAS,CAAC;AAE7D,YAAQ,GAAG,SAAS,UAAQ,QAAQ,EAAE,QAAQ,QAAQ,KAAK,CAAC,CAAC;AAC7D,YAAQ,GAAG,SAAS,WAAS,QAAQ,EAAE,QAAQ,QAAQ,MAAM,GAAG,MAAM,CAAC,CAAC;AAAA,EAC1E,CAAC;AACH;",
  "names": []
}
