{
  "version": 3,
  "sources": ["../../../src/server/utils/expectUtils.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isRegExp, isString } from '../../utils/isomorphic/rtti';\n\nimport type { ExpectedTextValue } from '@protocol/channels';\n\nexport function serializeExpectedTextValues(items: (string | RegExp)[], options: { matchSubstring?: boolean, normalizeWhiteSpace?: boolean, ignoreCase?: boolean } = {}): ExpectedTextValue[] {\n  return items.map(i => ({\n    string: isString(i) ? i : undefined,\n    regexSource: isRegExp(i) ? i.source : undefined,\n    regexFlags: isRegExp(i) ? i.flags : undefined,\n    matchSubstring: options.matchSubstring,\n    ignoreCase: options.ignoreCase,\n    normalizeWhiteSpace: options.normalizeWhiteSpace,\n  }));\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,kBAAmC;AAI5B,SAAS,4BAA4B,OAA4B,UAA6F,CAAC,GAAwB;AAC5L,SAAO,MAAM,IAAI,QAAM;AAAA,IACrB,YAAQ,sBAAS,CAAC,IAAI,IAAI;AAAA,IAC1B,iBAAa,sBAAS,CAAC,IAAI,EAAE,SAAS;AAAA,IACtC,gBAAY,sBAAS,CAAC,IAAI,EAAE,QAAQ;AAAA,IACpC,gBAAgB,QAAQ;AAAA,IACxB,YAAY,QAAQ;AAAA,IACpB,qBAAqB,QAAQ;AAAA,EAC/B,EAAE;AACJ;",
  "names": []
}
