{
  "version": 3,
  "sources": ["../../../src/server/utils/linuxUtils.ts"],
  "sourcesContent": ["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\n\nlet didFailToReadOSRelease = false;\nlet osRelease: {\n  id: string,\n  version: string,\n} | undefined;\n\nexport function getLinuxDistributionInfoSync(): { id: string, version: string } | undefined {\n  if (process.platform !== 'linux')\n    return undefined;\n  if (!osRelease && !didFailToReadOSRelease) {\n    try {\n      // List of /etc/os-release values for different distributions could be\n      // found here: https://gist.github.com/aslushnikov/8ceddb8288e4cf9db3039c02e0f4fb75\n      const osReleaseText = fs.readFileSync('/etc/os-release', 'utf8');\n      const fields = parseOSReleaseText(osReleaseText);\n      osRelease = {\n        id: fields.get('id') ?? '',\n        version: fields.get('version_id') ?? '',\n      };\n    } catch (e) {\n      didFailToReadOSRelease = true;\n    }\n  }\n  return osRelease;\n}\n\nfunction parseOSReleaseText(osReleaseText: string): Map<string, string> {\n  const fields = new Map();\n  for (const line of osReleaseText.split('\\n')) {\n    const tokens = line.split('=');\n    const name = tokens.shift();\n    let value = tokens.join('=').trim();\n    if (value.startsWith('\"') && value.endsWith('\"'))\n      value = value.substring(1, value.length - 1);\n    if (!name)\n      continue;\n    fields.set(name.toLowerCase(), value);\n  }\n  return fields;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA,gBAAe;AAEf,IAAI,yBAAyB;AAC7B,IAAI;AAKG,SAAS,+BAA4E;AAC1F,MAAI,QAAQ,aAAa;AACvB,WAAO;AACT,MAAI,CAAC,aAAa,CAAC,wBAAwB;AACzC,QAAI;AAGF,YAAM,gBAAgB,UAAAA,QAAG,aAAa,mBAAmB,MAAM;AAC/D,YAAM,SAAS,mBAAmB,aAAa;AAC/C,kBAAY;AAAA,QACV,IAAI,OAAO,IAAI,IAAI,KAAK;AAAA,QACxB,SAAS,OAAO,IAAI,YAAY,KAAK;AAAA,MACvC;AAAA,IACF,SAAS,GAAG;AACV,+BAAyB;AAAA,IAC3B;AAAA,EACF;AACA,SAAO;AACT;AAEA,SAAS,mBAAmB,eAA4C;AACtE,QAAM,SAAS,oBAAI,IAAI;AACvB,aAAW,QAAQ,cAAc,MAAM,IAAI,GAAG;AAC5C,UAAM,SAAS,KAAK,MAAM,GAAG;AAC7B,UAAM,OAAO,OAAO,MAAM;AAC1B,QAAI,QAAQ,OAAO,KAAK,GAAG,EAAE,KAAK;AAClC,QAAI,MAAM,WAAW,GAAG,KAAK,MAAM,SAAS,GAAG;AAC7C,cAAQ,MAAM,UAAU,GAAG,MAAM,SAAS,CAAC;AAC7C,QAAI,CAAC;AACH;AACF,WAAO,IAAI,KAAK,YAAY,GAAG,KAAK;AAAA,EACtC;AACA,SAAO;AACT;",
  "names": ["fs"]
}
