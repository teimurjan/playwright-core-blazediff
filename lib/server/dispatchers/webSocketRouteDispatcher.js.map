{
  "version": 3,
  "sources": ["../../../src/server/dispatchers/webSocketRouteDispatcher.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Page } from '../page';\nimport { Dispatcher } from './dispatcher';\nimport { PageDispatcher } from './pageDispatcher';\nimport * as rawWebSocketMockSource from '../../generated/webSocketMockSource';\nimport { SdkObject } from '../instrumentation';\nimport { urlMatches } from '../../utils/isomorphic/urlMatch';\nimport { eventsHelper } from '../utils/eventsHelper';\n\nimport type { BrowserContextDispatcher } from './browserContextDispatcher';\nimport type { BrowserContext } from '../browserContext';\nimport type { DispatcherConnection } from './dispatcher';\nimport type { Frame } from '../frames';\nimport type * as ws from '@injected/webSocketMock';\nimport type * as channels from '@protocol/channels';\nimport type { Progress } from '@protocol/progress';\nimport type { InitScript, PageBinding } from '../page';\n\nexport class WebSocketRouteDispatcher extends Dispatcher<SdkObject, channels.WebSocketRouteChannel, PageDispatcher | BrowserContextDispatcher> implements channels.WebSocketRouteChannel {\n  _type_WebSocketRoute = true;\n  private _id: string;\n  private _frame: Frame;\n  private static _idToDispatcher = new Map<string, WebSocketRouteDispatcher>();\n\n  constructor(scope: PageDispatcher | BrowserContextDispatcher, id: string, url: string, frame: Frame) {\n    super(scope, new SdkObject(scope._object, 'webSocketRoute'), 'WebSocketRoute', { url });\n    this._id = id;\n    this._frame = frame;\n    this._eventListeners.push(\n        // When the frame navigates or detaches, there will be no more communication\n        // from the mock websocket, so pretend like it was closed.\n        eventsHelper.addEventListener(frame._page, Page.Events.InternalFrameNavigatedToNewDocument, (frame: Frame) => {\n          if (frame === this._frame)\n            this._executionContextGone();\n        }),\n        eventsHelper.addEventListener(frame._page, Page.Events.FrameDetached, (frame: Frame) => {\n          if (frame === this._frame)\n            this._executionContextGone();\n        }),\n        eventsHelper.addEventListener(frame._page, Page.Events.Close, () => this._executionContextGone()),\n        eventsHelper.addEventListener(frame._page, Page.Events.Crash, () => this._executionContextGone()),\n    );\n    WebSocketRouteDispatcher._idToDispatcher.set(this._id, this);\n    (scope as any)._dispatchEvent('webSocketRoute', { webSocketRoute: this });\n  }\n\n  static async install(progress: Progress, connection: DispatcherConnection, target: Page | BrowserContext): Promise<InitScript> {\n    const context = target instanceof Page ? target.browserContext : target;\n    let data = context.getBindingClient(kBindingName) as BindingData | undefined;\n    if (data && data.connection !== connection)\n      throw new Error('Another client is already routing WebSockets');\n    if (!data) {\n      data = { counter: 0, connection, binding: null as any };\n      data.binding = await context.exposeBinding(progress, kBindingName, false, (source, payload: ws.BindingPayload) => {\n        if (payload.type === 'onCreate') {\n          const contextDispatcher = connection.existingDispatcher<BrowserContextDispatcher>(context);\n          const pageDispatcher = contextDispatcher ? PageDispatcher.fromNullable(contextDispatcher, source.page) : undefined;\n          let scope: PageDispatcher | BrowserContextDispatcher | undefined;\n          if (pageDispatcher && matchesPattern(pageDispatcher, context._options.baseURL, payload.url))\n            scope = pageDispatcher;\n          else if (contextDispatcher && matchesPattern(contextDispatcher, context._options.baseURL, payload.url))\n            scope = contextDispatcher;\n          if (scope) {\n            new WebSocketRouteDispatcher(scope, payload.id, payload.url, source.frame);\n          } else {\n            const request: ws.PassthroughRequest = { id: payload.id, type: 'passthrough' };\n            source.frame.evaluateExpression(`globalThis.__pwWebSocketDispatch(${JSON.stringify(request)})`).catch(() => {});\n          }\n          return;\n        }\n\n        const dispatcher = WebSocketRouteDispatcher._idToDispatcher.get(payload.id);\n        if (payload.type === 'onMessageFromPage')\n          dispatcher?._dispatchEvent('messageFromPage', { message: payload.data.data, isBase64: payload.data.isBase64 });\n        if (payload.type === 'onMessageFromServer')\n          dispatcher?._dispatchEvent('messageFromServer', { message: payload.data.data, isBase64: payload.data.isBase64 });\n        if (payload.type === 'onClosePage')\n          dispatcher?._dispatchEvent('closePage', { code: payload.code, reason: payload.reason, wasClean: payload.wasClean });\n        if (payload.type === 'onCloseServer')\n          dispatcher?._dispatchEvent('closeServer', { code: payload.code, reason: payload.reason, wasClean: payload.wasClean });\n      }, data);\n    }\n    ++data.counter;\n\n    return await target.addInitScript(progress, `\n      (() => {\n        const module = {};\n        ${rawWebSocketMockSource.source}\n        (module.exports.inject())(globalThis);\n      })();\n    `);\n  }\n\n  static async uninstall(connection: DispatcherConnection, target: Page | BrowserContext, initScript: InitScript) {\n    const context = target instanceof Page ? target.browserContext : target;\n    const data = context.getBindingClient(kBindingName) as BindingData | undefined;\n    if (!data || data.connection !== connection)\n      return;\n    if (--data.counter <= 0)\n      await context.removeExposedBindings([data.binding]);\n    await target.removeInitScripts([initScript]);\n  }\n\n  async connect(params: channels.WebSocketRouteConnectParams, progress: Progress) {\n    await this._evaluateAPIRequest(progress, { id: this._id, type: 'connect' });\n  }\n\n  async ensureOpened(params: channels.WebSocketRouteEnsureOpenedParams, progress: Progress) {\n    await this._evaluateAPIRequest(progress, { id: this._id, type: 'ensureOpened' });\n  }\n\n  async sendToPage(params: channels.WebSocketRouteSendToPageParams, progress: Progress) {\n    await this._evaluateAPIRequest(progress, { id: this._id, type: 'sendToPage', data: { data: params.message, isBase64: params.isBase64 } });\n  }\n\n  async sendToServer(params: channels.WebSocketRouteSendToServerParams, progress: Progress) {\n    await this._evaluateAPIRequest(progress, { id: this._id, type: 'sendToServer', data: { data: params.message, isBase64: params.isBase64 } });\n  }\n\n  async closePage(params: channels.WebSocketRouteClosePageParams, progress: Progress) {\n    await this._evaluateAPIRequest(progress, { id: this._id, type: 'closePage', code: params.code, reason: params.reason, wasClean: params.wasClean });\n  }\n\n  async closeServer(params: channels.WebSocketRouteCloseServerParams, progress: Progress) {\n    await this._evaluateAPIRequest(progress, { id: this._id, type: 'closeServer', code: params.code, reason: params.reason, wasClean: params.wasClean });\n  }\n\n  private async _evaluateAPIRequest(progress: Progress, request: ws.APIRequest) {\n    await progress.race(this._frame.evaluateExpression(`globalThis.__pwWebSocketDispatch(${JSON.stringify(request)})`).catch(() => {}));\n  }\n\n  override _onDispose() {\n    WebSocketRouteDispatcher._idToDispatcher.delete(this._id);\n  }\n\n  private _executionContextGone() {\n    // We could enter here after being disposed upon page closure:\n    // - first from the recursive dispose inintiated by PageDispatcher;\n    // - then from our own page.on('close') listener.\n    if (!this._disposed) {\n      this._dispatchEvent('closePage', { wasClean: true });\n      this._dispatchEvent('closeServer', { wasClean: true });\n    }\n  }\n}\n\nfunction matchesPattern(dispatcher: PageDispatcher | BrowserContextDispatcher, baseURL: string | undefined, url: string) {\n  for (const pattern of dispatcher._webSocketInterceptionPatterns || []) {\n    const urlMatch = pattern.regexSource ? new RegExp(pattern.regexSource, pattern.regexFlags) : pattern.glob;\n    if (urlMatches(baseURL, url, urlMatch, true))\n      return true;\n  }\n  return false;\n}\n\nconst kBindingName = '__pwWebSocketBinding';\ntype BindingData = { counter: number, connection: DispatcherConnection, binding: PageBinding };\n"],
  "mappings": "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",
  "names": ["frame"]
}
