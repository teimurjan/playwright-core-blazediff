{
  "version": 3,
  "sources": ["../../../src/server/dispatchers/pageDispatcher.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Page, Worker } from '../page';\nimport { Dispatcher } from './dispatcher';\nimport { parseError } from '../errors';\nimport { ArtifactDispatcher } from './artifactDispatcher';\nimport { ElementHandleDispatcher } from './elementHandlerDispatcher';\nimport { FrameDispatcher } from './frameDispatcher';\nimport { JSHandleDispatcher, parseArgument, serializeResult } from './jsHandleDispatcher';\nimport { RequestDispatcher } from './networkDispatchers';\nimport { ResponseDispatcher } from './networkDispatchers';\nimport { RouteDispatcher, WebSocketDispatcher } from './networkDispatchers';\nimport { WebSocketRouteDispatcher } from './webSocketRouteDispatcher';\nimport { SdkObject } from '../instrumentation';\nimport { urlMatches } from '../../utils/isomorphic/urlMatch';\n\nimport type { Artifact } from '../artifact';\nimport type { BrowserContext } from '../browserContext';\nimport type { CRCoverage } from '../chromium/crCoverage';\nimport type { Download } from '../download';\nimport type { FileChooser } from '../fileChooser';\nimport type { JSHandle } from '../javascript';\nimport type { BrowserContextDispatcher } from './browserContextDispatcher';\nimport type { Frame } from '../frames';\nimport type { RouteHandler } from '../network';\nimport type { InitScript, PageBinding } from '../page';\nimport type * as channels from '@protocol/channels';\nimport type { Progress } from '@protocol/progress';\n\nexport class PageDispatcher extends Dispatcher<Page, channels.PageChannel, BrowserContextDispatcher> implements channels.PageChannel {\n  _type_EventTarget = true;\n  _type_Page = true;\n  private _page: Page;\n  _subscriptions = new Set<channels.PageUpdateSubscriptionParams['event']>();\n  _webSocketInterceptionPatterns: channels.PageSetWebSocketInterceptionPatternsParams['patterns'] = [];\n  private _bindings: PageBinding[] = [];\n  private _initScripts: InitScript[] = [];\n  private _requestInterceptor: RouteHandler;\n  private _interceptionUrlMatchers: (string | RegExp)[] = [];\n  private _routeWebSocketInitScript: InitScript | undefined;\n  private _locatorHandlers = new Set<number>();\n  private _jsCoverageActive = false;\n  private _cssCoverageActive = false;\n\n  static from(parentScope: BrowserContextDispatcher, page: Page): PageDispatcher {\n    return PageDispatcher.fromNullable(parentScope, page)!;\n  }\n\n  static fromNullable(parentScope: BrowserContextDispatcher, page: Page | undefined): PageDispatcher | undefined {\n    if (!page)\n      return undefined;\n    const result = parentScope.connection.existingDispatcher<PageDispatcher>(page);\n    return result || new PageDispatcher(parentScope, page);\n  }\n\n  private constructor(parentScope: BrowserContextDispatcher, page: Page) {\n    // TODO: theoretically, there could be more than one frame already.\n    // If we split pageCreated and pageReady, there should be no main frame during pageCreated.\n\n    // We will reparent it to the page below using adopt.\n    const mainFrame = FrameDispatcher.from(parentScope, page.mainFrame());\n\n    super(parentScope, page, 'Page', {\n      mainFrame,\n      viewportSize: page.emulatedSize()?.viewport,\n      isClosed: page.isClosed(),\n      opener: PageDispatcher.fromNullable(parentScope, page.opener())\n    });\n\n    this.adopt(mainFrame);\n\n    this._page = page;\n    this._requestInterceptor = (route, request) => {\n      const matchesSome = this._interceptionUrlMatchers.some(urlMatch => urlMatches(this._page.browserContext._options.baseURL, request.url(), urlMatch));\n      if (!matchesSome) {\n        route.continue({ isFallback: true }).catch(() => {});\n        return;\n      }\n      this._dispatchEvent('route', { route: new RouteDispatcher(RequestDispatcher.from(this.parentScope(), request), route) });\n    };\n\n    this.addObjectListener(Page.Events.Close, () => {\n      this._dispatchEvent('close');\n      this._dispose();\n    });\n    this.addObjectListener(Page.Events.Crash, () => this._dispatchEvent('crash'));\n    this.addObjectListener(Page.Events.Download, (download: Download) => {\n      // Artifact can outlive the page, so bind to the context scope.\n      this._dispatchEvent('download', { url: download.url, suggestedFilename: download.suggestedFilename(), artifact: ArtifactDispatcher.from(parentScope, download.artifact) });\n    });\n    this.addObjectListener(Page.Events.EmulatedSizeChanged, () => this._dispatchEvent('viewportSizeChanged', { viewportSize: page.emulatedSize()?.viewport }));\n    this.addObjectListener(Page.Events.FileChooser, (fileChooser: FileChooser) => this._dispatchEvent('fileChooser', {\n      element: ElementHandleDispatcher.from(mainFrame, fileChooser.element()),\n      isMultiple: fileChooser.isMultiple()\n    }));\n    this.addObjectListener(Page.Events.FrameAttached, frame => this._onFrameAttached(frame));\n    this.addObjectListener(Page.Events.FrameDetached, frame => this._onFrameDetached(frame));\n    this.addObjectListener(Page.Events.LocatorHandlerTriggered, (uid: number) => this._dispatchEvent('locatorHandlerTriggered', { uid }));\n    this.addObjectListener(Page.Events.WebSocket, webSocket => this._dispatchEvent('webSocket', { webSocket: new WebSocketDispatcher(this, webSocket) }));\n    this.addObjectListener(Page.Events.Worker, worker => this._dispatchEvent('worker', { worker: new WorkerDispatcher(this, worker) }));\n    this.addObjectListener(Page.Events.Video, (artifact: Artifact) => this._dispatchEvent('video', { artifact: ArtifactDispatcher.from(parentScope, artifact) }));\n    if (page.video)\n      this._dispatchEvent('video', { artifact: ArtifactDispatcher.from(this.parentScope(), page.video) });\n    // Ensure client knows about all frames.\n    const frames = page.frameManager.frames();\n    for (let i = 1; i < frames.length; i++)\n      this._onFrameAttached(frames[i]);\n  }\n\n  page(): Page {\n    return this._page;\n  }\n\n  async exposeBinding(params: channels.PageExposeBindingParams, progress: Progress): Promise<void> {\n    const binding = await this._page.exposeBinding(progress, params.name, !!params.needsHandle, (source, ...args) => {\n      // When reusing the context, we might have some bindings called late enough,\n      // after context and page dispatchers have been disposed.\n      if (this._disposed)\n        return;\n      const binding = new BindingCallDispatcher(this, params.name, !!params.needsHandle, source, args);\n      this._dispatchEvent('bindingCall', { binding });\n      return binding.promise();\n    });\n    this._bindings.push(binding);\n  }\n\n  async setExtraHTTPHeaders(params: channels.PageSetExtraHTTPHeadersParams, progress: Progress): Promise<void> {\n    await this._page.setExtraHTTPHeaders(progress, params.headers);\n  }\n\n  async reload(params: channels.PageReloadParams, progress: Progress): Promise<channels.PageReloadResult> {\n    return { response: ResponseDispatcher.fromNullable(this.parentScope(), await this._page.reload(progress, params)) };\n  }\n\n  async goBack(params: channels.PageGoBackParams, progress: Progress): Promise<channels.PageGoBackResult> {\n    return { response: ResponseDispatcher.fromNullable(this.parentScope(), await this._page.goBack(progress, params)) };\n  }\n\n  async goForward(params: channels.PageGoForwardParams, progress: Progress): Promise<channels.PageGoForwardResult> {\n    return { response: ResponseDispatcher.fromNullable(this.parentScope(), await this._page.goForward(progress, params)) };\n  }\n\n  async requestGC(params: channels.PageRequestGCParams, progress: Progress): Promise<channels.PageRequestGCResult> {\n    await progress.race(this._page.requestGC());\n  }\n\n  async registerLocatorHandler(params: channels.PageRegisterLocatorHandlerParams, progress: Progress): Promise<channels.PageRegisterLocatorHandlerResult> {\n    const uid = this._page.registerLocatorHandler(params.selector, params.noWaitAfter);\n    this._locatorHandlers.add(uid);\n    return { uid };\n  }\n\n  async resolveLocatorHandlerNoReply(params: channels.PageResolveLocatorHandlerNoReplyParams, progress: Progress): Promise<void> {\n    this._page.resolveLocatorHandler(params.uid, params.remove);\n  }\n\n  async unregisterLocatorHandler(params: channels.PageUnregisterLocatorHandlerParams, progress: Progress): Promise<void> {\n    this._page.unregisterLocatorHandler(params.uid);\n    this._locatorHandlers.delete(params.uid);\n  }\n\n  async emulateMedia(params: channels.PageEmulateMediaParams, progress: Progress): Promise<void> {\n    await this._page.emulateMedia(progress, {\n      media: params.media,\n      colorScheme: params.colorScheme,\n      reducedMotion: params.reducedMotion,\n      forcedColors: params.forcedColors,\n      contrast: params.contrast,\n    });\n  }\n\n  async setViewportSize(params: channels.PageSetViewportSizeParams, progress: Progress): Promise<void> {\n    await this._page.setViewportSize(progress, params.viewportSize);\n  }\n\n  async addInitScript(params: channels.PageAddInitScriptParams, progress: Progress): Promise<void> {\n    this._initScripts.push(await this._page.addInitScript(progress, params.source));\n  }\n\n  async setNetworkInterceptionPatterns(params: channels.PageSetNetworkInterceptionPatternsParams, progress: Progress): Promise<void> {\n    const hadMatchers = this._interceptionUrlMatchers.length > 0;\n    if (!params.patterns.length) {\n      // Note: it is important to remove the interceptor when there are no patterns,\n      // because that disables the slow-path interception in the browser itself.\n      if (hadMatchers)\n        await this._page.removeRequestInterceptor(this._requestInterceptor);\n      this._interceptionUrlMatchers = [];\n    } else {\n      this._interceptionUrlMatchers = params.patterns.map(pattern => pattern.regexSource ? new RegExp(pattern.regexSource, pattern.regexFlags!) : pattern.glob!);\n      if (!hadMatchers)\n        await this._page.addRequestInterceptor(progress, this._requestInterceptor);\n    }\n  }\n\n  async setWebSocketInterceptionPatterns(params: channels.PageSetWebSocketInterceptionPatternsParams, progress: Progress): Promise<void> {\n    this._webSocketInterceptionPatterns = params.patterns;\n    if (params.patterns.length && !this._routeWebSocketInitScript)\n      this._routeWebSocketInitScript = await WebSocketRouteDispatcher.install(progress, this.connection, this._page);\n  }\n\n  async expectScreenshot(params: channels.PageExpectScreenshotParams, progress: Progress): Promise<channels.PageExpectScreenshotResult> {\n    const mask: { frame: Frame, selector: string }[] = (params.mask || []).map(({ frame, selector }) => ({\n      frame: (frame as FrameDispatcher)._object,\n      selector,\n    }));\n    const locator: { frame: Frame, selector: string } | undefined = params.locator ? {\n      frame: (params.locator.frame as FrameDispatcher)._object,\n      selector: params.locator.selector,\n    } : undefined;\n    return await this._page.expectScreenshot(progress, {\n      ...params,\n      locator,\n      mask,\n    });\n  }\n\n  async screenshot(params: channels.PageScreenshotParams, progress: Progress): Promise<channels.PageScreenshotResult> {\n    const mask: { frame: Frame, selector: string }[] = (params.mask || []).map(({ frame, selector }) => ({\n      frame: (frame as FrameDispatcher)._object,\n      selector,\n    }));\n    return { binary: await this._page.screenshot(progress, { ...params, mask }) };\n  }\n\n  async close(params: channels.PageCloseParams, progress: Progress): Promise<void> {\n    if (!params.runBeforeUnload)\n      progress.metadata.potentiallyClosesScope = true;\n    await this._page.close(params);\n  }\n\n  async updateSubscription(params: channels.PageUpdateSubscriptionParams, progress: Progress): Promise<void> {\n    // Note: progress is ignored because this operation is not cancellable and should not block in the browser anyway.\n    if (params.event === 'fileChooser')\n      await this._page.setFileChooserInterceptedBy(params.enabled, this);\n    if (params.enabled)\n      this._subscriptions.add(params.event);\n    else\n      this._subscriptions.delete(params.event);\n  }\n\n  async keyboardDown(params: channels.PageKeyboardDownParams, progress: Progress): Promise<void> {\n    await this._page.keyboard.down(progress, params.key);\n  }\n\n  async keyboardUp(params: channels.PageKeyboardUpParams, progress: Progress): Promise<void> {\n    await this._page.keyboard.up(progress, params.key);\n  }\n\n  async keyboardInsertText(params: channels.PageKeyboardInsertTextParams, progress: Progress): Promise<void> {\n    await this._page.keyboard.insertText(progress, params.text);\n  }\n\n  async keyboardType(params: channels.PageKeyboardTypeParams, progress: Progress): Promise<void> {\n    await this._page.keyboard.type(progress, params.text, params);\n  }\n\n  async keyboardPress(params: channels.PageKeyboardPressParams, progress: Progress): Promise<void> {\n    await this._page.keyboard.press(progress, params.key, params);\n  }\n\n  async mouseMove(params: channels.PageMouseMoveParams, progress: Progress): Promise<void> {\n    progress.metadata.point = { x: params.x, y: params.y };\n    await this._page.mouse.move(progress, params.x, params.y, params);\n  }\n\n  async mouseDown(params: channels.PageMouseDownParams, progress: Progress): Promise<void> {\n    progress.metadata.point = this._page.mouse.currentPoint();\n    await this._page.mouse.down(progress, params);\n  }\n\n  async mouseUp(params: channels.PageMouseUpParams, progress: Progress): Promise<void> {\n    progress.metadata.point = this._page.mouse.currentPoint();\n    await this._page.mouse.up(progress, params);\n  }\n\n  async mouseClick(params: channels.PageMouseClickParams, progress: Progress): Promise<void> {\n    progress.metadata.point = { x: params.x, y: params.y };\n    await this._page.mouse.click(progress, params.x, params.y, params);\n  }\n\n  async mouseWheel(params: channels.PageMouseWheelParams, progress: Progress): Promise<void> {\n    await this._page.mouse.wheel(progress, params.deltaX, params.deltaY);\n  }\n\n  async touchscreenTap(params: channels.PageTouchscreenTapParams, progress: Progress): Promise<void> {\n    progress.metadata.point = { x: params.x, y: params.y };\n    await this._page.touchscreen.tap(progress, params.x, params.y);\n  }\n\n  async accessibilitySnapshot(params: channels.PageAccessibilitySnapshotParams, progress: Progress): Promise<channels.PageAccessibilitySnapshotResult> {\n    const rootAXNode = await progress.race(this._page.accessibility.snapshot({\n      interestingOnly: params.interestingOnly,\n      root: params.root ? (params.root as ElementHandleDispatcher)._elementHandle : undefined\n    }));\n    return { rootAXNode: rootAXNode || undefined };\n  }\n\n  async pdf(params: channels.PagePdfParams, progress: Progress): Promise<channels.PagePdfResult> {\n    if (!this._page.pdf)\n      throw new Error('PDF generation is only supported for Headless Chromium');\n    const buffer = await progress.race(this._page.pdf(params));\n    return { pdf: buffer };\n  }\n\n  async snapshotForAI(params: channels.PageSnapshotForAIParams, progress: Progress): Promise<channels.PageSnapshotForAIResult> {\n    return { snapshot: await this._page.snapshotForAI(progress) };\n  }\n\n  async bringToFront(params: channels.PageBringToFrontParams, progress: Progress): Promise<void> {\n    await progress.race(this._page.bringToFront());\n  }\n\n  async startJSCoverage(params: channels.PageStartJSCoverageParams, progress: Progress): Promise<void> {\n    const coverage = this._page.coverage as CRCoverage;\n    await coverage.startJSCoverage(progress, params);\n    this._jsCoverageActive = true;\n  }\n\n  async stopJSCoverage(params: channels.PageStopJSCoverageParams, progress: Progress): Promise<channels.PageStopJSCoverageResult> {\n    this._jsCoverageActive = false;\n    const coverage = this._page.coverage as CRCoverage;\n    return await coverage.stopJSCoverage();\n  }\n\n  async startCSSCoverage(params: channels.PageStartCSSCoverageParams, progress: Progress): Promise<void> {\n    const coverage = this._page.coverage as CRCoverage;\n    await coverage.startCSSCoverage(progress, params);\n    this._cssCoverageActive = true;\n  }\n\n  async stopCSSCoverage(params: channels.PageStopCSSCoverageParams, progress: Progress): Promise<channels.PageStopCSSCoverageResult> {\n    this._cssCoverageActive = false;\n    const coverage = this._page.coverage as CRCoverage;\n    return await coverage.stopCSSCoverage();\n  }\n\n  _onFrameAttached(frame: Frame) {\n    this._dispatchEvent('frameAttached', { frame: FrameDispatcher.from(this.parentScope(), frame) });\n  }\n\n  _onFrameDetached(frame: Frame) {\n    this._dispatchEvent('frameDetached', { frame: FrameDispatcher.from(this.parentScope(), frame) });\n  }\n\n  override _onDispose() {\n    // Avoid protocol calls for the closed page.\n    if (this._page.isClosedOrClosingOrCrashed())\n      return;\n\n    // Cleanup properly and leave the page in a good state. Other clients may still connect and use it.\n    this._interceptionUrlMatchers = [];\n    this._page.removeRequestInterceptor(this._requestInterceptor).catch(() => {});\n    this._page.removeExposedBindings(this._bindings).catch(() => {});\n    this._bindings = [];\n    this._page.removeInitScripts(this._initScripts).catch(() => {});\n    this._initScripts = [];\n    if (this._routeWebSocketInitScript)\n      WebSocketRouteDispatcher.uninstall(this.connection, this._page, this._routeWebSocketInitScript).catch(() => {});\n    this._routeWebSocketInitScript = undefined;\n    for (const uid of this._locatorHandlers)\n      this._page.unregisterLocatorHandler(uid);\n    this._locatorHandlers.clear();\n    this._page.setFileChooserInterceptedBy(false, this).catch(() => {});\n    if (this._jsCoverageActive)\n      (this._page.coverage as CRCoverage).stopJSCoverage().catch(() => {});\n    this._jsCoverageActive = false;\n    if (this._cssCoverageActive)\n      (this._page.coverage as CRCoverage).stopCSSCoverage().catch(() => {});\n    this._cssCoverageActive = false;\n  }\n}\n\n\nexport class WorkerDispatcher extends Dispatcher<Worker, channels.WorkerChannel, PageDispatcher | BrowserContextDispatcher> implements channels.WorkerChannel {\n  _type_Worker = true;\n\n  static fromNullable(scope: PageDispatcher | BrowserContextDispatcher, worker: Worker | null): WorkerDispatcher | undefined {\n    if (!worker)\n      return undefined;\n    const result = scope.connection.existingDispatcher<WorkerDispatcher>(worker);\n    return result || new WorkerDispatcher(scope, worker);\n  }\n\n  constructor(scope: PageDispatcher | BrowserContextDispatcher, worker: Worker) {\n    super(scope, worker, 'Worker', {\n      url: worker.url\n    });\n    this.addObjectListener(Worker.Events.Close, () => this._dispatchEvent('close'));\n  }\n\n  async evaluateExpression(params: channels.WorkerEvaluateExpressionParams, progress: Progress): Promise<channels.WorkerEvaluateExpressionResult> {\n    return { value: serializeResult(await progress.race(this._object.evaluateExpression(params.expression, params.isFunction, parseArgument(params.arg)))) };\n  }\n\n  async evaluateExpressionHandle(params: channels.WorkerEvaluateExpressionHandleParams, progress: Progress): Promise<channels.WorkerEvaluateExpressionHandleResult> {\n    return { handle: JSHandleDispatcher.fromJSHandle(this, await progress.race(this._object.evaluateExpressionHandle(params.expression, params.isFunction, parseArgument(params.arg)))) };\n  }\n}\n\nexport class BindingCallDispatcher extends Dispatcher<SdkObject, channels.BindingCallChannel, PageDispatcher | BrowserContextDispatcher> implements channels.BindingCallChannel {\n  _type_BindingCall = true;\n  private _resolve: ((arg: any) => void) | undefined;\n  private _reject: ((error: any) => void) | undefined;\n  private _promise: Promise<any>;\n\n  constructor(scope: PageDispatcher, name: string, needsHandle: boolean, source: { context: BrowserContext, page: Page, frame: Frame }, args: any[]) {\n    const frameDispatcher = FrameDispatcher.from(scope.parentScope(), source.frame);\n    super(scope, new SdkObject(scope._object, 'bindingCall'), 'BindingCall', {\n      frame: frameDispatcher,\n      name,\n      args: needsHandle ? undefined : args.map(serializeResult),\n      handle: needsHandle ? ElementHandleDispatcher.fromJSOrElementHandle(frameDispatcher, args[0] as JSHandle) : undefined,\n    });\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  promise() {\n    return this._promise;\n  }\n\n  async resolve(params: channels.BindingCallResolveParams, progress: Progress): Promise<void> {\n    this._resolve!(parseArgument(params.result));\n    this._dispose();\n  }\n\n  async reject(params: channels.BindingCallRejectParams, progress: Progress): Promise<void> {\n    this._reject!(parseError(params.error));\n    this._dispose();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,kBAA6B;AAC7B,wBAA2B;AAC3B,oBAA2B;AAC3B,gCAAmC;AACnC,sCAAwC;AACxC,6BAAgC;AAChC,gCAAmE;AACnE,gCAAkC;AAClC,IAAAA,6BAAmC;AACnC,IAAAA,6BAAqD;AACrD,sCAAyC;AACzC,6BAA0B;AAC1B,sBAA2B;AAepB,MAAM,uBAAuB,6BAAiG;AAAA,EA0B3H,YAAY,aAAuC,MAAY;AAKrE,UAAM,YAAY,uCAAgB,KAAK,aAAa,KAAK,UAAU,CAAC;AAEpE,UAAM,aAAa,MAAM,QAAQ;AAAA,MAC/B;AAAA,MACA,cAAc,KAAK,aAAa,GAAG;AAAA,MACnC,UAAU,KAAK,SAAS;AAAA,MACxB,QAAQ,eAAe,aAAa,aAAa,KAAK,OAAO,CAAC;AAAA,IAChE,CAAC;AArCH,6BAAoB;AACpB,sBAAa;AAEb,0BAAiB,oBAAI,IAAoD;AACzE,0CAAkG,CAAC;AACnG,SAAQ,YAA2B,CAAC;AACpC,SAAQ,eAA6B,CAAC;AAEtC,SAAQ,2BAAgD,CAAC;AAEzD,SAAQ,mBAAmB,oBAAI,IAAY;AAC3C,SAAQ,oBAAoB;AAC5B,SAAQ,qBAAqB;AA2B3B,SAAK,MAAM,SAAS;AAEpB,SAAK,QAAQ;AACb,SAAK,sBAAsB,CAAC,OAAO,YAAY;AAC7C,YAAM,cAAc,KAAK,yBAAyB,KAAK,kBAAY,4BAAW,KAAK,MAAM,eAAe,SAAS,SAAS,QAAQ,IAAI,GAAG,QAAQ,CAAC;AAClJ,UAAI,CAAC,aAAa;AAChB,cAAM,SAAS,EAAE,YAAY,KAAK,CAAC,EAAE,MAAM,MAAM;AAAA,QAAC,CAAC;AACnD;AAAA,MACF;AACA,WAAK,eAAe,SAAS,EAAE,OAAO,IAAI,2CAAgB,4CAAkB,KAAK,KAAK,YAAY,GAAG,OAAO,GAAG,KAAK,EAAE,CAAC;AAAA,IACzH;AAEA,SAAK,kBAAkB,iBAAK,OAAO,OAAO,MAAM;AAC9C,WAAK,eAAe,OAAO;AAC3B,WAAK,SAAS;AAAA,IAChB,CAAC;AACD,SAAK,kBAAkB,iBAAK,OAAO,OAAO,MAAM,KAAK,eAAe,OAAO,CAAC;AAC5E,SAAK,kBAAkB,iBAAK,OAAO,UAAU,CAAC,aAAuB;AAEnE,WAAK,eAAe,YAAY,EAAE,KAAK,SAAS,KAAK,mBAAmB,SAAS,kBAAkB,GAAG,UAAU,6CAAmB,KAAK,aAAa,SAAS,QAAQ,EAAE,CAAC;AAAA,IAC3K,CAAC;AACD,SAAK,kBAAkB,iBAAK,OAAO,qBAAqB,MAAM,KAAK,eAAe,uBAAuB,EAAE,cAAc,KAAK,aAAa,GAAG,SAAS,CAAC,CAAC;AACzJ,SAAK,kBAAkB,iBAAK,OAAO,aAAa,CAAC,gBAA6B,KAAK,eAAe,eAAe;AAAA,MAC/G,SAAS,wDAAwB,KAAK,WAAW,YAAY,QAAQ,CAAC;AAAA,MACtE,YAAY,YAAY,WAAW;AAAA,IACrC,CAAC,CAAC;AACF,SAAK,kBAAkB,iBAAK,OAAO,eAAe,WAAS,KAAK,iBAAiB,KAAK,CAAC;AACvF,SAAK,kBAAkB,iBAAK,OAAO,eAAe,WAAS,KAAK,iBAAiB,KAAK,CAAC;AACvF,SAAK,kBAAkB,iBAAK,OAAO,yBAAyB,CAAC,QAAgB,KAAK,eAAe,2BAA2B,EAAE,IAAI,CAAC,CAAC;AACpI,SAAK,kBAAkB,iBAAK,OAAO,WAAW,eAAa,KAAK,eAAe,aAAa,EAAE,WAAW,IAAI,+CAAoB,MAAM,SAAS,EAAE,CAAC,CAAC;AACpJ,SAAK,kBAAkB,iBAAK,OAAO,QAAQ,YAAU,KAAK,eAAe,UAAU,EAAE,QAAQ,IAAI,iBAAiB,MAAM,MAAM,EAAE,CAAC,CAAC;AAClI,SAAK,kBAAkB,iBAAK,OAAO,OAAO,CAAC,aAAuB,KAAK,eAAe,SAAS,EAAE,UAAU,6CAAmB,KAAK,aAAa,QAAQ,EAAE,CAAC,CAAC;AAC5J,QAAI,KAAK;AACP,WAAK,eAAe,SAAS,EAAE,UAAU,6CAAmB,KAAK,KAAK,YAAY,GAAG,KAAK,KAAK,EAAE,CAAC;AAEpG,UAAM,SAAS,KAAK,aAAa,OAAO;AACxC,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ;AACjC,WAAK,iBAAiB,OAAO,CAAC,CAAC;AAAA,EACnC;AAAA,EA/DA,OAAO,KAAK,aAAuC,MAA4B;AAC7E,WAAO,eAAe,aAAa,aAAa,IAAI;AAAA,EACtD;AAAA,EAEA,OAAO,aAAa,aAAuC,MAAoD;AAC7G,QAAI,CAAC;AACH,aAAO;AACT,UAAM,SAAS,YAAY,WAAW,mBAAmC,IAAI;AAC7E,WAAO,UAAU,IAAI,eAAe,aAAa,IAAI;AAAA,EACvD;AAAA,EAwDA,OAAa;AACX,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,MAAM,cAAc,QAA0C,UAAmC;AAC/F,UAAM,UAAU,MAAM,KAAK,MAAM,cAAc,UAAU,OAAO,MAAM,CAAC,CAAC,OAAO,aAAa,CAAC,WAAW,SAAS;AAG/G,UAAI,KAAK;AACP;AACF,YAAMC,WAAU,IAAI,sBAAsB,MAAM,OAAO,MAAM,CAAC,CAAC,OAAO,aAAa,QAAQ,IAAI;AAC/F,WAAK,eAAe,eAAe,EAAE,SAAAA,SAAQ,CAAC;AAC9C,aAAOA,SAAQ,QAAQ;AAAA,IACzB,CAAC;AACD,SAAK,UAAU,KAAK,OAAO;AAAA,EAC7B;AAAA,EAEA,MAAM,oBAAoB,QAAgD,UAAmC;AAC3G,UAAM,KAAK,MAAM,oBAAoB,UAAU,OAAO,OAAO;AAAA,EAC/D;AAAA,EAEA,MAAM,OAAO,QAAmC,UAAwD;AACtG,WAAO,EAAE,UAAU,8CAAmB,aAAa,KAAK,YAAY,GAAG,MAAM,KAAK,MAAM,OAAO,UAAU,MAAM,CAAC,EAAE;AAAA,EACpH;AAAA,EAEA,MAAM,OAAO,QAAmC,UAAwD;AACtG,WAAO,EAAE,UAAU,8CAAmB,aAAa,KAAK,YAAY,GAAG,MAAM,KAAK,MAAM,OAAO,UAAU,MAAM,CAAC,EAAE;AAAA,EACpH;AAAA,EAEA,MAAM,UAAU,QAAsC,UAA2D;AAC/G,WAAO,EAAE,UAAU,8CAAmB,aAAa,KAAK,YAAY,GAAG,MAAM,KAAK,MAAM,UAAU,UAAU,MAAM,CAAC,EAAE;AAAA,EACvH;AAAA,EAEA,MAAM,UAAU,QAAsC,UAA2D;AAC/G,UAAM,SAAS,KAAK,KAAK,MAAM,UAAU,CAAC;AAAA,EAC5C;AAAA,EAEA,MAAM,uBAAuB,QAAmD,UAAwE;AACtJ,UAAM,MAAM,KAAK,MAAM,uBAAuB,OAAO,UAAU,OAAO,WAAW;AACjF,SAAK,iBAAiB,IAAI,GAAG;AAC7B,WAAO,EAAE,IAAI;AAAA,EACf;AAAA,EAEA,MAAM,6BAA6B,QAAyD,UAAmC;AAC7H,SAAK,MAAM,sBAAsB,OAAO,KAAK,OAAO,MAAM;AAAA,EAC5D;AAAA,EAEA,MAAM,yBAAyB,QAAqD,UAAmC;AACrH,SAAK,MAAM,yBAAyB,OAAO,GAAG;AAC9C,SAAK,iBAAiB,OAAO,OAAO,GAAG;AAAA,EACzC;AAAA,EAEA,MAAM,aAAa,QAAyC,UAAmC;AAC7F,UAAM,KAAK,MAAM,aAAa,UAAU;AAAA,MACtC,OAAO,OAAO;AAAA,MACd,aAAa,OAAO;AAAA,MACpB,eAAe,OAAO;AAAA,MACtB,cAAc,OAAO;AAAA,MACrB,UAAU,OAAO;AAAA,IACnB,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,gBAAgB,QAA4C,UAAmC;AACnG,UAAM,KAAK,MAAM,gBAAgB,UAAU,OAAO,YAAY;AAAA,EAChE;AAAA,EAEA,MAAM,cAAc,QAA0C,UAAmC;AAC/F,SAAK,aAAa,KAAK,MAAM,KAAK,MAAM,cAAc,UAAU,OAAO,MAAM,CAAC;AAAA,EAChF;AAAA,EAEA,MAAM,+BAA+B,QAA2D,UAAmC;AACjI,UAAM,cAAc,KAAK,yBAAyB,SAAS;AAC3D,QAAI,CAAC,OAAO,SAAS,QAAQ;AAG3B,UAAI;AACF,cAAM,KAAK,MAAM,yBAAyB,KAAK,mBAAmB;AACpE,WAAK,2BAA2B,CAAC;AAAA,IACnC,OAAO;AACL,WAAK,2BAA2B,OAAO,SAAS,IAAI,aAAW,QAAQ,cAAc,IAAI,OAAO,QAAQ,aAAa,QAAQ,UAAW,IAAI,QAAQ,IAAK;AACzJ,UAAI,CAAC;AACH,cAAM,KAAK,MAAM,sBAAsB,UAAU,KAAK,mBAAmB;AAAA,IAC7E;AAAA,EACF;AAAA,EAEA,MAAM,iCAAiC,QAA6D,UAAmC;AACrI,SAAK,iCAAiC,OAAO;AAC7C,QAAI,OAAO,SAAS,UAAU,CAAC,KAAK;AAClC,WAAK,4BAA4B,MAAM,yDAAyB,QAAQ,UAAU,KAAK,YAAY,KAAK,KAAK;AAAA,EACjH;AAAA,EAEA,MAAM,iBAAiB,QAA6C,UAAkE;AACpI,UAAM,QAA8C,OAAO,QAAQ,CAAC,GAAG,IAAI,CAAC,EAAE,OAAO,SAAS,OAAO;AAAA,MACnG,OAAQ,MAA0B;AAAA,MAClC;AAAA,IACF,EAAE;AACF,UAAM,UAA0D,OAAO,UAAU;AAAA,MAC/E,OAAQ,OAAO,QAAQ,MAA0B;AAAA,MACjD,UAAU,OAAO,QAAQ;AAAA,IAC3B,IAAI;AACJ,WAAO,MAAM,KAAK,MAAM,iBAAiB,UAAU;AAAA,MACjD,GAAG;AAAA,MACH;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,WAAW,QAAuC,UAA4D;AAClH,UAAM,QAA8C,OAAO,QAAQ,CAAC,GAAG,IAAI,CAAC,EAAE,OAAO,SAAS,OAAO;AAAA,MACnG,OAAQ,MAA0B;AAAA,MAClC;AAAA,IACF,EAAE;AACF,WAAO,EAAE,QAAQ,MAAM,KAAK,MAAM,WAAW,UAAU,EAAE,GAAG,QAAQ,KAAK,CAAC,EAAE;AAAA,EAC9E;AAAA,EAEA,MAAM,MAAM,QAAkC,UAAmC;AAC/E,QAAI,CAAC,OAAO;AACV,eAAS,SAAS,yBAAyB;AAC7C,UAAM,KAAK,MAAM,MAAM,MAAM;AAAA,EAC/B;AAAA,EAEA,MAAM,mBAAmB,QAA+C,UAAmC;AAEzG,QAAI,OAAO,UAAU;AACnB,YAAM,KAAK,MAAM,4BAA4B,OAAO,SAAS,IAAI;AACnE,QAAI,OAAO;AACT,WAAK,eAAe,IAAI,OAAO,KAAK;AAAA;AAEpC,WAAK,eAAe,OAAO,OAAO,KAAK;AAAA,EAC3C;AAAA,EAEA,MAAM,aAAa,QAAyC,UAAmC;AAC7F,UAAM,KAAK,MAAM,SAAS,KAAK,UAAU,OAAO,GAAG;AAAA,EACrD;AAAA,EAEA,MAAM,WAAW,QAAuC,UAAmC;AACzF,UAAM,KAAK,MAAM,SAAS,GAAG,UAAU,OAAO,GAAG;AAAA,EACnD;AAAA,EAEA,MAAM,mBAAmB,QAA+C,UAAmC;AACzG,UAAM,KAAK,MAAM,SAAS,WAAW,UAAU,OAAO,IAAI;AAAA,EAC5D;AAAA,EAEA,MAAM,aAAa,QAAyC,UAAmC;AAC7F,UAAM,KAAK,MAAM,SAAS,KAAK,UAAU,OAAO,MAAM,MAAM;AAAA,EAC9D;AAAA,EAEA,MAAM,cAAc,QAA0C,UAAmC;AAC/F,UAAM,KAAK,MAAM,SAAS,MAAM,UAAU,OAAO,KAAK,MAAM;AAAA,EAC9D;AAAA,EAEA,MAAM,UAAU,QAAsC,UAAmC;AACvF,aAAS,SAAS,QAAQ,EAAE,GAAG,OAAO,GAAG,GAAG,OAAO,EAAE;AACrD,UAAM,KAAK,MAAM,MAAM,KAAK,UAAU,OAAO,GAAG,OAAO,GAAG,MAAM;AAAA,EAClE;AAAA,EAEA,MAAM,UAAU,QAAsC,UAAmC;AACvF,aAAS,SAAS,QAAQ,KAAK,MAAM,MAAM,aAAa;AACxD,UAAM,KAAK,MAAM,MAAM,KAAK,UAAU,MAAM;AAAA,EAC9C;AAAA,EAEA,MAAM,QAAQ,QAAoC,UAAmC;AACnF,aAAS,SAAS,QAAQ,KAAK,MAAM,MAAM,aAAa;AACxD,UAAM,KAAK,MAAM,MAAM,GAAG,UAAU,MAAM;AAAA,EAC5C;AAAA,EAEA,MAAM,WAAW,QAAuC,UAAmC;AACzF,aAAS,SAAS,QAAQ,EAAE,GAAG,OAAO,GAAG,GAAG,OAAO,EAAE;AACrD,UAAM,KAAK,MAAM,MAAM,MAAM,UAAU,OAAO,GAAG,OAAO,GAAG,MAAM;AAAA,EACnE;AAAA,EAEA,MAAM,WAAW,QAAuC,UAAmC;AACzF,UAAM,KAAK,MAAM,MAAM,MAAM,UAAU,OAAO,QAAQ,OAAO,MAAM;AAAA,EACrE;AAAA,EAEA,MAAM,eAAe,QAA2C,UAAmC;AACjG,aAAS,SAAS,QAAQ,EAAE,GAAG,OAAO,GAAG,GAAG,OAAO,EAAE;AACrD,UAAM,KAAK,MAAM,YAAY,IAAI,UAAU,OAAO,GAAG,OAAO,CAAC;AAAA,EAC/D;AAAA,EAEA,MAAM,sBAAsB,QAAkD,UAAuE;AACnJ,UAAM,aAAa,MAAM,SAAS,KAAK,KAAK,MAAM,cAAc,SAAS;AAAA,MACvE,iBAAiB,OAAO;AAAA,MACxB,MAAM,OAAO,OAAQ,OAAO,KAAiC,iBAAiB;AAAA,IAChF,CAAC,CAAC;AACF,WAAO,EAAE,YAAY,cAAc,OAAU;AAAA,EAC/C;AAAA,EAEA,MAAM,IAAI,QAAgC,UAAqD;AAC7F,QAAI,CAAC,KAAK,MAAM;AACd,YAAM,IAAI,MAAM,wDAAwD;AAC1E,UAAM,SAAS,MAAM,SAAS,KAAK,KAAK,MAAM,IAAI,MAAM,CAAC;AACzD,WAAO,EAAE,KAAK,OAAO;AAAA,EACvB;AAAA,EAEA,MAAM,cAAc,QAA0C,UAA+D;AAC3H,WAAO,EAAE,UAAU,MAAM,KAAK,MAAM,cAAc,QAAQ,EAAE;AAAA,EAC9D;AAAA,EAEA,MAAM,aAAa,QAAyC,UAAmC;AAC7F,UAAM,SAAS,KAAK,KAAK,MAAM,aAAa,CAAC;AAAA,EAC/C;AAAA,EAEA,MAAM,gBAAgB,QAA4C,UAAmC;AACnG,UAAM,WAAW,KAAK,MAAM;AAC5B,UAAM,SAAS,gBAAgB,UAAU,MAAM;AAC/C,SAAK,oBAAoB;AAAA,EAC3B;AAAA,EAEA,MAAM,eAAe,QAA2C,UAAgE;AAC9H,SAAK,oBAAoB;AACzB,UAAM,WAAW,KAAK,MAAM;AAC5B,WAAO,MAAM,SAAS,eAAe;AAAA,EACvC;AAAA,EAEA,MAAM,iBAAiB,QAA6C,UAAmC;AACrG,UAAM,WAAW,KAAK,MAAM;AAC5B,UAAM,SAAS,iBAAiB,UAAU,MAAM;AAChD,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EAEA,MAAM,gBAAgB,QAA4C,UAAiE;AACjI,SAAK,qBAAqB;AAC1B,UAAM,WAAW,KAAK,MAAM;AAC5B,WAAO,MAAM,SAAS,gBAAgB;AAAA,EACxC;AAAA,EAEA,iBAAiB,OAAc;AAC7B,SAAK,eAAe,iBAAiB,EAAE,OAAO,uCAAgB,KAAK,KAAK,YAAY,GAAG,KAAK,EAAE,CAAC;AAAA,EACjG;AAAA,EAEA,iBAAiB,OAAc;AAC7B,SAAK,eAAe,iBAAiB,EAAE,OAAO,uCAAgB,KAAK,KAAK,YAAY,GAAG,KAAK,EAAE,CAAC;AAAA,EACjG;AAAA,EAES,aAAa;AAEpB,QAAI,KAAK,MAAM,2BAA2B;AACxC;AAGF,SAAK,2BAA2B,CAAC;AACjC,SAAK,MAAM,yBAAyB,KAAK,mBAAmB,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAC5E,SAAK,MAAM,sBAAsB,KAAK,SAAS,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAC/D,SAAK,YAAY,CAAC;AAClB,SAAK,MAAM,kBAAkB,KAAK,YAAY,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAC9D,SAAK,eAAe,CAAC;AACrB,QAAI,KAAK;AACP,+DAAyB,UAAU,KAAK,YAAY,KAAK,OAAO,KAAK,yBAAyB,EAAE,MAAM,MAAM;AAAA,MAAC,CAAC;AAChH,SAAK,4BAA4B;AACjC,eAAW,OAAO,KAAK;AACrB,WAAK,MAAM,yBAAyB,GAAG;AACzC,SAAK,iBAAiB,MAAM;AAC5B,SAAK,MAAM,4BAA4B,OAAO,IAAI,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAClE,QAAI,KAAK;AACP,MAAC,KAAK,MAAM,SAAwB,eAAe,EAAE,MAAM,MAAM;AAAA,MAAC,CAAC;AACrE,SAAK,oBAAoB;AACzB,QAAI,KAAK;AACP,MAAC,KAAK,MAAM,SAAwB,gBAAgB,EAAE,MAAM,MAAM;AAAA,MAAC,CAAC;AACtE,SAAK,qBAAqB;AAAA,EAC5B;AACF;AAGO,MAAM,yBAAyB,6BAAwH;AAAA,EAU5J,YAAY,OAAkD,QAAgB;AAC5E,UAAM,OAAO,QAAQ,UAAU;AAAA,MAC7B,KAAK,OAAO;AAAA,IACd,CAAC;AAZH,wBAAe;AAab,SAAK,kBAAkB,mBAAO,OAAO,OAAO,MAAM,KAAK,eAAe,OAAO,CAAC;AAAA,EAChF;AAAA,EAZA,OAAO,aAAa,OAAkD,QAAqD;AACzH,QAAI,CAAC;AACH,aAAO;AACT,UAAM,SAAS,MAAM,WAAW,mBAAqC,MAAM;AAC3E,WAAO,UAAU,IAAI,iBAAiB,OAAO,MAAM;AAAA,EACrD;AAAA,EASA,MAAM,mBAAmB,QAAiD,UAAsE;AAC9I,WAAO,EAAE,WAAO,2CAAgB,MAAM,SAAS,KAAK,KAAK,QAAQ,mBAAmB,OAAO,YAAY,OAAO,gBAAY,yCAAc,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE;AAAA,EACzJ;AAAA,EAEA,MAAM,yBAAyB,QAAuD,UAA4E;AAChK,WAAO,EAAE,QAAQ,6CAAmB,aAAa,MAAM,MAAM,SAAS,KAAK,KAAK,QAAQ,yBAAyB,OAAO,YAAY,OAAO,gBAAY,yCAAc,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE;AAAA,EACtL;AACF;AAEO,MAAM,8BAA8B,6BAAqI;AAAA,EAM9K,YAAY,OAAuB,MAAc,aAAsB,QAA+D,MAAa;AACjJ,UAAM,kBAAkB,uCAAgB,KAAK,MAAM,YAAY,GAAG,OAAO,KAAK;AAC9E,UAAM,OAAO,IAAI,iCAAU,MAAM,SAAS,aAAa,GAAG,eAAe;AAAA,MACvE,OAAO;AAAA,MACP;AAAA,MACA,MAAM,cAAc,SAAY,KAAK,IAAI,yCAAe;AAAA,MACxD,QAAQ,cAAc,wDAAwB,sBAAsB,iBAAiB,KAAK,CAAC,CAAa,IAAI;AAAA,IAC9G,CAAC;AAZH,6BAAoB;AAalB,SAAK,WAAW,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC/C,WAAK,WAAW;AAChB,WAAK,UAAU;AAAA,IACjB,CAAC;AAAA,EACH;AAAA,EAEA,UAAU;AACR,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,MAAM,QAAQ,QAA2C,UAAmC;AAC1F,SAAK,aAAU,yCAAc,OAAO,MAAM,CAAC;AAC3C,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,MAAM,OAAO,QAA0C,UAAmC;AACxF,SAAK,YAAS,0BAAW,OAAO,KAAK,CAAC;AACtC,SAAK,SAAS;AAAA,EAChB;AACF;",
  "names": ["import_networkDispatchers", "binding"]
}
