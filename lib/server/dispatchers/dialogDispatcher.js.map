{
  "version": 3,
  "sources": ["../../../src/server/dispatchers/dialogDispatcher.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Dispatcher } from './dispatcher';\nimport { PageDispatcher } from './pageDispatcher';\n\nimport type { Dialog } from '../dialog';\nimport type { BrowserContextDispatcher } from './browserContextDispatcher';\nimport type * as channels from '@protocol/channels';\nimport type { Progress } from '@protocol/progress';\n\nexport class DialogDispatcher extends Dispatcher<Dialog, channels.DialogChannel, BrowserContextDispatcher | PageDispatcher> implements channels.DialogChannel {\n  _type_Dialog = true;\n\n  constructor(scope: BrowserContextDispatcher, dialog: Dialog) {\n    const page = PageDispatcher.fromNullable(scope, dialog.page().initializedOrUndefined());\n    // Prefer scoping to the page, unless we don't have one.\n    super(page || scope, dialog, 'Dialog', {\n      page,\n      type: dialog.type(),\n      message: dialog.message(),\n      defaultValue: dialog.defaultValue(),\n    });\n  }\n\n  async accept(params: channels.DialogAcceptParams, progress: Progress): Promise<void> {\n    await progress.race(this._object.accept(params.promptText));\n  }\n\n  async dismiss(params: channels.DialogDismissParams, progress: Progress): Promise<void> {\n    await progress.race(this._object.dismiss());\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,wBAA2B;AAC3B,4BAA+B;AAOxB,MAAM,yBAAyB,6BAAwH;AAAA,EAG5J,YAAY,OAAiC,QAAgB;AAC3D,UAAM,OAAO,qCAAe,aAAa,OAAO,OAAO,KAAK,EAAE,uBAAuB,CAAC;AAEtF,UAAM,QAAQ,OAAO,QAAQ,UAAU;AAAA,MACrC;AAAA,MACA,MAAM,OAAO,KAAK;AAAA,MAClB,SAAS,OAAO,QAAQ;AAAA,MACxB,cAAc,OAAO,aAAa;AAAA,IACpC,CAAC;AAVH,wBAAe;AAAA,EAWf;AAAA,EAEA,MAAM,OAAO,QAAqC,UAAmC;AACnF,UAAM,SAAS,KAAK,KAAK,QAAQ,OAAO,OAAO,UAAU,CAAC;AAAA,EAC5D;AAAA,EAEA,MAAM,QAAQ,QAAsC,UAAmC;AACrF,UAAM,SAAS,KAAK,KAAK,QAAQ,QAAQ,CAAC;AAAA,EAC5C;AACF;",
  "names": []
}
