{
  "version": 3,
  "sources": ["../../../src/server/dispatchers/jsHandleDispatcher.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Dispatcher } from './dispatcher';\nimport { ElementHandleDispatcher } from './elementHandlerDispatcher';\nimport { parseSerializedValue, serializeValue } from '../../protocol/serializers';\n\nimport type * as js from '../javascript';\nimport type { ElectronApplicationDispatcher } from './electronDispatcher';\nimport type { FrameDispatcher } from './frameDispatcher';\nimport type { PageDispatcher, WorkerDispatcher } from './pageDispatcher';\nimport type * as channels from '@protocol/channels';\nimport type { Progress } from '@protocol/progress';\n\nexport type JSHandleDispatcherParentScope = PageDispatcher | FrameDispatcher | WorkerDispatcher | ElectronApplicationDispatcher;\n\nexport class JSHandleDispatcher<ParentScope extends JSHandleDispatcherParentScope = JSHandleDispatcherParentScope> extends Dispatcher<js.JSHandle, channels.JSHandleChannel, ParentScope> implements channels.JSHandleChannel {\n  _type_JSHandle = true;\n\n  static fromJSHandle(scope: JSHandleDispatcherParentScope, handle: js.JSHandle): JSHandleDispatcher {\n    return scope.connection.existingDispatcher<JSHandleDispatcher>(handle) || new JSHandleDispatcher(scope, handle);\n  }\n\n  protected constructor(scope: ParentScope, jsHandle: js.JSHandle) {\n    // Do not call this directly, use createHandle() instead.\n    super(scope, jsHandle, jsHandle.asElement() ? 'ElementHandle' : 'JSHandle', {\n      preview: jsHandle.toString(),\n    });\n    jsHandle._setPreviewCallback(preview => this._dispatchEvent('previewUpdated', { preview }));\n  }\n\n  async evaluateExpression(params: channels.JSHandleEvaluateExpressionParams, progress: Progress): Promise<channels.JSHandleEvaluateExpressionResult> {\n    const jsHandle = await progress.race(this._object.evaluateExpression(params.expression, { isFunction: params.isFunction }, parseArgument(params.arg)));\n    return { value: serializeResult(jsHandle) };\n  }\n\n  async evaluateExpressionHandle(params: channels.JSHandleEvaluateExpressionHandleParams, progress: Progress): Promise<channels.JSHandleEvaluateExpressionHandleResult> {\n    const jsHandle = await progress.race(this._object.evaluateExpressionHandle(params.expression, { isFunction: params.isFunction }, parseArgument(params.arg)));\n    // If \"jsHandle\" is an ElementHandle, it belongs to the same frame as \"this\".\n    return { handle: ElementHandleDispatcher.fromJSOrElementHandle(this.parentScope() as FrameDispatcher, jsHandle) };\n  }\n\n  async getProperty(params: channels.JSHandleGetPropertyParams, progress: Progress): Promise<channels.JSHandleGetPropertyResult> {\n    const jsHandle = await progress.race(this._object.getProperty(params.name));\n    // If \"jsHandle\" is an ElementHandle, it belongs to the same frame as \"this\".\n    return { handle: ElementHandleDispatcher.fromJSOrElementHandle(this.parentScope() as FrameDispatcher, jsHandle) };\n  }\n\n  async getPropertyList(params: channels.JSHandleGetPropertyListParams, progress: Progress): Promise<channels.JSHandleGetPropertyListResult> {\n    const map = await progress.race(this._object.getProperties());\n    const properties = [];\n    for (const [name, value] of map) {\n      // If \"jsHandle\" is an ElementHandle, it belongs to the same frame as \"this\".\n      properties.push({ name, value: ElementHandleDispatcher.fromJSOrElementHandle(this.parentScope() as FrameDispatcher, value) });\n    }\n    return { properties };\n  }\n\n  async jsonValue(params: channels.JSHandleJsonValueParams, progress: Progress): Promise<channels.JSHandleJsonValueResult> {\n    return { value: serializeResult(await progress.race(this._object.jsonValue())) };\n  }\n\n  async dispose(_: any, progress: Progress) {\n    progress.metadata.potentiallyClosesScope = true;\n    this._object.dispose();\n    this._dispose();\n  }\n}\n\n// Generic channel parser converts guids to JSHandleDispatchers,\n// and this function takes care of converting them into underlying JSHandles.\nexport function parseArgument(arg: channels.SerializedArgument): any {\n  return parseSerializedValue(arg.value, arg.handles.map(a => (a as JSHandleDispatcher)._object));\n}\n\nexport function parseValue(v: channels.SerializedValue): any {\n  return parseSerializedValue(v, []);\n}\n\nexport function serializeResult(arg: any): channels.SerializedValue {\n  return serializeValue(arg, value => ({ fallThrough: value }));\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,wBAA2B;AAC3B,sCAAwC;AACxC,yBAAqD;AAW9C,MAAM,2BAA8G,6BAAmG;AAAA,EAOlN,YAAY,OAAoB,UAAuB;AAE/D,UAAM,OAAO,UAAU,SAAS,UAAU,IAAI,kBAAkB,YAAY;AAAA,MAC1E,SAAS,SAAS,SAAS;AAAA,IAC7B,CAAC;AAVH,0BAAiB;AAWf,aAAS,oBAAoB,aAAW,KAAK,eAAe,kBAAkB,EAAE,QAAQ,CAAC,CAAC;AAAA,EAC5F;AAAA,EAVA,OAAO,aAAa,OAAsC,QAAyC;AACjG,WAAO,MAAM,WAAW,mBAAuC,MAAM,KAAK,IAAI,mBAAmB,OAAO,MAAM;AAAA,EAChH;AAAA,EAUA,MAAM,mBAAmB,QAAmD,UAAwE;AAClJ,UAAM,WAAW,MAAM,SAAS,KAAK,KAAK,QAAQ,mBAAmB,OAAO,YAAY,EAAE,YAAY,OAAO,WAAW,GAAG,cAAc,OAAO,GAAG,CAAC,CAAC;AACrJ,WAAO,EAAE,OAAO,gBAAgB,QAAQ,EAAE;AAAA,EAC5C;AAAA,EAEA,MAAM,yBAAyB,QAAyD,UAA8E;AACpK,UAAM,WAAW,MAAM,SAAS,KAAK,KAAK,QAAQ,yBAAyB,OAAO,YAAY,EAAE,YAAY,OAAO,WAAW,GAAG,cAAc,OAAO,GAAG,CAAC,CAAC;AAE3J,WAAO,EAAE,QAAQ,wDAAwB,sBAAsB,KAAK,YAAY,GAAsB,QAAQ,EAAE;AAAA,EAClH;AAAA,EAEA,MAAM,YAAY,QAA4C,UAAiE;AAC7H,UAAM,WAAW,MAAM,SAAS,KAAK,KAAK,QAAQ,YAAY,OAAO,IAAI,CAAC;AAE1E,WAAO,EAAE,QAAQ,wDAAwB,sBAAsB,KAAK,YAAY,GAAsB,QAAQ,EAAE;AAAA,EAClH;AAAA,EAEA,MAAM,gBAAgB,QAAgD,UAAqE;AACzI,UAAM,MAAM,MAAM,SAAS,KAAK,KAAK,QAAQ,cAAc,CAAC;AAC5D,UAAM,aAAa,CAAC;AACpB,eAAW,CAAC,MAAM,KAAK,KAAK,KAAK;AAE/B,iBAAW,KAAK,EAAE,MAAM,OAAO,wDAAwB,sBAAsB,KAAK,YAAY,GAAsB,KAAK,EAAE,CAAC;AAAA,IAC9H;AACA,WAAO,EAAE,WAAW;AAAA,EACtB;AAAA,EAEA,MAAM,UAAU,QAA0C,UAA+D;AACvH,WAAO,EAAE,OAAO,gBAAgB,MAAM,SAAS,KAAK,KAAK,QAAQ,UAAU,CAAC,CAAC,EAAE;AAAA,EACjF;AAAA,EAEA,MAAM,QAAQ,GAAQ,UAAoB;AACxC,aAAS,SAAS,yBAAyB;AAC3C,SAAK,QAAQ,QAAQ;AACrB,SAAK,SAAS;AAAA,EAChB;AACF;AAIO,SAAS,cAAc,KAAuC;AACnE,aAAO,yCAAqB,IAAI,OAAO,IAAI,QAAQ,IAAI,OAAM,EAAyB,OAAO,CAAC;AAChG;AAEO,SAAS,WAAW,GAAkC;AAC3D,aAAO,yCAAqB,GAAG,CAAC,CAAC;AACnC;AAEO,SAAS,gBAAgB,KAAoC;AAClE,aAAO,mCAAe,KAAK,YAAU,EAAE,aAAa,MAAM,EAAE;AAC9D;",
  "names": []
}
