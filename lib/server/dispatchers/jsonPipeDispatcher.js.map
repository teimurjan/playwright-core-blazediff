{
  "version": 3,
  "sources": ["../../../src/server/dispatchers/jsonPipeDispatcher.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Dispatcher } from './dispatcher';\nimport { SdkObject } from '../instrumentation';\n\nimport type { LocalUtilsDispatcher } from './localUtilsDispatcher';\nimport type * as channels from '@protocol/channels';\nimport type { Progress } from '@protocol/progress';\n\nexport class JsonPipeDispatcher extends Dispatcher<SdkObject, channels.JsonPipeChannel, LocalUtilsDispatcher> implements channels.JsonPipeChannel {\n  _type_JsonPipe = true;\n  constructor(scope: LocalUtilsDispatcher) {\n    super(scope, new SdkObject(scope._object, 'jsonPipe'), 'JsonPipe', {});\n  }\n\n  async send(params: channels.JsonPipeSendParams, progress: Progress): Promise<channels.JsonPipeSendResult> {\n    this.emit('message', params.message);\n  }\n\n  async close(params: channels.JsonPipeCloseParams, progress: Progress): Promise<void> {\n    this.emit('close');\n    if (!this._disposed) {\n      this._dispatchEvent('closed', {});\n      this._dispose();\n    }\n  }\n\n  dispatch(message: Object) {\n    if (!this._disposed)\n      this._dispatchEvent('message', { message });\n  }\n\n  wasClosed(reason?: string): void {\n    if (!this._disposed) {\n      this._dispatchEvent('closed', { reason });\n      this._dispose();\n    }\n  }\n\n  dispose() {\n    this._dispose();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,wBAA2B;AAC3B,6BAA0B;AAMnB,MAAM,2BAA2B,6BAA0G;AAAA,EAEhJ,YAAY,OAA6B;AACvC,UAAM,OAAO,IAAI,iCAAU,MAAM,SAAS,UAAU,GAAG,YAAY,CAAC,CAAC;AAFvE,0BAAiB;AAAA,EAGjB;AAAA,EAEA,MAAM,KAAK,QAAqC,UAA0D;AACxG,SAAK,KAAK,WAAW,OAAO,OAAO;AAAA,EACrC;AAAA,EAEA,MAAM,MAAM,QAAsC,UAAmC;AACnF,SAAK,KAAK,OAAO;AACjB,QAAI,CAAC,KAAK,WAAW;AACnB,WAAK,eAAe,UAAU,CAAC,CAAC;AAChC,WAAK,SAAS;AAAA,IAChB;AAAA,EACF;AAAA,EAEA,SAAS,SAAiB;AACxB,QAAI,CAAC,KAAK;AACR,WAAK,eAAe,WAAW,EAAE,QAAQ,CAAC;AAAA,EAC9C;AAAA,EAEA,UAAU,QAAuB;AAC/B,QAAI,CAAC,KAAK,WAAW;AACnB,WAAK,eAAe,UAAU,EAAE,OAAO,CAAC;AACxC,WAAK,SAAS;AAAA,IAChB;AAAA,EACF;AAAA,EAEA,UAAU;AACR,SAAK,SAAS;AAAA,EAChB;AACF;",
  "names": []
}
