{
  "version": 3,
  "sources": ["../../../src/server/dispatchers/electronDispatcher.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BrowserContextDispatcher } from './browserContextDispatcher';\nimport { Dispatcher } from './dispatcher';\nimport { JSHandleDispatcher, parseArgument, serializeResult } from './jsHandleDispatcher';\nimport { ElectronApplication } from '../electron/electron';\n\nimport type { RootDispatcher } from './dispatcher';\nimport type { PageDispatcher } from './pageDispatcher';\nimport type { ConsoleMessage } from '../console';\nimport type { Electron } from '../electron/electron';\nimport type * as channels from '@protocol/channels';\nimport type { Progress } from '@protocol/progress';\n\n\nexport class ElectronDispatcher extends Dispatcher<Electron, channels.ElectronChannel, RootDispatcher> implements channels.ElectronChannel {\n  _type_Electron = true;\n  _denyLaunch: boolean;\n\n  constructor(scope: RootDispatcher, electron: Electron, denyLaunch: boolean) {\n    super(scope, electron, 'Electron', {});\n    this._denyLaunch = denyLaunch;\n  }\n\n  async launch(params: channels.ElectronLaunchParams, progress: Progress): Promise<channels.ElectronLaunchResult> {\n    if (this._denyLaunch)\n      throw new Error(`Launching more browsers is not allowed.`);\n    const electronApplication = await this._object.launch(progress, params);\n    return { electronApplication: new ElectronApplicationDispatcher(this, electronApplication) };\n  }\n}\n\nexport class ElectronApplicationDispatcher extends Dispatcher<ElectronApplication, channels.ElectronApplicationChannel, ElectronDispatcher> implements channels.ElectronApplicationChannel {\n  _type_EventTarget = true;\n  _type_ElectronApplication = true;\n  private readonly _subscriptions = new Set<channels.ElectronApplicationUpdateSubscriptionParams['event']>();\n\n  constructor(scope: ElectronDispatcher, electronApplication: ElectronApplication) {\n    super(scope, electronApplication, 'ElectronApplication', {\n      context: BrowserContextDispatcher.from(scope, electronApplication.context())\n    });\n    this.addObjectListener(ElectronApplication.Events.Close, () => {\n      this._dispatchEvent('close');\n      this._dispose();\n    });\n    this.addObjectListener(ElectronApplication.Events.Console, (message: ConsoleMessage) => {\n      if (!this._subscriptions.has('console'))\n        return;\n      this._dispatchEvent('console', {\n        type: message.type(),\n        text: message.text(),\n        args: message.args().map(a => JSHandleDispatcher.fromJSHandle(this, a)),\n        location: message.location()\n      });\n    });\n  }\n\n  async browserWindow(params: channels.ElectronApplicationBrowserWindowParams, progress: Progress): Promise<channels.ElectronApplicationBrowserWindowResult> {\n    const handle = await progress.race(this._object.browserWindow((params.page as PageDispatcher).page()));\n    return { handle: JSHandleDispatcher.fromJSHandle(this, handle) };\n  }\n\n  async evaluateExpression(params: channels.ElectronApplicationEvaluateExpressionParams, progress: Progress): Promise<channels.ElectronApplicationEvaluateExpressionResult> {\n    const handle = await progress.race(this._object._nodeElectronHandlePromise);\n    return { value: serializeResult(await progress.race(handle.evaluateExpression(params.expression, { isFunction: params.isFunction }, parseArgument(params.arg)))) };\n  }\n\n  async evaluateExpressionHandle(params: channels.ElectronApplicationEvaluateExpressionHandleParams, progress: Progress): Promise<channels.ElectronApplicationEvaluateExpressionHandleResult> {\n    const handle = await progress.race(this._object._nodeElectronHandlePromise);\n    const result = await progress.race(handle.evaluateExpressionHandle(params.expression, { isFunction: params.isFunction }, parseArgument(params.arg)));\n    return { handle: JSHandleDispatcher.fromJSHandle(this, result) };\n  }\n\n  async updateSubscription(params: channels.ElectronApplicationUpdateSubscriptionParams, progress: Progress): Promise<void> {\n    if (params.enabled)\n      this._subscriptions.add(params.event);\n    else\n      this._subscriptions.delete(params.event);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,sCAAyC;AACzC,wBAA2B;AAC3B,gCAAmE;AACnE,sBAAoC;AAU7B,MAAM,2BAA2B,6BAAmG;AAAA,EAIzI,YAAY,OAAuB,UAAoB,YAAqB;AAC1E,UAAM,OAAO,UAAU,YAAY,CAAC,CAAC;AAJvC,0BAAiB;AAKf,SAAK,cAAc;AAAA,EACrB;AAAA,EAEA,MAAM,OAAO,QAAuC,UAA4D;AAC9G,QAAI,KAAK;AACP,YAAM,IAAI,MAAM,yCAAyC;AAC3D,UAAM,sBAAsB,MAAM,KAAK,QAAQ,OAAO,UAAU,MAAM;AACtE,WAAO,EAAE,qBAAqB,IAAI,8BAA8B,MAAM,mBAAmB,EAAE;AAAA,EAC7F;AACF;AAEO,MAAM,sCAAsC,6BAAwI;AAAA,EAKzL,YAAY,OAA2B,qBAA0C;AAC/E,UAAM,OAAO,qBAAqB,uBAAuB;AAAA,MACvD,SAAS,yDAAyB,KAAK,OAAO,oBAAoB,QAAQ,CAAC;AAAA,IAC7E,CAAC;AAPH,6BAAoB;AACpB,qCAA4B;AAC5B,SAAiB,iBAAiB,oBAAI,IAAmE;AAMvG,SAAK,kBAAkB,oCAAoB,OAAO,OAAO,MAAM;AAC7D,WAAK,eAAe,OAAO;AAC3B,WAAK,SAAS;AAAA,IAChB,CAAC;AACD,SAAK,kBAAkB,oCAAoB,OAAO,SAAS,CAAC,YAA4B;AACtF,UAAI,CAAC,KAAK,eAAe,IAAI,SAAS;AACpC;AACF,WAAK,eAAe,WAAW;AAAA,QAC7B,MAAM,QAAQ,KAAK;AAAA,QACnB,MAAM,QAAQ,KAAK;AAAA,QACnB,MAAM,QAAQ,KAAK,EAAE,IAAI,OAAK,6CAAmB,aAAa,MAAM,CAAC,CAAC;AAAA,QACtE,UAAU,QAAQ,SAAS;AAAA,MAC7B,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,cAAc,QAAyD,UAA8E;AACzJ,UAAM,SAAS,MAAM,SAAS,KAAK,KAAK,QAAQ,cAAe,OAAO,KAAwB,KAAK,CAAC,CAAC;AACrG,WAAO,EAAE,QAAQ,6CAAmB,aAAa,MAAM,MAAM,EAAE;AAAA,EACjE;AAAA,EAEA,MAAM,mBAAmB,QAA8D,UAAmF;AACxK,UAAM,SAAS,MAAM,SAAS,KAAK,KAAK,QAAQ,0BAA0B;AAC1E,WAAO,EAAE,WAAO,2CAAgB,MAAM,SAAS,KAAK,OAAO,mBAAmB,OAAO,YAAY,EAAE,YAAY,OAAO,WAAW,OAAG,yCAAc,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE;AAAA,EACnK;AAAA,EAEA,MAAM,yBAAyB,QAAoE,UAAyF;AAC1L,UAAM,SAAS,MAAM,SAAS,KAAK,KAAK,QAAQ,0BAA0B;AAC1E,UAAM,SAAS,MAAM,SAAS,KAAK,OAAO,yBAAyB,OAAO,YAAY,EAAE,YAAY,OAAO,WAAW,OAAG,yCAAc,OAAO,GAAG,CAAC,CAAC;AACnJ,WAAO,EAAE,QAAQ,6CAAmB,aAAa,MAAM,MAAM,EAAE;AAAA,EACjE;AAAA,EAEA,MAAM,mBAAmB,QAA8D,UAAmC;AACxH,QAAI,OAAO;AACT,WAAK,eAAe,IAAI,OAAO,KAAK;AAAA;AAEpC,WAAK,eAAe,OAAO,OAAO,KAAK;AAAA,EAC3C;AACF;",
  "names": []
}
