{
  "version": 3,
  "sources": ["../../../src/server/dispatchers/cdpSessionDispatcher.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Dispatcher } from './dispatcher';\nimport { CDPSession } from '../chromium/crConnection';\n\nimport type { BrowserContextDispatcher } from './browserContextDispatcher';\nimport type { BrowserDispatcher } from './browserDispatcher';\nimport type * as channels from '@protocol/channels';\nimport type { Progress } from '@protocol/progress';\n\nexport class CDPSessionDispatcher extends Dispatcher<CDPSession, channels.CDPSessionChannel, BrowserDispatcher | BrowserContextDispatcher> implements channels.CDPSessionChannel {\n  _type_CDPSession = true;\n\n  constructor(scope: BrowserDispatcher | BrowserContextDispatcher, cdpSession: CDPSession) {\n    super(scope, cdpSession, 'CDPSession', {});\n    this.addObjectListener(CDPSession.Events.Event, ({ method, params }) => this._dispatchEvent('event', { method, params }));\n    this.addObjectListener(CDPSession.Events.Closed, () => this._dispose());\n  }\n\n  async send(params: channels.CDPSessionSendParams, progress: Progress): Promise<channels.CDPSessionSendResult> {\n    return { result: await progress.race(this._object.send(params.method as any, params.params)) };\n  }\n\n  async detach(_: any, progress: Progress): Promise<void> {\n    progress.metadata.potentiallyClosesScope = true;\n    await this._object.detach();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,wBAA2B;AAC3B,0BAA2B;AAOpB,MAAM,6BAA6B,6BAAuI;AAAA,EAG/K,YAAY,OAAqD,YAAwB;AACvF,UAAM,OAAO,YAAY,cAAc,CAAC,CAAC;AAH3C,4BAAmB;AAIjB,SAAK,kBAAkB,+BAAW,OAAO,OAAO,CAAC,EAAE,QAAQ,OAAO,MAAM,KAAK,eAAe,SAAS,EAAE,QAAQ,OAAO,CAAC,CAAC;AACxH,SAAK,kBAAkB,+BAAW,OAAO,QAAQ,MAAM,KAAK,SAAS,CAAC;AAAA,EACxE;AAAA,EAEA,MAAM,KAAK,QAAuC,UAA4D;AAC5G,WAAO,EAAE,QAAQ,MAAM,SAAS,KAAK,KAAK,QAAQ,KAAK,OAAO,QAAe,OAAO,MAAM,CAAC,EAAE;AAAA,EAC/F;AAAA,EAEA,MAAM,OAAO,GAAQ,UAAmC;AACtD,aAAS,SAAS,yBAAyB;AAC3C,UAAM,KAAK,QAAQ,OAAO;AAAA,EAC5B;AACF;",
  "names": []
}
