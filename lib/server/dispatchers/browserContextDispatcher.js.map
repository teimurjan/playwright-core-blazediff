{
  "version": 3,
  "sources": ["../../../src/server/dispatchers/browserContextDispatcher.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport path from 'path';\n\nimport { BrowserContext } from '../browserContext';\nimport { ArtifactDispatcher } from './artifactDispatcher';\nimport { CDPSessionDispatcher } from './cdpSessionDispatcher';\nimport { DialogDispatcher } from './dialogDispatcher';\nimport { Dispatcher } from './dispatcher';\nimport { ElementHandleDispatcher } from './elementHandlerDispatcher';\nimport { FrameDispatcher } from './frameDispatcher';\nimport { JSHandleDispatcher } from './jsHandleDispatcher';\nimport { APIRequestContextDispatcher, RequestDispatcher, ResponseDispatcher, RouteDispatcher } from './networkDispatchers';\nimport { BindingCallDispatcher, PageDispatcher, WorkerDispatcher } from './pageDispatcher';\nimport { CRBrowserContext } from '../chromium/crBrowser';\nimport { serializeError } from '../errors';\nimport { TracingDispatcher } from './tracingDispatcher';\nimport { WebSocketRouteDispatcher } from './webSocketRouteDispatcher';\nimport { WritableStreamDispatcher } from './writableStreamDispatcher';\nimport { createGuid } from '../utils/crypto';\nimport { urlMatches } from '../../utils/isomorphic/urlMatch';\nimport { Recorder } from '../recorder';\nimport { RecorderApp } from '../recorder/recorderApp';\n\nimport type { Artifact } from '../artifact';\nimport type { ConsoleMessage } from '../console';\nimport type { Dialog } from '../dialog';\nimport type { Request, Response, RouteHandler } from '../network';\nimport type { InitScript, Page, PageBinding } from '../page';\nimport type { DispatcherScope } from './dispatcher';\nimport type * as channels from '@protocol/channels';\nimport type { Progress } from '@protocol/progress';\n\nexport class BrowserContextDispatcher extends Dispatcher<BrowserContext, channels.BrowserContextChannel, DispatcherScope> implements channels.BrowserContextChannel {\n  _type_EventTarget = true;\n  _type_BrowserContext = true;\n  private _context: BrowserContext;\n  private _subscriptions = new Set<channels.BrowserContextUpdateSubscriptionParams['event']>();\n  _webSocketInterceptionPatterns: channels.BrowserContextSetWebSocketInterceptionPatternsParams['patterns'] = [];\n  private _bindings: PageBinding[] = [];\n  private _initScripts: InitScript[] = [];\n  private _dialogHandler: (dialog: Dialog) => boolean;\n  private _clockPaused = false;\n  private _requestInterceptor: RouteHandler;\n  private _interceptionUrlMatchers: (string | RegExp)[] = [];\n  private _routeWebSocketInitScript: InitScript | undefined;\n\n  static from(parentScope: DispatcherScope, context: BrowserContext): BrowserContextDispatcher {\n    const result = parentScope.connection.existingDispatcher<BrowserContextDispatcher>(context);\n    return result || new BrowserContextDispatcher(parentScope, context);\n  }\n\n  private constructor(parentScope: DispatcherScope, context: BrowserContext) {\n    // We will reparent these to the context below.\n    const requestContext = APIRequestContextDispatcher.from(parentScope as BrowserContextDispatcher, context.fetchRequest);\n    const tracing = TracingDispatcher.from(parentScope as BrowserContextDispatcher, context.tracing);\n\n    super(parentScope, context, 'BrowserContext', {\n      isChromium: context._browser.options.isChromium,\n      requestContext,\n      tracing,\n      options: context._options,\n    });\n\n    this.adopt(requestContext);\n    this.adopt(tracing);\n\n    this._requestInterceptor = (route, request) => {\n      const matchesSome = this._interceptionUrlMatchers.some(urlMatch => urlMatches(this._context._options.baseURL, request.url(), urlMatch));\n      // If there is already a dispatcher, that means we've already routed this request through page.\n      // Client expects a single `route` event, either on the page or on the context, so we can just fallback here.\n      const routeDispatcher = this.connection.existingDispatcher<RouteDispatcher>(route);\n      if (!matchesSome || routeDispatcher) {\n        route.continue({ isFallback: true }).catch(() => {});\n        return;\n      }\n      this._dispatchEvent('route', { route: new RouteDispatcher(RequestDispatcher.from(this, request), route) });\n    };\n\n    this._context = context;\n    // Note: when launching persistent context, or connecting to an existing browser,\n    // dispatcher is created very late, so we can already have pages, videos and everything else.\n\n    const onVideo = (artifact: Artifact) => {\n      // Note: Video must outlive Page and BrowserContext, so that client can saveAs it\n      // after closing the context. We use |scope| for it.\n      const artifactDispatcher = ArtifactDispatcher.from(parentScope, artifact);\n      this._dispatchEvent('video', { artifact: artifactDispatcher });\n    };\n    this.addObjectListener(BrowserContext.Events.VideoStarted, onVideo);\n    for (const video of context._browser._idToVideo.values()) {\n      if (video.context === context)\n        onVideo(video.artifact);\n    }\n\n    for (const page of context.pages())\n      this._dispatchEvent('page', { page: PageDispatcher.from(this, page) });\n    this.addObjectListener(BrowserContext.Events.Page, page => {\n      this._dispatchEvent('page', { page: PageDispatcher.from(this, page) });\n    });\n    this.addObjectListener(BrowserContext.Events.Close, () => {\n      this._dispatchEvent('close');\n      this._dispose();\n    });\n    this.addObjectListener(BrowserContext.Events.PageError, (error: Error, page: Page) => {\n      this._dispatchEvent('pageError', { error: serializeError(error), page: PageDispatcher.from(this, page) });\n    });\n    this.addObjectListener(BrowserContext.Events.Console, (message: ConsoleMessage) => {\n      const page = message.page()!;\n      if (this._shouldDispatchEvent(page, 'console')) {\n        const pageDispatcher = PageDispatcher.from(this, page);\n        this._dispatchEvent('console', {\n          page: pageDispatcher,\n          type: message.type(),\n          text: message.text(),\n          args: message.args().map(a => {\n            const elementHandle = a.asElement();\n            if (elementHandle)\n              return ElementHandleDispatcher.from(FrameDispatcher.from(this, elementHandle._frame), elementHandle);\n            return JSHandleDispatcher.fromJSHandle(pageDispatcher, a);\n          }),\n          location: message.location(),\n        });\n      }\n    });\n    this._dialogHandler = dialog => {\n      if (!this._shouldDispatchEvent(dialog.page(), 'dialog'))\n        return false;\n      this._dispatchEvent('dialog', { dialog: new DialogDispatcher(this, dialog) });\n      return true;\n    };\n    context.dialogManager.addDialogHandler(this._dialogHandler);\n\n    if (context._browser.options.name === 'chromium') {\n      for (const page of (context as CRBrowserContext).backgroundPages())\n        this._dispatchEvent('backgroundPage', { page: PageDispatcher.from(this, page) });\n      this.addObjectListener(CRBrowserContext.CREvents.BackgroundPage, page => this._dispatchEvent('backgroundPage', { page: PageDispatcher.from(this, page) }));\n      for (const serviceWorker of (context as CRBrowserContext).serviceWorkers())\n        this._dispatchEvent('serviceWorker', { worker: new WorkerDispatcher(this, serviceWorker) });\n      this.addObjectListener(CRBrowserContext.CREvents.ServiceWorker, serviceWorker => this._dispatchEvent('serviceWorker', { worker: new WorkerDispatcher(this, serviceWorker) }));\n    }\n    this.addObjectListener(BrowserContext.Events.Request, (request: Request) =>  {\n      // Create dispatcher, if:\n      // - There are listeners to the requests.\n      // - We are redirected from a reported request so that redirectedTo was updated on client.\n      // - We are a navigation request and dispatcher will be reported as a part of the goto return value and newDocument param anyways.\n      //   By the time requestFinished is triggered to update the request, we should have a request on the client already.\n      const redirectFromDispatcher = request.redirectedFrom() && this.connection.existingDispatcher(request.redirectedFrom());\n      if (!redirectFromDispatcher && !this._shouldDispatchNetworkEvent(request, 'request') && !request.isNavigationRequest())\n        return;\n      const requestDispatcher = RequestDispatcher.from(this, request);\n      this._dispatchEvent('request', {\n        request: requestDispatcher,\n        page: PageDispatcher.fromNullable(this, request.frame()?._page.initializedOrUndefined())\n      });\n    });\n    this.addObjectListener(BrowserContext.Events.Response, (response: Response) => {\n      const requestDispatcher = this.connection.existingDispatcher<RequestDispatcher>(response.request());\n      if (!requestDispatcher && !this._shouldDispatchNetworkEvent(response.request(), 'response'))\n        return;\n      this._dispatchEvent('response', {\n        response: ResponseDispatcher.from(this, response),\n        page: PageDispatcher.fromNullable(this, response.frame()?._page.initializedOrUndefined())\n      });\n    });\n    this.addObjectListener(BrowserContext.Events.RequestFailed, (request: Request) => {\n      const requestDispatcher = this.connection.existingDispatcher<RequestDispatcher>(request);\n      if (!requestDispatcher && !this._shouldDispatchNetworkEvent(request, 'requestFailed'))\n        return;\n      this._dispatchEvent('requestFailed', {\n        request: RequestDispatcher.from(this, request),\n        failureText: request._failureText || undefined,\n        responseEndTiming: request._responseEndTiming,\n        page: PageDispatcher.fromNullable(this, request.frame()?._page.initializedOrUndefined())\n      });\n    });\n    this.addObjectListener(BrowserContext.Events.RequestFinished, ({ request, response }: { request: Request, response: Response | null }) => {\n      const requestDispatcher = this.connection.existingDispatcher<RequestDispatcher>(request);\n      if (!requestDispatcher && !this._shouldDispatchNetworkEvent(request, 'requestFinished'))\n        return;\n      this._dispatchEvent('requestFinished', {\n        request: RequestDispatcher.from(this, request),\n        response: ResponseDispatcher.fromNullable(this, response),\n        responseEndTiming: request._responseEndTiming,\n        page: PageDispatcher.fromNullable(this, request.frame()?._page.initializedOrUndefined()),\n      });\n    });\n    this.addObjectListener(BrowserContext.Events.RecorderEvent, ({ event, data, page, code }: { event: 'actionAdded' | 'actionUpdated' | 'signalAdded', data: any, page: Page, code: string }) => {\n      this._dispatchEvent('recorderEvent', { event, data, code, page: PageDispatcher.from(this, page) });\n    });\n  }\n\n  private _shouldDispatchNetworkEvent(request: Request, event: channels.BrowserContextUpdateSubscriptionParams['event'] & channels.PageUpdateSubscriptionParams['event']): boolean {\n    return this._shouldDispatchEvent(request.frame()?._page?.initializedOrUndefined(), event);\n  }\n\n  private _shouldDispatchEvent(page: Page | undefined, event: channels.BrowserContextUpdateSubscriptionParams['event'] & channels.PageUpdateSubscriptionParams['event']): boolean {\n    if (this._subscriptions.has(event))\n      return true;\n    const pageDispatcher = page ? this.connection.existingDispatcher<PageDispatcher>(page) : undefined;\n    if (pageDispatcher?._subscriptions.has(event))\n      return true;\n    return false;\n  }\n\n  async createTempFiles(params: channels.BrowserContextCreateTempFilesParams, progress: Progress): Promise<channels.BrowserContextCreateTempFilesResult> {\n    const dir = this._context._browser.options.artifactsDir;\n    const tmpDir = path.join(dir, 'upload-' + createGuid());\n    const tempDirWithRootName = params.rootDirName ? path.join(tmpDir, path.basename(params.rootDirName)) : tmpDir;\n    await progress.race(fs.promises.mkdir(tempDirWithRootName, { recursive: true }));\n    this._context._tempDirs.push(tmpDir);\n    return {\n      rootDir: params.rootDirName ? new WritableStreamDispatcher(this, tempDirWithRootName) : undefined,\n      writableStreams: await Promise.all(params.items.map(async item => {\n        await progress.race(fs.promises.mkdir(path.dirname(path.join(tempDirWithRootName, item.name)), { recursive: true }));\n        const file = fs.createWriteStream(path.join(tempDirWithRootName, item.name));\n        return new WritableStreamDispatcher(this, file, item.lastModifiedMs);\n      }))\n    };\n  }\n\n  async exposeBinding(params: channels.BrowserContextExposeBindingParams, progress: Progress): Promise<void> {\n    const binding = await this._context.exposeBinding(progress, params.name, !!params.needsHandle, (source, ...args) => {\n      // When reusing the context, we might have some bindings called late enough,\n      // after context and page dispatchers have been disposed.\n      if (this._disposed)\n        return;\n      const pageDispatcher = PageDispatcher.from(this, source.page);\n      const binding = new BindingCallDispatcher(pageDispatcher, params.name, !!params.needsHandle, source, args);\n      this._dispatchEvent('bindingCall', { binding });\n      return binding.promise();\n    });\n    this._bindings.push(binding);\n  }\n\n  async newPage(params: channels.BrowserContextNewPageParams, progress: Progress): Promise<channels.BrowserContextNewPageResult> {\n    return { page: PageDispatcher.from(this, await this._context.newPage(progress)) };\n  }\n\n  async cookies(params: channels.BrowserContextCookiesParams, progress: Progress): Promise<channels.BrowserContextCookiesResult> {\n    return { cookies: await progress.race(this._context.cookies(params.urls)) };\n  }\n\n  async addCookies(params: channels.BrowserContextAddCookiesParams, progress: Progress): Promise<void> {\n    // Note: progress is ignored because this operation is not cancellable and should not block in the browser anyway.\n    await this._context.addCookies(params.cookies);\n  }\n\n  async clearCookies(params: channels.BrowserContextClearCookiesParams, progress: Progress): Promise<void> {\n    // Note: progress is ignored because this operation is not cancellable and should not block in the browser anyway.\n    const nameRe = params.nameRegexSource !== undefined && params.nameRegexFlags !== undefined ? new RegExp(params.nameRegexSource, params.nameRegexFlags) : undefined;\n    const domainRe = params.domainRegexSource !== undefined && params.domainRegexFlags !== undefined ? new RegExp(params.domainRegexSource, params.domainRegexFlags) : undefined;\n    const pathRe = params.pathRegexSource !== undefined && params.pathRegexFlags !== undefined ? new RegExp(params.pathRegexSource, params.pathRegexFlags) : undefined;\n    await this._context.clearCookies({\n      name: nameRe || params.name,\n      domain: domainRe || params.domain,\n      path: pathRe || params.path,\n    });\n  }\n\n  async grantPermissions(params: channels.BrowserContextGrantPermissionsParams, progress: Progress): Promise<void> {\n    // Note: progress is ignored because this operation is not cancellable and should not block in the browser anyway.\n    await this._context.grantPermissions(params.permissions, params.origin);\n  }\n\n  async clearPermissions(params: channels.BrowserContextClearPermissionsParams, progress: Progress): Promise<void> {\n    // Note: progress is ignored because this operation is not cancellable and should not block in the browser anyway.\n    await this._context.clearPermissions();\n  }\n\n  async setGeolocation(params: channels.BrowserContextSetGeolocationParams, progress: Progress): Promise<void> {\n    // Note: progress is ignored because this operation is not cancellable and should not block in the browser anyway.\n    await this._context.setGeolocation(params.geolocation);\n  }\n\n  async setExtraHTTPHeaders(params: channels.BrowserContextSetExtraHTTPHeadersParams, progress: Progress): Promise<void> {\n    await this._context.setExtraHTTPHeaders(progress, params.headers);\n  }\n\n  async setOffline(params: channels.BrowserContextSetOfflineParams, progress: Progress): Promise<void> {\n    await this._context.setOffline(progress, params.offline);\n  }\n\n  async setHTTPCredentials(params: channels.BrowserContextSetHTTPCredentialsParams, progress: Progress): Promise<void> {\n    // Note: this operation is deprecated, so we do not properly cleanup.\n    await progress.race(this._context.setHTTPCredentials(params.httpCredentials));\n  }\n\n  async addInitScript(params: channels.BrowserContextAddInitScriptParams, progress: Progress): Promise<void> {\n    this._initScripts.push(await this._context.addInitScript(progress, params.source));\n  }\n\n  async setNetworkInterceptionPatterns(params: channels.BrowserContextSetNetworkInterceptionPatternsParams, progress: Progress): Promise<void> {\n    const hadMatchers = this._interceptionUrlMatchers.length > 0;\n    if (!params.patterns.length) {\n      // Note: it is important to remove the interceptor when there are no patterns,\n      // because that disables the slow-path interception in the browser itself.\n      if (hadMatchers)\n        await this._context.removeRequestInterceptor(this._requestInterceptor);\n      this._interceptionUrlMatchers = [];\n    } else {\n      this._interceptionUrlMatchers = params.patterns.map(pattern => pattern.regexSource ? new RegExp(pattern.regexSource, pattern.regexFlags!) : pattern.glob!);\n      if (!hadMatchers)\n        await this._context.addRequestInterceptor(progress, this._requestInterceptor);\n    }\n  }\n\n  async setWebSocketInterceptionPatterns(params: channels.PageSetWebSocketInterceptionPatternsParams, progress: Progress): Promise<void> {\n    this._webSocketInterceptionPatterns = params.patterns;\n    if (params.patterns.length && !this._routeWebSocketInitScript)\n      this._routeWebSocketInitScript = await WebSocketRouteDispatcher.install(progress, this.connection, this._context);\n  }\n\n  async storageState(params: channels.BrowserContextStorageStateParams, progress: Progress): Promise<channels.BrowserContextStorageStateResult> {\n    return await progress.race(this._context.storageState(progress, params.indexedDB));\n  }\n\n  async close(params: channels.BrowserContextCloseParams, progress: Progress): Promise<void> {\n    progress.metadata.potentiallyClosesScope = true;\n    await this._context.close(params);\n  }\n\n  async enableRecorder(params: channels.BrowserContextEnableRecorderParams, progress: Progress): Promise<void> {\n    await RecorderApp.show(this._context, params);\n  }\n\n  async disableRecorder(params: channels.BrowserContextDisableRecorderParams, progress: Progress): Promise<void> {\n    const recorder = Recorder.existingForContext(this._context);\n    if (recorder)\n      recorder.setMode('none');\n  }\n\n  async pause(params: channels.BrowserContextPauseParams, progress: Progress) {\n    // Debugger will take care of this.\n  }\n\n  async newCDPSession(params: channels.BrowserContextNewCDPSessionParams, progress: Progress): Promise<channels.BrowserContextNewCDPSessionResult> {\n    if (!this._object._browser.options.isChromium)\n      throw new Error(`CDP session is only available in Chromium`);\n    if (!params.page && !params.frame || params.page && params.frame)\n      throw new Error(`CDP session must be initiated with either Page or Frame, not none or both`);\n    const crBrowserContext = this._object as CRBrowserContext;\n    return { session: new CDPSessionDispatcher(this, await progress.race(crBrowserContext.newCDPSession((params.page ? params.page as PageDispatcher : params.frame as FrameDispatcher)._object))) };\n  }\n\n  async harStart(params: channels.BrowserContextHarStartParams, progress: Progress): Promise<channels.BrowserContextHarStartResult> {\n    const harId = this._context.harStart(params.page ? (params.page as PageDispatcher)._object : null, params.options);\n    return { harId };\n  }\n\n  async harExport(params: channels.BrowserContextHarExportParams, progress: Progress): Promise<channels.BrowserContextHarExportResult> {\n    const artifact = await progress.race(this._context.harExport(params.harId));\n    if (!artifact)\n      throw new Error('No HAR artifact. Ensure record.harPath is set.');\n    return { artifact: ArtifactDispatcher.from(this, artifact) };\n  }\n\n  async clockFastForward(params: channels.BrowserContextClockFastForwardParams, progress: Progress): Promise<channels.BrowserContextClockFastForwardResult> {\n    await this._context.clock.fastForward(progress, params.ticksString ?? params.ticksNumber ?? 0);\n  }\n\n  async clockInstall(params: channels.BrowserContextClockInstallParams, progress: Progress): Promise<channels.BrowserContextClockInstallResult> {\n    await this._context.clock.install(progress, params.timeString ?? params.timeNumber ?? undefined);\n  }\n\n  async clockPauseAt(params: channels.BrowserContextClockPauseAtParams, progress: Progress): Promise<channels.BrowserContextClockPauseAtResult> {\n    await this._context.clock.pauseAt(progress, params.timeString ?? params.timeNumber ?? 0);\n    this._clockPaused = true;\n  }\n\n  async clockResume(params: channels.BrowserContextClockResumeParams, progress: Progress): Promise<channels.BrowserContextClockResumeResult> {\n    await this._context.clock.resume(progress);\n    this._clockPaused = false;\n  }\n\n  async clockRunFor(params: channels.BrowserContextClockRunForParams, progress: Progress): Promise<channels.BrowserContextClockRunForResult> {\n    await this._context.clock.runFor(progress, params.ticksString ?? params.ticksNumber ?? 0);\n  }\n\n  async clockSetFixedTime(params: channels.BrowserContextClockSetFixedTimeParams, progress: Progress): Promise<channels.BrowserContextClockSetFixedTimeResult> {\n    await this._context.clock.setFixedTime(progress, params.timeString ?? params.timeNumber ?? 0);\n  }\n\n  async clockSetSystemTime(params: channels.BrowserContextClockSetSystemTimeParams, progress: Progress): Promise<channels.BrowserContextClockSetSystemTimeResult> {\n    await this._context.clock.setSystemTime(progress, params.timeString ?? params.timeNumber ?? 0);\n  }\n\n  async updateSubscription(params: channels.BrowserContextUpdateSubscriptionParams, progress: Progress): Promise<void> {\n    if (params.enabled)\n      this._subscriptions.add(params.event);\n    else\n      this._subscriptions.delete(params.event);\n  }\n\n  async registerSelectorEngine(params: channels.BrowserContextRegisterSelectorEngineParams, progress: Progress): Promise<void> {\n    this._object.selectors().register(params.selectorEngine);\n  }\n\n  async setTestIdAttributeName(params: channels.BrowserContextSetTestIdAttributeNameParams, progress: Progress): Promise<void> {\n    this._object.selectors().setTestIdAttributeName(params.testIdAttributeName);\n  }\n\n  override _onDispose() {\n    // Avoid protocol calls for the closed context.\n    if (this._context.isClosingOrClosed())\n      return;\n\n    // Cleanup properly and leave the page in a good state. Other clients may still connect and use it.\n    this._context.dialogManager.removeDialogHandler(this._dialogHandler);\n    this._interceptionUrlMatchers = [];\n    this._context.removeRequestInterceptor(this._requestInterceptor).catch(() => {});\n    this._context.removeExposedBindings(this._bindings).catch(() => {});\n    this._bindings = [];\n    this._context.removeInitScripts(this._initScripts).catch(() => {});\n    this._initScripts = [];\n    if (this._routeWebSocketInitScript)\n      WebSocketRouteDispatcher.uninstall(this.connection, this._context, this._routeWebSocketInitScript).catch(() => {});\n    this._routeWebSocketInitScript = undefined;\n    if (this._clockPaused)\n      this._context.clock.resumeNoReply();\n    this._clockPaused = false;\n  }\n}\n"],
  "mappings": "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",
  "names": ["path", "fs", "binding"]
}
