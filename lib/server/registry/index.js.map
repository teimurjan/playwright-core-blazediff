{
  "version": 3,
  "sources": ["../../../src/server/registry/index.ts"],
  "sourcesContent": ["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport * as util from 'util';\n\nimport { downloadBrowserWithProgressBar, logPolitely } from './browserFetcher';\nimport { dockerVersion, readDockerVersionSync, transformCommandsForRoot } from './dependencies';\nimport { installDependenciesLinux, installDependenciesWindows, validateDependenciesLinux, validateDependenciesWindows } from './dependencies';\nimport { calculateSha1, getAsBooleanFromENV, getFromENV, getPackageManagerExecCommand } from '../../utils';\nimport { wrapInASCIIBox } from '../utils/ascii';\nimport { debugLogger } from '../utils/debugLogger';\nimport {  hostPlatform, isOfficiallySupportedPlatform } from '../utils/hostPlatform';\nimport { fetchData, NET_DEFAULT_TIMEOUT } from '../utils/network';\nimport { spawnAsync } from '../utils/spawnAsync';\nimport { getEmbedderName } from '../utils/userAgent';\nimport { lockfile } from '../../utilsBundle';\nimport { canAccessFile, existsAsync, removeFolders } from '../utils/fileUtils';\n\nimport type { DependencyGroup } from './dependencies';\nimport type { HostPlatform } from '../utils/hostPlatform';\n\nexport { writeDockerVersion } from './dependencies';\n\nconst PACKAGE_PATH = path.join(__dirname, '..', '..', '..');\nconst BIN_PATH = path.join(__dirname, '..', '..', '..', 'bin');\n\nconst PLAYWRIGHT_CDN_MIRRORS = [\n  'https://cdn.playwright.dev/dbazure/download/playwright', // ESRP CDN\n  'https://playwright.download.prss.microsoft.com/dbazure/download/playwright', // Directly hit ESRP CDN\n  'https://cdn.playwright.dev', // Hit the Storage Bucket directly\n];\n\nif (process.env.PW_TEST_CDN_THAT_SHOULD_WORK) {\n  for (let i = 0; i < PLAYWRIGHT_CDN_MIRRORS.length; i++) {\n    const cdn = PLAYWRIGHT_CDN_MIRRORS[i];\n    if (cdn !== process.env.PW_TEST_CDN_THAT_SHOULD_WORK) {\n      const parsedCDN = new URL(cdn);\n      parsedCDN.hostname = parsedCDN.hostname + '.does-not-resolve.playwright.dev';\n      PLAYWRIGHT_CDN_MIRRORS[i] = parsedCDN.toString();\n    }\n  }\n}\n\nconst EXECUTABLE_PATHS = {\n  'chromium': {\n    'linux': ['chrome-linux', 'chrome'],\n    'mac': ['chrome-mac', 'Chromium.app', 'Contents', 'MacOS', 'Chromium'],\n    'win': ['chrome-win', 'chrome.exe'],\n  },\n  'chromium-headless-shell': {\n    'linux': ['chrome-linux', 'headless_shell'],\n    'mac': ['chrome-mac', 'headless_shell'],\n    'win': ['chrome-win', 'headless_shell.exe'],\n  },\n  'firefox': {\n    'linux': ['firefox', 'firefox'],\n    'mac': ['firefox', 'Nightly.app', 'Contents', 'MacOS', 'firefox'],\n    'win': ['firefox', 'firefox.exe'],\n  },\n  'webkit': {\n    'linux': ['pw_run.sh'],\n    'mac': ['pw_run.sh'],\n    'win': ['Playwright.exe'],\n  },\n  'ffmpeg': {\n    'linux': ['ffmpeg-linux'],\n    'mac': ['ffmpeg-mac'],\n    'win': ['ffmpeg-win64.exe'],\n  },\n  'winldd': {\n    'linux': undefined,\n    'mac': undefined,\n    'win': ['PrintDeps.exe'],\n  },\n};\n\ntype DownloadPaths = Record<HostPlatform, string | undefined>;\nconst DOWNLOAD_PATHS: Record<BrowserName | InternalTool, DownloadPaths> = {\n  'chromium': {\n    '<unknown>': undefined,\n    'ubuntu18.04-x64': undefined,\n    'ubuntu20.04-x64': 'builds/chromium/%s/chromium-linux.zip',\n    'ubuntu22.04-x64': 'builds/chromium/%s/chromium-linux.zip',\n    'ubuntu24.04-x64': 'builds/chromium/%s/chromium-linux.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': 'builds/chromium/%s/chromium-linux-arm64.zip',\n    'ubuntu22.04-arm64': 'builds/chromium/%s/chromium-linux-arm64.zip',\n    'ubuntu24.04-arm64': 'builds/chromium/%s/chromium-linux-arm64.zip',\n    'debian11-x64': 'builds/chromium/%s/chromium-linux.zip',\n    'debian11-arm64': 'builds/chromium/%s/chromium-linux-arm64.zip',\n    'debian12-x64': 'builds/chromium/%s/chromium-linux.zip',\n    'debian12-arm64': 'builds/chromium/%s/chromium-linux-arm64.zip',\n    'debian13-x64': 'builds/chromium/%s/chromium-linux.zip',\n    'debian13-arm64': 'builds/chromium/%s/chromium-linux-arm64.zip',\n    'mac10.13': 'builds/chromium/%s/chromium-mac.zip',\n    'mac10.14': 'builds/chromium/%s/chromium-mac.zip',\n    'mac10.15': 'builds/chromium/%s/chromium-mac.zip',\n    'mac11': 'builds/chromium/%s/chromium-mac.zip',\n    'mac11-arm64': 'builds/chromium/%s/chromium-mac-arm64.zip',\n    'mac12': 'builds/chromium/%s/chromium-mac.zip',\n    'mac12-arm64': 'builds/chromium/%s/chromium-mac-arm64.zip',\n    'mac13': 'builds/chromium/%s/chromium-mac.zip',\n    'mac13-arm64': 'builds/chromium/%s/chromium-mac-arm64.zip',\n    'mac14': 'builds/chromium/%s/chromium-mac.zip',\n    'mac14-arm64': 'builds/chromium/%s/chromium-mac-arm64.zip',\n    'mac15': 'builds/chromium/%s/chromium-mac.zip',\n    'mac15-arm64': 'builds/chromium/%s/chromium-mac-arm64.zip',\n    'win64': 'builds/chromium/%s/chromium-win64.zip',\n  },\n  'chromium-headless-shell': {\n    '<unknown>': undefined,\n    'ubuntu18.04-x64': undefined,\n    'ubuntu20.04-x64': 'builds/chromium/%s/chromium-headless-shell-linux.zip',\n    'ubuntu22.04-x64': 'builds/chromium/%s/chromium-headless-shell-linux.zip',\n    'ubuntu24.04-x64': 'builds/chromium/%s/chromium-headless-shell-linux.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': 'builds/chromium/%s/chromium-headless-shell-linux-arm64.zip',\n    'ubuntu22.04-arm64': 'builds/chromium/%s/chromium-headless-shell-linux-arm64.zip',\n    'ubuntu24.04-arm64': 'builds/chromium/%s/chromium-headless-shell-linux-arm64.zip',\n    'debian11-x64': 'builds/chromium/%s/chromium-headless-shell-linux.zip',\n    'debian11-arm64': 'builds/chromium/%s/chromium-headless-shell-linux-arm64.zip',\n    'debian12-x64': 'builds/chromium/%s/chromium-headless-shell-linux.zip',\n    'debian12-arm64': 'builds/chromium/%s/chromium-headless-shell-linux-arm64.zip',\n    'debian13-x64': 'builds/chromium/%s/chromium-headless-shell-linux.zip',\n    'debian13-arm64': 'builds/chromium/%s/chromium-headless-shell-linux-arm64.zip',\n    'mac10.13': undefined,\n    'mac10.14': undefined,\n    'mac10.15': undefined,\n    'mac11': 'builds/chromium/%s/chromium-headless-shell-mac.zip',\n    'mac11-arm64': 'builds/chromium/%s/chromium-headless-shell-mac-arm64.zip',\n    'mac12': 'builds/chromium/%s/chromium-headless-shell-mac.zip',\n    'mac12-arm64': 'builds/chromium/%s/chromium-headless-shell-mac-arm64.zip',\n    'mac13': 'builds/chromium/%s/chromium-headless-shell-mac.zip',\n    'mac13-arm64': 'builds/chromium/%s/chromium-headless-shell-mac-arm64.zip',\n    'mac14': 'builds/chromium/%s/chromium-headless-shell-mac.zip',\n    'mac14-arm64': 'builds/chromium/%s/chromium-headless-shell-mac-arm64.zip',\n    'mac15': 'builds/chromium/%s/chromium-headless-shell-mac.zip',\n    'mac15-arm64': 'builds/chromium/%s/chromium-headless-shell-mac-arm64.zip',\n    'win64': 'builds/chromium/%s/chromium-headless-shell-win64.zip',\n  },\n  'chromium-tip-of-tree': {\n    '<unknown>': undefined,\n    'ubuntu18.04-x64': undefined,\n    'ubuntu20.04-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux.zip',\n    'ubuntu22.04-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux.zip',\n    'ubuntu24.04-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux-arm64.zip',\n    'ubuntu22.04-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux-arm64.zip',\n    'ubuntu24.04-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux-arm64.zip',\n    'debian11-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux.zip',\n    'debian11-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux-arm64.zip',\n    'debian12-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux.zip',\n    'debian12-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux-arm64.zip',\n    'debian13-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux.zip',\n    'debian13-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux-arm64.zip',\n    'mac10.13': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip',\n    'mac10.14': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip',\n    'mac10.15': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip',\n    'mac11': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip',\n    'mac11-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac-arm64.zip',\n    'mac12': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip',\n    'mac12-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac-arm64.zip',\n    'mac13': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip',\n    'mac13-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac-arm64.zip',\n    'mac14': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip',\n    'mac14-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac-arm64.zip',\n    'mac15': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip',\n    'mac15-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac-arm64.zip',\n    'win64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-win64.zip',\n  },\n  'chromium-tip-of-tree-headless-shell': {\n    '<unknown>': undefined,\n    'ubuntu18.04-x64': undefined,\n    'ubuntu20.04-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux.zip',\n    'ubuntu22.04-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux.zip',\n    'ubuntu24.04-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux-arm64.zip',\n    'ubuntu22.04-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux-arm64.zip',\n    'ubuntu24.04-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux-arm64.zip',\n    'debian11-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux.zip',\n    'debian11-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux-arm64.zip',\n    'debian12-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux.zip',\n    'debian12-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux-arm64.zip',\n    'debian13-x64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux.zip',\n    'debian13-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-linux-arm64.zip',\n    'mac10.13': undefined,\n    'mac10.14': undefined,\n    'mac10.15': undefined,\n    'mac11': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-mac.zip',\n    'mac11-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-mac-arm64.zip',\n    'mac12': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-mac.zip',\n    'mac12-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-mac-arm64.zip',\n    'mac13': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-mac.zip',\n    'mac13-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-mac-arm64.zip',\n    'mac14': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-mac.zip',\n    'mac14-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-mac-arm64.zip',\n    'mac15': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-mac.zip',\n    'mac15-arm64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-mac-arm64.zip',\n    'win64': 'builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-headless-shell-win64.zip',\n  },\n  'firefox': {\n    '<unknown>': undefined,\n    'ubuntu18.04-x64': undefined,\n    'ubuntu20.04-x64': 'builds/firefox/%s/firefox-ubuntu-20.04.zip',\n    'ubuntu22.04-x64': 'builds/firefox/%s/firefox-ubuntu-22.04.zip',\n    'ubuntu24.04-x64': 'builds/firefox/%s/firefox-ubuntu-24.04.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': 'builds/firefox/%s/firefox-ubuntu-20.04-arm64.zip',\n    'ubuntu22.04-arm64': 'builds/firefox/%s/firefox-ubuntu-22.04-arm64.zip',\n    'ubuntu24.04-arm64': 'builds/firefox/%s/firefox-ubuntu-24.04-arm64.zip',\n    'debian11-x64': 'builds/firefox/%s/firefox-debian-11.zip',\n    'debian11-arm64': 'builds/firefox/%s/firefox-debian-11-arm64.zip',\n    'debian12-x64': 'builds/firefox/%s/firefox-debian-12.zip',\n    'debian12-arm64': 'builds/firefox/%s/firefox-debian-12-arm64.zip',\n    'debian13-x64': 'builds/firefox/%s/firefox-debian-13.zip',\n    'debian13-arm64': 'builds/firefox/%s/firefox-debian-13-arm64.zip',\n    'mac10.13': 'builds/firefox/%s/firefox-mac.zip',\n    'mac10.14': 'builds/firefox/%s/firefox-mac.zip',\n    'mac10.15': 'builds/firefox/%s/firefox-mac.zip',\n    'mac11': 'builds/firefox/%s/firefox-mac.zip',\n    'mac11-arm64': 'builds/firefox/%s/firefox-mac-arm64.zip',\n    'mac12': 'builds/firefox/%s/firefox-mac.zip',\n    'mac12-arm64': 'builds/firefox/%s/firefox-mac-arm64.zip',\n    'mac13': 'builds/firefox/%s/firefox-mac.zip',\n    'mac13-arm64': 'builds/firefox/%s/firefox-mac-arm64.zip',\n    'mac14': 'builds/firefox/%s/firefox-mac.zip',\n    'mac14-arm64': 'builds/firefox/%s/firefox-mac-arm64.zip',\n    'mac15': 'builds/firefox/%s/firefox-mac.zip',\n    'mac15-arm64': 'builds/firefox/%s/firefox-mac-arm64.zip',\n    'win64': 'builds/firefox/%s/firefox-win64.zip',\n  },\n  'firefox-beta': {\n    '<unknown>': undefined,\n    'ubuntu18.04-x64': undefined,\n    'ubuntu20.04-x64': 'builds/firefox-beta/%s/firefox-beta-ubuntu-20.04.zip',\n    'ubuntu22.04-x64': 'builds/firefox-beta/%s/firefox-beta-ubuntu-22.04.zip',\n    'ubuntu24.04-x64': 'builds/firefox-beta/%s/firefox-beta-ubuntu-24.04.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': undefined,\n    'ubuntu22.04-arm64': 'builds/firefox-beta/%s/firefox-beta-ubuntu-22.04-arm64.zip',\n    'ubuntu24.04-arm64': 'builds/firefox-beta/%s/firefox-beta-ubuntu-24.04-arm64.zip',\n    'debian11-x64': 'builds/firefox-beta/%s/firefox-beta-debian-11.zip',\n    'debian11-arm64': 'builds/firefox-beta/%s/firefox-beta-debian-11-arm64.zip',\n    'debian12-x64': 'builds/firefox-beta/%s/firefox-beta-debian-12.zip',\n    'debian12-arm64': 'builds/firefox-beta/%s/firefox-beta-debian-12-arm64.zip',\n    'debian13-x64': 'builds/firefox-beta/%s/firefox-beta-debian-12.zip',\n    'debian13-arm64': 'builds/firefox-beta/%s/firefox-beta-debian-12-arm64.zip',\n    'mac10.13': 'builds/firefox-beta/%s/firefox-beta-mac.zip',\n    'mac10.14': 'builds/firefox-beta/%s/firefox-beta-mac.zip',\n    'mac10.15': 'builds/firefox-beta/%s/firefox-beta-mac.zip',\n    'mac11': 'builds/firefox-beta/%s/firefox-beta-mac.zip',\n    'mac11-arm64': 'builds/firefox-beta/%s/firefox-beta-mac-arm64.zip',\n    'mac12': 'builds/firefox-beta/%s/firefox-beta-mac.zip',\n    'mac12-arm64': 'builds/firefox-beta/%s/firefox-beta-mac-arm64.zip',\n    'mac13': 'builds/firefox-beta/%s/firefox-beta-mac.zip',\n    'mac13-arm64': 'builds/firefox-beta/%s/firefox-beta-mac-arm64.zip',\n    'mac14': 'builds/firefox-beta/%s/firefox-beta-mac.zip',\n    'mac14-arm64': 'builds/firefox-beta/%s/firefox-beta-mac-arm64.zip',\n    'mac15': 'builds/firefox-beta/%s/firefox-beta-mac.zip',\n    'mac15-arm64': 'builds/firefox-beta/%s/firefox-beta-mac-arm64.zip',\n    'win64': 'builds/firefox-beta/%s/firefox-beta-win64.zip',\n  },\n  'webkit': {\n    '<unknown>': undefined,\n    'ubuntu18.04-x64': undefined,\n    'ubuntu20.04-x64': 'builds/webkit/%s/webkit-ubuntu-20.04.zip',\n    'ubuntu22.04-x64': 'builds/webkit/%s/webkit-ubuntu-22.04.zip',\n    'ubuntu24.04-x64': 'builds/webkit/%s/webkit-ubuntu-24.04.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': 'builds/webkit/%s/webkit-ubuntu-20.04-arm64.zip',\n    'ubuntu22.04-arm64': 'builds/webkit/%s/webkit-ubuntu-22.04-arm64.zip',\n    'ubuntu24.04-arm64': 'builds/webkit/%s/webkit-ubuntu-24.04-arm64.zip',\n    'debian11-x64': 'builds/webkit/%s/webkit-debian-11.zip',\n    'debian11-arm64': 'builds/webkit/%s/webkit-debian-11-arm64.zip',\n    'debian12-x64': 'builds/webkit/%s/webkit-debian-12.zip',\n    'debian12-arm64': 'builds/webkit/%s/webkit-debian-12-arm64.zip',\n    'debian13-x64': 'builds/webkit/%s/webkit-debian-13.zip',\n    'debian13-arm64': 'builds/webkit/%s/webkit-debian-13-arm64.zip',\n    'mac10.13': undefined,\n    'mac10.14': 'builds/deprecated-webkit-mac-10.14/%s/deprecated-webkit-mac-10.14.zip',\n    'mac10.15': 'builds/deprecated-webkit-mac-10.15/%s/deprecated-webkit-mac-10.15.zip',\n    'mac11': 'builds/webkit/%s/webkit-mac-11.zip',\n    'mac11-arm64': 'builds/webkit/%s/webkit-mac-11-arm64.zip',\n    'mac12': 'builds/webkit/%s/webkit-mac-12.zip',\n    'mac12-arm64': 'builds/webkit/%s/webkit-mac-12-arm64.zip',\n    'mac13': 'builds/webkit/%s/webkit-mac-13.zip',\n    'mac13-arm64': 'builds/webkit/%s/webkit-mac-13-arm64.zip',\n    'mac14': 'builds/webkit/%s/webkit-mac-14.zip',\n    'mac14-arm64': 'builds/webkit/%s/webkit-mac-14-arm64.zip',\n    'mac15': 'builds/webkit/%s/webkit-mac-15.zip',\n    'mac15-arm64': 'builds/webkit/%s/webkit-mac-15-arm64.zip',\n    'win64': 'builds/webkit/%s/webkit-win64.zip',\n  },\n  'ffmpeg': {\n    '<unknown>': undefined,\n    'ubuntu18.04-x64': undefined,\n    'ubuntu20.04-x64': 'builds/ffmpeg/%s/ffmpeg-linux.zip',\n    'ubuntu22.04-x64': 'builds/ffmpeg/%s/ffmpeg-linux.zip',\n    'ubuntu24.04-x64': 'builds/ffmpeg/%s/ffmpeg-linux.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': 'builds/ffmpeg/%s/ffmpeg-linux-arm64.zip',\n    'ubuntu22.04-arm64': 'builds/ffmpeg/%s/ffmpeg-linux-arm64.zip',\n    'ubuntu24.04-arm64': 'builds/ffmpeg/%s/ffmpeg-linux-arm64.zip',\n    'debian11-x64': 'builds/ffmpeg/%s/ffmpeg-linux.zip',\n    'debian11-arm64': 'builds/ffmpeg/%s/ffmpeg-linux-arm64.zip',\n    'debian12-x64': 'builds/ffmpeg/%s/ffmpeg-linux.zip',\n    'debian12-arm64': 'builds/ffmpeg/%s/ffmpeg-linux-arm64.zip',\n    'debian13-x64': 'builds/ffmpeg/%s/ffmpeg-linux.zip',\n    'debian13-arm64': 'builds/ffmpeg/%s/ffmpeg-linux-arm64.zip',\n    'mac10.13': 'builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac10.14': 'builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac10.15': 'builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac11': 'builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac11-arm64': 'builds/ffmpeg/%s/ffmpeg-mac-arm64.zip',\n    'mac12': 'builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac12-arm64': 'builds/ffmpeg/%s/ffmpeg-mac-arm64.zip',\n    'mac13': 'builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac13-arm64': 'builds/ffmpeg/%s/ffmpeg-mac-arm64.zip',\n    'mac14': 'builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac14-arm64': 'builds/ffmpeg/%s/ffmpeg-mac-arm64.zip',\n    'mac15': 'builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac15-arm64': 'builds/ffmpeg/%s/ffmpeg-mac-arm64.zip',\n    'win64': 'builds/ffmpeg/%s/ffmpeg-win64.zip',\n  },\n  'winldd': {\n    '<unknown>': undefined,\n    'ubuntu18.04-x64': undefined,\n    'ubuntu20.04-x64': undefined,\n    'ubuntu22.04-x64': undefined,\n    'ubuntu24.04-x64': undefined,\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': undefined,\n    'ubuntu22.04-arm64': undefined,\n    'ubuntu24.04-arm64': undefined,\n    'debian11-x64': undefined,\n    'debian11-arm64': undefined,\n    'debian12-x64': undefined,\n    'debian12-arm64': undefined,\n    'debian13-x64': undefined,\n    'debian13-arm64': undefined,\n    'mac10.13': undefined,\n    'mac10.14': undefined,\n    'mac10.15': undefined,\n    'mac11': undefined,\n    'mac11-arm64': undefined,\n    'mac12': undefined,\n    'mac12-arm64': undefined,\n    'mac13': undefined,\n    'mac13-arm64': undefined,\n    'mac14': undefined,\n    'mac14-arm64': undefined,\n    'mac15': undefined,\n    'mac15-arm64': undefined,\n    'win64': 'builds/winldd/%s/winldd-win64.zip',\n  },\n  'android': {\n    '<unknown>': 'builds/android/%s/android.zip',\n    'ubuntu18.04-x64': undefined,\n    'ubuntu20.04-x64': 'builds/android/%s/android.zip',\n    'ubuntu22.04-x64': 'builds/android/%s/android.zip',\n    'ubuntu24.04-x64': 'builds/android/%s/android.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': 'builds/android/%s/android.zip',\n    'ubuntu22.04-arm64': 'builds/android/%s/android.zip',\n    'ubuntu24.04-arm64': 'builds/android/%s/android.zip',\n    'debian11-x64': 'builds/android/%s/android.zip',\n    'debian11-arm64': 'builds/android/%s/android.zip',\n    'debian12-x64': 'builds/android/%s/android.zip',\n    'debian12-arm64': 'builds/android/%s/android.zip',\n    'debian13-x64': 'builds/android/%s/android.zip',\n    'debian13-arm64': 'builds/android/%s/android.zip',\n    'mac10.13': 'builds/android/%s/android.zip',\n    'mac10.14': 'builds/android/%s/android.zip',\n    'mac10.15': 'builds/android/%s/android.zip',\n    'mac11': 'builds/android/%s/android.zip',\n    'mac11-arm64': 'builds/android/%s/android.zip',\n    'mac12': 'builds/android/%s/android.zip',\n    'mac12-arm64': 'builds/android/%s/android.zip',\n    'mac13': 'builds/android/%s/android.zip',\n    'mac13-arm64': 'builds/android/%s/android.zip',\n    'mac14': 'builds/android/%s/android.zip',\n    'mac14-arm64': 'builds/android/%s/android.zip',\n    'mac15': 'builds/android/%s/android.zip',\n    'mac15-arm64': 'builds/android/%s/android.zip',\n    'win64': 'builds/android/%s/android.zip',\n  },\n  // TODO(bidi): implement downloads.\n  '_bidiFirefox': {\n  } as DownloadPaths,\n  '_bidiChromium': {\n  } as DownloadPaths,\n};\n\nexport const registryDirectory = (() => {\n  let result: string;\n\n  const envDefined = getFromENV('PLAYWRIGHT_BROWSERS_PATH');\n  if (envDefined === '0') {\n    result = path.join(__dirname, '..', '..', '..', '.local-browsers');\n  } else if (envDefined) {\n    result = envDefined;\n  } else {\n    let cacheDirectory: string;\n    if (process.platform === 'linux')\n      cacheDirectory = process.env.XDG_CACHE_HOME || path.join(os.homedir(), '.cache');\n    else if (process.platform === 'darwin')\n      cacheDirectory = path.join(os.homedir(), 'Library', 'Caches');\n    else if (process.platform === 'win32')\n      cacheDirectory = process.env.LOCALAPPDATA || path.join(os.homedir(), 'AppData', 'Local');\n    else\n      throw new Error('Unsupported platform: ' + process.platform);\n    result = path.join(cacheDirectory, 'ms-playwright');\n  }\n\n  if (!path.isAbsolute(result)) {\n    // It is important to resolve to the absolute path:\n    //   - for unzipping to work correctly;\n    //   - so that registry directory matches between installation and execution.\n    // INIT_CWD points to the root of `npm/yarn install` and is probably what\n    // the user meant when typing the relative path.\n    result = path.resolve(getFromENV('INIT_CWD') || process.cwd(), result);\n  }\n  return result;\n})();\n\nfunction isBrowserDirectory(browserDirectory: string): boolean {\n  const baseName = path.basename(browserDirectory);\n  for (const browserName of allDownloadable) {\n    if (baseName.startsWith(browserName.replace(/-/g, '_') + '-'))\n      return true;\n  }\n  return false;\n}\n\ntype BrowsersJSON = {\n  comment: string\n  browsers: {\n    name: string,\n    revision: string,\n    browserVersion?: string,\n    installByDefault: boolean,\n    revisionOverrides?: {[os: string]: string},\n  }[]\n};\n\ntype BrowsersJSONDescriptor = {\n  name: string,\n  revision: string,\n  hasRevisionOverride: boolean\n  browserVersion?: string,\n  installByDefault: boolean,\n  dir: string,\n};\n\nexport type BrowserInfo = {\n  browserName: string,\n  browserVersion: number,\n  browserPath: string\n  referenceDir: string,\n};\n\nfunction readDescriptors(browsersJSON: BrowsersJSON): BrowsersJSONDescriptor[] {\n  return (browsersJSON['browsers']).map(obj => {\n    const name = obj.name;\n    const revisionOverride = (obj.revisionOverrides || {})[hostPlatform];\n    const revision = revisionOverride || obj.revision;\n    const browserDirectoryPrefix = revisionOverride ? `${name}_${hostPlatform}_special` : `${name}`;\n    const descriptor: BrowsersJSONDescriptor = {\n      name,\n      revision,\n      hasRevisionOverride: !!revisionOverride,\n      // We only put browser version for the supported operating systems.\n      browserVersion: revisionOverride ? undefined : obj.browserVersion,\n      installByDefault: !!obj.installByDefault,\n      // Method `isBrowserDirectory` determines directory to be browser iff\n      // it starts with some browser name followed by '-'. Some browser names\n      // are prefixes of others, e.g. 'webkit' is a prefix of `webkit-technology-preview`.\n      // To avoid older registries erroneously removing 'webkit-technology-preview', we have to\n      // ensure that browser folders to never include dashes inside.\n      dir: path.join(registryDirectory, browserDirectoryPrefix.replace(/-/g, '_') + '-' + revision),\n    };\n    return descriptor;\n  });\n}\n\nexport type BrowserName = 'chromium' | 'firefox' | 'webkit' | '_bidiFirefox' | '_bidiChromium';\ntype InternalTool = 'ffmpeg' | 'winldd' | 'firefox-beta' | 'chromium-tip-of-tree' | 'chromium-headless-shell' | 'chromium-tip-of-tree-headless-shell' | 'android';\ntype BidiChannel = 'moz-firefox' | 'moz-firefox-beta' | 'moz-firefox-nightly' | 'bidi-chrome-canary' | 'bidi-chrome-stable' | 'bidi-chromium';\ntype ChromiumChannel = 'chrome' | 'chrome-beta' | 'chrome-dev' | 'chrome-canary' | 'msedge' | 'msedge-beta' | 'msedge-dev' | 'msedge-canary';\nconst allDownloadable = ['android', 'chromium', 'firefox', 'webkit', 'ffmpeg', 'firefox-beta', 'chromium-tip-of-tree', 'chromium-headless-shell', 'chromium-tip-of-tree-headless-shell'];\n\nexport interface Executable {\n  type: 'browser' | 'tool' | 'channel';\n  name: BrowserName | InternalTool | ChromiumChannel | BidiChannel;\n  browserName: BrowserName | undefined;\n  installType: 'download-by-default' | 'download-on-demand' | 'install-script' | 'none';\n  directory: string | undefined;\n  downloadURLs?: string[],\n  browserVersion?: string,\n  executablePathOrDie(sdkLanguage: string): string;\n  executablePath(sdkLanguage: string): string | undefined;\n  _validateHostRequirements(sdkLanguage: string): Promise<void>;\n}\n\ninterface ExecutableImpl extends Executable {\n  _install?: () => Promise<void>;\n  _dependencyGroup?: DependencyGroup;\n  _isHermeticInstallation?: boolean;\n}\n\nexport class Registry {\n  private _executables: ExecutableImpl[];\n\n  constructor(browsersJSON: BrowsersJSON) {\n    const descriptors = readDescriptors(browsersJSON);\n    const findExecutablePath = (dir: string, name: keyof typeof EXECUTABLE_PATHS) => {\n      let tokens = undefined;\n      if (process.platform === 'linux')\n        tokens = EXECUTABLE_PATHS[name]['linux'];\n      else if (process.platform === 'darwin')\n        tokens = EXECUTABLE_PATHS[name]['mac'];\n      else if (process.platform === 'win32')\n        tokens = EXECUTABLE_PATHS[name]['win'];\n      return tokens ? path.join(dir, ...tokens) : undefined;\n    };\n    const executablePathOrDie = (name: string, e: string | undefined, installByDefault: boolean, sdkLanguage: string) => {\n      if (!e)\n        throw new Error(`${name} is not supported on ${hostPlatform}`);\n      const installCommand = buildPlaywrightCLICommand(sdkLanguage, `install${installByDefault ? '' : ' ' + name}`);\n      if (!canAccessFile(e)) {\n        const currentDockerVersion = readDockerVersionSync();\n        const preferredDockerVersion = currentDockerVersion ? dockerVersion(currentDockerVersion.dockerImageNameTemplate) : null;\n        const isOutdatedDockerImage = currentDockerVersion && preferredDockerVersion && currentDockerVersion.dockerImageName !== preferredDockerVersion.dockerImageName;\n        const prettyMessage = isOutdatedDockerImage ? [\n          `Looks like ${sdkLanguage === 'javascript' ? 'Playwright Test or ' : ''}Playwright was just updated to ${preferredDockerVersion.driverVersion}.`,\n          `Please update docker image as well.`,\n          `-  current: ${currentDockerVersion.dockerImageName}`,\n          `- required: ${preferredDockerVersion.dockerImageName}`,\n          ``,\n          `<3 Playwright Team`,\n        ].join('\\n') : [\n          `Looks like ${sdkLanguage === 'javascript' ? 'Playwright Test or ' : ''}Playwright was just installed or updated.`,\n          `Please run the following command to download new browser${installByDefault ? 's' : ''}:`,\n          ``,\n          `    ${installCommand}`,\n          ``,\n          `<3 Playwright Team`,\n        ].join('\\n');\n        throw new Error(`Executable doesn't exist at ${e}\\n${wrapInASCIIBox(prettyMessage, 1)}`);\n      }\n      return e;\n    };\n    this._executables = [];\n\n    const chromium = descriptors.find(d => d.name === 'chromium')!;\n    const chromiumExecutable = findExecutablePath(chromium.dir, 'chromium');\n    this._executables.push({\n      type: 'browser',\n      name: 'chromium',\n      browserName: 'chromium',\n      directory: chromium.dir,\n      executablePath: () => chromiumExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('chromium', chromiumExecutable, chromium.installByDefault, sdkLanguage),\n      installType: chromium.installByDefault ? 'download-by-default' : 'download-on-demand',\n      _validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, chromium.dir, ['chrome-linux'], [], ['chrome-win']),\n      downloadURLs: this._downloadURLs(chromium),\n      browserVersion: chromium.browserVersion,\n      _install: () => this._downloadExecutable(chromium, chromiumExecutable),\n      _dependencyGroup: 'chromium',\n      _isHermeticInstallation: true,\n    });\n\n    const chromiumHeadlessShell = descriptors.find(d => d.name === 'chromium-headless-shell')!;\n    const chromiumHeadlessShellExecutable = findExecutablePath(chromiumHeadlessShell.dir, 'chromium-headless-shell');\n    this._executables.push({\n      type: 'channel',\n      name: 'chromium-headless-shell',\n      browserName: 'chromium',\n      directory: chromiumHeadlessShell.dir,\n      executablePath: () => chromiumHeadlessShellExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('chromium', chromiumHeadlessShellExecutable, chromiumHeadlessShell.installByDefault, sdkLanguage),\n      installType: chromiumHeadlessShell.installByDefault ? 'download-by-default' : 'download-on-demand',\n      _validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, chromiumHeadlessShell.dir, ['chrome-linux'], [], ['chrome-win']),\n      downloadURLs: this._downloadURLs(chromiumHeadlessShell),\n      browserVersion: chromium.browserVersion,\n      _install: () => this._downloadExecutable(chromiumHeadlessShell, chromiumHeadlessShellExecutable),\n      _dependencyGroup: 'chromium',\n      _isHermeticInstallation: true,\n    });\n\n    const chromiumTipOfTreeHeadlessShell = descriptors.find(d => d.name === 'chromium-tip-of-tree-headless-shell')!;\n    const chromiumTipOfTreeHeadlessShellExecutable = findExecutablePath(chromiumTipOfTreeHeadlessShell.dir, 'chromium-headless-shell');\n    this._executables.push({\n      type: 'channel',\n      name: 'chromium-tip-of-tree-headless-shell',\n      browserName: 'chromium',\n      directory: chromiumTipOfTreeHeadlessShell.dir,\n      executablePath: () => chromiumTipOfTreeHeadlessShellExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('chromium', chromiumTipOfTreeHeadlessShellExecutable, chromiumTipOfTreeHeadlessShell.installByDefault, sdkLanguage),\n      installType: chromiumTipOfTreeHeadlessShell.installByDefault ? 'download-by-default' : 'download-on-demand',\n      _validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, chromiumTipOfTreeHeadlessShell.dir, ['chrome-linux'], [], ['chrome-win']),\n      downloadURLs: this._downloadURLs(chromiumTipOfTreeHeadlessShell),\n      browserVersion: chromium.browserVersion,\n      _install: () => this._downloadExecutable(chromiumTipOfTreeHeadlessShell, chromiumTipOfTreeHeadlessShellExecutable),\n      _dependencyGroup: 'chromium',\n      _isHermeticInstallation: true,\n    });\n\n    const chromiumTipOfTree = descriptors.find(d => d.name === 'chromium-tip-of-tree')!;\n    const chromiumTipOfTreeExecutable = findExecutablePath(chromiumTipOfTree.dir, 'chromium');\n    this._executables.push({\n      type: 'tool',\n      name: 'chromium-tip-of-tree',\n      browserName: 'chromium',\n      directory: chromiumTipOfTree.dir,\n      executablePath: () => chromiumTipOfTreeExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('chromium-tip-of-tree', chromiumTipOfTreeExecutable, chromiumTipOfTree.installByDefault, sdkLanguage),\n      installType: chromiumTipOfTree.installByDefault ? 'download-by-default' : 'download-on-demand',\n      _validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, chromiumTipOfTree.dir, ['chrome-linux'], [], ['chrome-win']),\n      downloadURLs: this._downloadURLs(chromiumTipOfTree),\n      browserVersion: chromiumTipOfTree.browserVersion,\n      _install: () => this._downloadExecutable(chromiumTipOfTree, chromiumTipOfTreeExecutable),\n      _dependencyGroup: 'chromium',\n      _isHermeticInstallation: true,\n    });\n\n    this._executables.push(this._createChromiumChannel('chrome', {\n      'linux': '/opt/google/chrome/chrome',\n      'darwin': '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome',\n      'win32': `\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe`,\n    }, () => this._installChromiumChannel('chrome', {\n      'linux': 'reinstall_chrome_stable_linux.sh',\n      'darwin': 'reinstall_chrome_stable_mac.sh',\n      'win32': 'reinstall_chrome_stable_win.ps1',\n    })));\n\n    this._executables.push(this._createChromiumChannel('chrome-beta', {\n      'linux': '/opt/google/chrome-beta/chrome',\n      'darwin': '/Applications/Google Chrome Beta.app/Contents/MacOS/Google Chrome Beta',\n      'win32': `\\\\Google\\\\Chrome Beta\\\\Application\\\\chrome.exe`,\n    }, () => this._installChromiumChannel('chrome-beta', {\n      'linux': 'reinstall_chrome_beta_linux.sh',\n      'darwin': 'reinstall_chrome_beta_mac.sh',\n      'win32': 'reinstall_chrome_beta_win.ps1',\n    })));\n\n    this._executables.push(this._createChromiumChannel('chrome-dev', {\n      'linux': '/opt/google/chrome-unstable/chrome',\n      'darwin': '/Applications/Google Chrome Dev.app/Contents/MacOS/Google Chrome Dev',\n      'win32': `\\\\Google\\\\Chrome Dev\\\\Application\\\\chrome.exe`,\n    }));\n\n    this._executables.push(this._createChromiumChannel('chrome-canary', {\n      'linux': '/opt/google/chrome-canary/chrome',\n      'darwin': '/Applications/Google Chrome Canary.app/Contents/MacOS/Google Chrome Canary',\n      'win32': `\\\\Google\\\\Chrome SxS\\\\Application\\\\chrome.exe`,\n    }));\n\n    this._executables.push(this._createChromiumChannel('msedge', {\n      'linux': '/opt/microsoft/msedge/msedge',\n      'darwin': '/Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge',\n      'win32': `\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe`,\n    }, () => this._installMSEdgeChannel('msedge', {\n      'linux': 'reinstall_msedge_stable_linux.sh',\n      'darwin': 'reinstall_msedge_stable_mac.sh',\n      'win32': 'reinstall_msedge_stable_win.ps1',\n    })));\n\n    this._executables.push(this._createChromiumChannel('msedge-beta', {\n      'linux': '/opt/microsoft/msedge-beta/msedge',\n      'darwin': '/Applications/Microsoft Edge Beta.app/Contents/MacOS/Microsoft Edge Beta',\n      'win32': `\\\\Microsoft\\\\Edge Beta\\\\Application\\\\msedge.exe`,\n    }, () => this._installMSEdgeChannel('msedge-beta', {\n      'darwin': 'reinstall_msedge_beta_mac.sh',\n      'linux': 'reinstall_msedge_beta_linux.sh',\n      'win32': 'reinstall_msedge_beta_win.ps1',\n    })));\n\n    this._executables.push(this._createChromiumChannel('msedge-dev', {\n      'linux': '/opt/microsoft/msedge-dev/msedge',\n      'darwin': '/Applications/Microsoft Edge Dev.app/Contents/MacOS/Microsoft Edge Dev',\n      'win32': `\\\\Microsoft\\\\Edge Dev\\\\Application\\\\msedge.exe`,\n    }, () => this._installMSEdgeChannel('msedge-dev', {\n      'darwin': 'reinstall_msedge_dev_mac.sh',\n      'linux': 'reinstall_msedge_dev_linux.sh',\n      'win32': 'reinstall_msedge_dev_win.ps1',\n    })));\n\n    this._executables.push(this._createChromiumChannel('msedge-canary', {\n      'linux': '',\n      'darwin': '/Applications/Microsoft Edge Canary.app/Contents/MacOS/Microsoft Edge Canary',\n      'win32': `\\\\Microsoft\\\\Edge SxS\\\\Application\\\\msedge.exe`,\n    }));\n\n    this._executables.push(this._createBidiFirefoxChannel('moz-firefox', {\n      'linux': '/snap/bin/firefox',\n      'darwin': '/Applications/Firefox.app/Contents/MacOS/firefox',\n      'win32': '\\\\Mozilla Firefox\\\\firefox.exe',\n    }));\n    this._executables.push(this._createBidiFirefoxChannel('moz-firefox-beta', {\n      'linux': '/opt/firefox-beta/firefox',\n      'darwin': '/Applications/Firefox.app/Contents/MacOS/firefox',\n      'win32': '\\\\Mozilla Firefox\\\\firefox.exe',\n    }));\n    this._executables.push(this._createBidiFirefoxChannel('moz-firefox-nightly', {\n      'linux': '/opt/firefox-nightly/firefox',\n      'darwin': '/Applications/Firefox Nightly.app/Contents/MacOS/firefox',\n      'win32': '\\\\Mozilla Firefox\\\\firefox.exe',\n    }));\n\n    this._executables.push(this._createBidiChromiumChannel('bidi-chrome-stable', {\n      'linux': '/opt/google/chrome/chrome',\n      'darwin': '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome',\n      'win32': `\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe`,\n    }));\n    this._executables.push(this._createBidiChromiumChannel('bidi-chrome-canary', {\n      'linux': '/opt/google/chrome-canary/chrome',\n      'darwin': '/Applications/Google Chrome Canary.app/Contents/MacOS/Google Chrome Canary',\n      'win32': `\\\\Google\\\\Chrome SxS\\\\Application\\\\chrome.exe`,\n    }));\n    this._executables.push({\n      type: 'browser',\n      name: '_bidiChromium',\n      browserName: '_bidiChromium',\n      directory: chromium.dir,\n      executablePath: () => chromiumExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('chromium', chromiumExecutable, chromium.installByDefault, sdkLanguage),\n      installType: 'download-on-demand',\n      _validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, chromium.dir, ['chrome-linux'], [], ['chrome-win']),\n      downloadURLs: this._downloadURLs(chromium),\n      browserVersion: chromium.browserVersion,\n      _install: () => this._downloadExecutable(chromium, chromiumExecutable),\n      _dependencyGroup: 'chromium',\n      _isHermeticInstallation: true,\n    });\n\n    const firefox = descriptors.find(d => d.name === 'firefox')!;\n    const firefoxExecutable = findExecutablePath(firefox.dir, 'firefox');\n    this._executables.push({\n      type: 'browser',\n      name: 'firefox',\n      browserName: 'firefox',\n      directory: firefox.dir,\n      executablePath: () => firefoxExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('firefox', firefoxExecutable, firefox.installByDefault, sdkLanguage),\n      installType: firefox.installByDefault ? 'download-by-default' : 'download-on-demand',\n      _validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, firefox.dir, ['firefox'], [], ['firefox']),\n      downloadURLs: this._downloadURLs(firefox),\n      browserVersion: firefox.browserVersion,\n      _install: () => this._downloadExecutable(firefox, firefoxExecutable),\n      _dependencyGroup: 'firefox',\n      _isHermeticInstallation: true,\n    });\n\n    const firefoxBeta = descriptors.find(d => d.name === 'firefox-beta')!;\n    const firefoxBetaExecutable = findExecutablePath(firefoxBeta.dir, 'firefox');\n    this._executables.push({\n      type: 'tool',\n      name: 'firefox-beta',\n      browserName: 'firefox',\n      directory: firefoxBeta.dir,\n      executablePath: () => firefoxBetaExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('firefox-beta', firefoxBetaExecutable, firefoxBeta.installByDefault, sdkLanguage),\n      installType: firefoxBeta.installByDefault ? 'download-by-default' : 'download-on-demand',\n      _validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, firefoxBeta.dir, ['firefox'], [], ['firefox']),\n      downloadURLs: this._downloadURLs(firefoxBeta),\n      browserVersion: firefoxBeta.browserVersion,\n      _install: () => this._downloadExecutable(firefoxBeta, firefoxBetaExecutable),\n      _dependencyGroup: 'firefox',\n      _isHermeticInstallation: true,\n    });\n\n    const webkit = descriptors.find(d => d.name === 'webkit')!;\n    const webkitExecutable = findExecutablePath(webkit.dir, 'webkit');\n    const webkitLinuxLddDirectories = [\n      path.join('minibrowser-gtk'),\n      path.join('minibrowser-gtk', 'bin'),\n      path.join('minibrowser-gtk', 'lib'),\n      path.join('minibrowser-gtk', 'sys', 'lib'),\n      path.join('minibrowser-wpe'),\n      path.join('minibrowser-wpe', 'bin'),\n      path.join('minibrowser-wpe', 'lib'),\n      path.join('minibrowser-wpe', 'sys', 'lib'),\n    ];\n    this._executables.push({\n      type: 'browser',\n      name: 'webkit',\n      browserName: 'webkit',\n      directory: webkit.dir,\n      executablePath: () => webkitExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('webkit', webkitExecutable, webkit.installByDefault, sdkLanguage),\n      installType: webkit.installByDefault ? 'download-by-default' : 'download-on-demand',\n      _validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, webkit.dir, webkitLinuxLddDirectories, ['libGLESv2.so.2', 'libx264.so'], ['']),\n      downloadURLs: this._downloadURLs(webkit),\n      browserVersion: webkit.browserVersion,\n      _install: () => this._downloadExecutable(webkit, webkitExecutable),\n      _dependencyGroup: 'webkit',\n      _isHermeticInstallation: true,\n    });\n\n    const ffmpeg = descriptors.find(d => d.name === 'ffmpeg')!;\n    const ffmpegExecutable = findExecutablePath(ffmpeg.dir, 'ffmpeg');\n    this._executables.push({\n      type: 'tool',\n      name: 'ffmpeg',\n      browserName: undefined,\n      directory: ffmpeg.dir,\n      executablePath: () => ffmpegExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('ffmpeg', ffmpegExecutable, ffmpeg.installByDefault, sdkLanguage),\n      installType: ffmpeg.installByDefault ? 'download-by-default' : 'download-on-demand',\n      _validateHostRequirements: () => Promise.resolve(),\n      downloadURLs: this._downloadURLs(ffmpeg),\n      _install: () => this._downloadExecutable(ffmpeg, ffmpegExecutable),\n      _dependencyGroup: 'tools',\n      _isHermeticInstallation: true,\n    });\n    const winldd = descriptors.find(d => d.name === 'winldd')!;\n    const winlddExecutable = findExecutablePath(winldd.dir, 'winldd');\n    this._executables.push({\n      type: 'tool',\n      name: 'winldd',\n      browserName: undefined,\n      directory: winldd.dir,\n      executablePath: () => winlddExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('winldd', winlddExecutable, winldd.installByDefault, sdkLanguage),\n      installType: process.platform === 'win32' ? 'download-by-default' : 'none',\n      _validateHostRequirements: () => Promise.resolve(),\n      downloadURLs: this._downloadURLs(winldd),\n      _install: () => this._downloadExecutable(winldd, winlddExecutable),\n      _dependencyGroup: 'tools',\n      _isHermeticInstallation: true,\n    });\n    const android = descriptors.find(d => d.name === 'android')!;\n    this._executables.push({\n      type: 'tool',\n      name: 'android',\n      browserName: undefined,\n      directory: android.dir,\n      executablePath: () => undefined,\n      executablePathOrDie: () => '',\n      installType: 'download-on-demand',\n      _validateHostRequirements: () => Promise.resolve(),\n      downloadURLs: this._downloadURLs(android),\n      _install: () => this._downloadExecutable(android),\n      _dependencyGroup: 'tools',\n      _isHermeticInstallation: true,\n    });\n  }\n\n  private _createChromiumChannel(name: ChromiumChannel, lookAt: Record<'linux' | 'darwin' | 'win32', string>, install?: () => Promise<void>): ExecutableImpl {\n    const executablePath = (sdkLanguage: string, shouldThrow: boolean) => {\n      const suffix = lookAt[process.platform as 'linux' | 'darwin' | 'win32'];\n      if (!suffix) {\n        if (shouldThrow)\n          throw new Error(`Chromium distribution '${name}' is not supported on ${process.platform}`);\n        return undefined;\n      }\n      const prefixes = (process.platform === 'win32' ? [\n        process.env.LOCALAPPDATA,\n        process.env.PROGRAMFILES,\n        process.env['PROGRAMFILES(X86)'],\n        // In some cases there is no PROGRAMFILES/(86) env var set but HOMEDRIVE is set.\n        process.env.HOMEDRIVE + '\\\\Program Files',\n        process.env.HOMEDRIVE + '\\\\Program Files (x86)',\n      ].filter(Boolean) : ['']) as string[];\n\n      for (const prefix of prefixes) {\n        const executablePath = path.join(prefix, suffix);\n        if (canAccessFile(executablePath))\n          return executablePath;\n      }\n      if (!shouldThrow)\n        return undefined;\n\n      const location = prefixes.length ? ` at ${path.join(prefixes[0], suffix)}` : ``;\n      const installation = install ? `\\nRun \"${buildPlaywrightCLICommand(sdkLanguage, 'install ' + name)}\"` : '';\n      throw new Error(`Chromium distribution '${name}' is not found${location}${installation}`);\n    };\n    return {\n      type: 'channel',\n      name,\n      browserName: 'chromium',\n      directory: undefined,\n      executablePath: (sdkLanguage: string) => executablePath(sdkLanguage, false),\n      executablePathOrDie: (sdkLanguage: string) => executablePath(sdkLanguage, true)!,\n      installType: install ? 'install-script' : 'none',\n      _validateHostRequirements: () => Promise.resolve(),\n      _isHermeticInstallation: false,\n      _install: install,\n    };\n  }\n\n  private _createBidiFirefoxChannel(name: BidiChannel, lookAt: Record<'linux' | 'darwin' | 'win32', string>, install?: () => Promise<void>): ExecutableImpl {\n    const executablePath = (sdkLanguage: string, shouldThrow: boolean) => {\n      const suffix = lookAt[process.platform as 'linux' | 'darwin' | 'win32'];\n      if (!suffix) {\n        if (shouldThrow)\n          throw new Error(`Firefox distribution '${name}' is not supported on ${process.platform}`);\n        return undefined;\n      }\n      const prefixes = (process.platform === 'win32' ? [\n        process.env.LOCALAPPDATA,\n        process.env.PROGRAMFILES,\n        process.env['PROGRAMFILES(X86)'],\n        // In some cases there is no PROGRAMFILES/(86) env var set but HOMEDRIVE is set.\n        process.env.HOMEDRIVE + '\\\\Program Files',\n        process.env.HOMEDRIVE + '\\\\Program Files (x86)',\n      ].filter(Boolean) : ['']) as string[];\n\n      for (const prefix of prefixes) {\n        const executablePath = path.join(prefix, suffix);\n        if (canAccessFile(executablePath))\n          return executablePath;\n      }\n      if (shouldThrow)\n        throw new Error(`Cannot find Firefox installation for channel '${name}' at the standard system paths.`);\n      return undefined;\n    };\n    return {\n      type: 'channel',\n      name,\n      browserName: '_bidiFirefox',\n      directory: undefined,\n      executablePath: (sdkLanguage: string) => executablePath(sdkLanguage, false),\n      executablePathOrDie: (sdkLanguage: string) => executablePath(sdkLanguage, true)!,\n      installType: 'none',\n      _validateHostRequirements: () => Promise.resolve(),\n      _isHermeticInstallation: true,\n      _install: install,\n    };\n  }\n\n  private _createBidiChromiumChannel(name: BidiChannel, lookAt: Record<'linux' | 'darwin' | 'win32', string>, install?: () => Promise<void>): ExecutableImpl {\n    const executablePath = (sdkLanguage: string, shouldThrow: boolean) => {\n      const suffix = lookAt[process.platform as 'linux' | 'darwin' | 'win32'];\n      if (!suffix) {\n        if (shouldThrow)\n          throw new Error(`Chromium distribution '${name}' is not supported on ${process.platform}`);\n        return undefined;\n      }\n      const prefixes = (process.platform === 'win32' ? [\n        process.env.LOCALAPPDATA,\n        process.env.PROGRAMFILES,\n        process.env['PROGRAMFILES(X86)'],\n        // In some cases there is no PROGRAMFILES/(86) env var set but HOMEDRIVE is set.\n        process.env.HOMEDRIVE + '\\\\Program Files',\n        process.env.HOMEDRIVE + '\\\\Program Files (x86)',\n      ].filter(Boolean) : ['']) as string[];\n\n      for (const prefix of prefixes) {\n        const executablePath = path.join(prefix, suffix);\n        if (canAccessFile(executablePath))\n          return executablePath;\n      }\n      if (!shouldThrow)\n        return undefined;\n\n      const location = prefixes.length ? ` at ${path.join(prefixes[0], suffix)}` : ``;\n      const installation = install ? `\\nRun \"${buildPlaywrightCLICommand(sdkLanguage, 'install ' + name)}\"` : '';\n      throw new Error(`Chromium distribution '${name}' is not found${location}${installation}`);\n    };\n    return {\n      type: 'channel',\n      name,\n      browserName: '_bidiChromium',\n      directory: undefined,\n      executablePath: (sdkLanguage: string) => executablePath(sdkLanguage, false),\n      executablePathOrDie: (sdkLanguage: string) => executablePath(sdkLanguage, true)!,\n      installType: install ? 'install-script' : 'none',\n      _validateHostRequirements: () => Promise.resolve(),\n      _isHermeticInstallation: false,\n      _install: install,\n    };\n  }\n\n  executables(): Executable[] {\n    return this._executables;\n  }\n\n  findExecutable(name: BrowserName): Executable;\n  findExecutable(name: string): Executable | undefined;\n  findExecutable(name: string): Executable | undefined {\n    return this._executables.find(b => b.name === name);\n  }\n\n  defaultExecutables(): Executable[] {\n    return this._executables.filter(e => e.installType === 'download-by-default');\n  }\n\n  private _dedupe(executables: Executable[]): ExecutableImpl[] {\n    return Array.from(new Set(executables as ExecutableImpl[]));\n  }\n\n  private async _validateHostRequirements(sdkLanguage: string, browserDirectory: string, linuxLddDirectories: string[], dlOpenLibraries: string[], windowsExeAndDllDirectories: string[]) {\n    if (os.platform() === 'linux')\n      return await validateDependenciesLinux(sdkLanguage, linuxLddDirectories.map(d => path.join(browserDirectory, d)), dlOpenLibraries);\n    if (os.platform() === 'win32' && os.arch() === 'x64')\n      return await validateDependenciesWindows(sdkLanguage, windowsExeAndDllDirectories.map(d => path.join(browserDirectory, d)));\n  }\n\n  async installDeps(executablesToInstallDeps: Executable[], dryRun: boolean) {\n    const executables = this._dedupe(executablesToInstallDeps);\n    const targets = new Set<DependencyGroup>();\n    for (const executable of executables) {\n      if (executable._dependencyGroup)\n        targets.add(executable._dependencyGroup);\n    }\n    targets.add('tools');\n    if (os.platform() === 'win32')\n      return await installDependenciesWindows(targets, dryRun);\n    if (os.platform() === 'linux')\n      return await installDependenciesLinux(targets, dryRun);\n  }\n\n  async install(executablesToInstall: Executable[], forceReinstall: boolean) {\n    const executables = this._dedupe(executablesToInstall);\n    await fs.promises.mkdir(registryDirectory, { recursive: true });\n    const lockfilePath = path.join(registryDirectory, '__dirlock');\n    const linksDir = path.join(registryDirectory, '.links');\n\n    let releaseLock;\n    try {\n      releaseLock = await lockfile.lock(registryDirectory, {\n        retries: {\n          // Retry 20 times during 10 minutes with\n          // exponential back-off.\n          // See documentation at: https://www.npmjs.com/package/retry#retrytimeoutsoptions\n          retries: 20,\n          factor: 1.27579,\n        },\n        onCompromised: (err: Error) => {\n          throw new Error(`${err.message} Path: ${lockfilePath}`);\n        },\n        lockfilePath,\n      });\n      // Create a link first, so that cache validation does not remove our own browsers.\n      await fs.promises.mkdir(linksDir, { recursive: true });\n      await fs.promises.writeFile(path.join(linksDir, calculateSha1(PACKAGE_PATH)), PACKAGE_PATH);\n\n      // Remove stale browsers.\n      if (!getAsBooleanFromENV('PLAYWRIGHT_SKIP_BROWSER_GC'))\n        await this._validateInstallationCache(linksDir);\n\n      // Install browsers for this package.\n      for (const executable of executables) {\n        if (!executable._install)\n          throw new Error(`ERROR: Playwright does not support installing ${executable.name}`);\n\n        const { embedderName } = getEmbedderName();\n        if (!getAsBooleanFromENV('CI') && !executable._isHermeticInstallation && !forceReinstall && executable.executablePath(embedderName)) {\n          const command = buildPlaywrightCLICommand(embedderName, 'install --force ' + executable.name);\n          // eslint-disable-next-line no-restricted-properties\n          process.stderr.write('\\n' + wrapInASCIIBox([\n            `ATTENTION: \"${executable.name}\" is already installed on the system!`,\n            ``,\n            `\"${executable.name}\" installation is not hermetic; installing newer version`,\n            `requires *removal* of a current installation first.`,\n            ``,\n            `To *uninstall* current version and re-install latest \"${executable.name}\":`,\n            ``,\n            `- Close all running instances of \"${executable.name}\", if any`,\n            `- Use \"--force\" to install browser:`,\n            ``,\n            `    ${command}`,\n            ``,\n            `<3 Playwright Team`,\n          ].join('\\n'), 1) + '\\n\\n');\n          return;\n        }\n        await executable._install();\n      }\n    } catch (e) {\n      if (e.code === 'ELOCKED') {\n        const rmCommand = process.platform === 'win32' ? 'rm -R' : 'rm -rf';\n        throw new Error('\\n' + wrapInASCIIBox([\n          `An active lockfile is found at:`,\n          ``,\n          `  ${lockfilePath}`,\n          ``,\n          `Either:`,\n          `- wait a few minutes if other Playwright is installing browsers in parallel`,\n          `- remove lock manually with:`,\n          ``,\n          `    ${rmCommand} ${lockfilePath}`,\n          ``,\n          `<3 Playwright Team`,\n        ].join('\\n'), 1));\n      } else {\n        throw e;\n      }\n    } finally {\n      if (releaseLock)\n        await releaseLock();\n    }\n  }\n\n  async uninstall(all: boolean): Promise<{ numberOfBrowsersLeft: number }> {\n    const linksDir = path.join(registryDirectory, '.links');\n    if (all) {\n      const links = await fs.promises.readdir(linksDir).catch(() => []);\n      for (const link of links)\n        await fs.promises.unlink(path.join(linksDir, link));\n    } else {\n      await fs.promises.unlink(path.join(linksDir, calculateSha1(PACKAGE_PATH))).catch(() => {});\n    }\n\n    // Remove stale browsers.\n    await this._validateInstallationCache(linksDir);\n\n    return {\n      numberOfBrowsersLeft: (await fs.promises.readdir(registryDirectory).catch(() => [])).filter(browserDirectory => isBrowserDirectory(browserDirectory)).length\n    };\n  }\n\n  async validateHostRequirementsForExecutablesIfNeeded(executables: Executable[], sdkLanguage: string) {\n    if (getAsBooleanFromENV('PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS')) {\n      // eslint-disable-next-line no-restricted-properties\n      process.stderr.write('Skipping host requirements validation logic because `PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS` env variable is set.\\n');\n      return;\n    }\n    for (const executable of executables)\n      await this._validateHostRequirementsForExecutableIfNeeded(executable, sdkLanguage);\n  }\n\n  private async _validateHostRequirementsForExecutableIfNeeded(executable: Executable, sdkLanguage: string) {\n    const kMaximumReValidationPeriod = 30 * 24 * 60 * 60 * 1000; // 30 days\n    // Executable does not require validation.\n    if (!executable.directory)\n      return;\n    const markerFile = path.join(executable.directory, 'DEPENDENCIES_VALIDATED');\n    // Executable is already validated.\n    if (await fs.promises.stat(markerFile).then(stat => (Date.now() - stat.mtime.getTime()) < kMaximumReValidationPeriod).catch(() => false))\n      return;\n\n    debugLogger.log('install', `validating host requirements for \"${executable.name}\"`);\n    try {\n      await executable._validateHostRequirements(sdkLanguage);\n      debugLogger.log('install', `validation passed for ${executable.name}`);\n    } catch (error) {\n      debugLogger.log('install', `validation failed for ${executable.name}`);\n      throw error;\n    }\n\n    await fs.promises.writeFile(markerFile, '').catch(() => {});\n  }\n\n  private _downloadURLs(descriptor: BrowsersJSONDescriptor): string[] {\n    const paths = (DOWNLOAD_PATHS as any)[descriptor.name];\n    const downloadPathTemplate: string|undefined = paths[hostPlatform] || paths['<unknown>'];\n    if (!downloadPathTemplate)\n      return [];\n    const downloadPath = util.format(downloadPathTemplate, descriptor.revision);\n\n    let downloadURLs = PLAYWRIGHT_CDN_MIRRORS.map(mirror => `${mirror}/${downloadPath}`) ;\n    let downloadHostEnv;\n    if (descriptor.name.startsWith('chromium'))\n      downloadHostEnv = 'PLAYWRIGHT_CHROMIUM_DOWNLOAD_HOST';\n    else if (descriptor.name.startsWith('firefox'))\n      downloadHostEnv = 'PLAYWRIGHT_FIREFOX_DOWNLOAD_HOST';\n    else if (descriptor.name.startsWith('webkit'))\n      downloadHostEnv = 'PLAYWRIGHT_WEBKIT_DOWNLOAD_HOST';\n\n    const customHostOverride = (downloadHostEnv && getFromENV(downloadHostEnv)) || getFromENV('PLAYWRIGHT_DOWNLOAD_HOST');\n    if (customHostOverride)\n      downloadURLs = [`${customHostOverride}/${downloadPath}`];\n    return downloadURLs;\n  }\n\n  private async _downloadExecutable(descriptor: BrowsersJSONDescriptor, executablePath?: string) {\n    const downloadURLs = this._downloadURLs(descriptor);\n    if (!downloadURLs.length)\n      throw new Error(`ERROR: Playwright does not support ${descriptor.name} on ${hostPlatform}`);\n    if (!isOfficiallySupportedPlatform)\n      logPolitely(`BEWARE: your OS is not officially supported by Playwright; downloading fallback build for ${hostPlatform}.`);\n    if (descriptor.hasRevisionOverride) {\n      const message = `You are using a frozen ${descriptor.name} browser which does not receive updates anymore on ${hostPlatform}. Please update to the latest version of your operating system to test up-to-date browsers.`;\n      if (process.env.GITHUB_ACTIONS)\n        console.log(`::warning title=Playwright::${message}`);  // eslint-disable-line no-console\n      else\n        logPolitely(message);\n    }\n\n    const displayName = descriptor.name.split('-').map(word => {\n      return word === 'ffmpeg' ? 'FFMPEG' : word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(' ');\n    const title = descriptor.browserVersion\n      ? `${displayName} ${descriptor.browserVersion} (playwright build v${descriptor.revision})`\n      : `${displayName} playwright build v${descriptor.revision}`;\n\n    const downloadFileName = `playwright-download-${descriptor.name}-${hostPlatform}-${descriptor.revision}.zip`;\n    // PLAYWRIGHT_DOWNLOAD_CONNECTION_TIMEOUT is a misnomer, it actually controls the socket's\n    // max idle timeout. Unfortunately, we cannot rename it without breaking existing user workflows.\n    const downloadSocketTimeoutEnv = getFromENV('PLAYWRIGHT_DOWNLOAD_CONNECTION_TIMEOUT');\n    const downloadSocketTimeout = +(downloadSocketTimeoutEnv || '0') || NET_DEFAULT_TIMEOUT;\n    await downloadBrowserWithProgressBar(title, descriptor.dir, executablePath, downloadURLs, downloadFileName, downloadSocketTimeout).catch(e => {\n      throw new Error(`Failed to download ${title}, caused by\\n${e.stack}`);\n    });\n  }\n\n  private async _installMSEdgeChannel(channel: 'msedge'|'msedge-beta'|'msedge-dev', scripts: Record<'linux' | 'darwin' | 'win32', string>) {\n    const scriptArgs: string[] = [];\n    if (process.platform !== 'linux') {\n      const products = lowercaseAllKeys(JSON.parse(await fetchData(undefined, { url: 'https://edgeupdates.microsoft.com/api/products' })));\n\n      const productName = {\n        'msedge': 'Stable',\n        'msedge-beta': 'Beta',\n        'msedge-dev': 'Dev',\n      }[channel];\n      const product = products.find((product: any) => product.product === productName);\n      const searchConfig = ({\n        darwin: { platform: 'MacOS', arch: 'universal', artifact: 'pkg' },\n        win32: { platform: 'Windows', arch: 'x64', artifact: 'msi' },\n      } as any)[process.platform];\n      const release = searchConfig ? product.releases.find((release: any) => release.platform === searchConfig.platform && release.architecture === searchConfig.arch && release.artifacts.length > 0) : null;\n      const artifact = release ? release.artifacts.find((artifact: any) => artifact.artifactname === searchConfig.artifact) : null;\n      if (artifact)\n        scriptArgs.push(artifact.location /* url */);\n      else\n        throw new Error(`Cannot install ${channel} on ${process.platform}`);\n    }\n    await this._installChromiumChannel(channel, scripts, scriptArgs);\n  }\n\n  private async _installChromiumChannel(channel: string, scripts: Record<'linux' | 'darwin' | 'win32', string>, scriptArgs: string[] = []) {\n    const scriptName = scripts[process.platform as 'linux' | 'darwin' | 'win32'];\n    if (!scriptName)\n      throw new Error(`Cannot install ${channel} on ${process.platform}`);\n    const cwd = BIN_PATH;\n    const isPowerShell = scriptName.endsWith('.ps1');\n    if (isPowerShell) {\n      const args = [\n        '-ExecutionPolicy', 'Bypass', '-File',\n        path.join(BIN_PATH, scriptName),\n        ...scriptArgs\n      ];\n      const { code } = await spawnAsync('powershell.exe', args, { cwd, stdio: 'inherit' });\n      if (code !== 0)\n        throw new Error(`Failed to install ${channel}`);\n    } else {\n      const { command, args, elevatedPermissions } = await transformCommandsForRoot([`bash \"${path.join(BIN_PATH, scriptName)}\" ${scriptArgs.join('')}`]);\n      if (elevatedPermissions)\n        console.log('Switching to root user to install dependencies...'); // eslint-disable-line no-console\n      const { code } = await spawnAsync(command, args, { cwd, stdio: 'inherit' });\n      if (code !== 0)\n        throw new Error(`Failed to install ${channel}`);\n    }\n  }\n\n  async listInstalledBrowsers() {\n    const linksDir = path.join(registryDirectory, '.links');\n    const { browsers } = await this._traverseBrowserInstallations(linksDir);\n    return browsers.filter(browser => fs.existsSync(browser.browserPath));\n  }\n\n  private async _validateInstallationCache(linksDir: string) {\n    const { browsers, brokenLinks } = await this._traverseBrowserInstallations(linksDir);\n    await this._deleteStaleBrowsers(browsers);\n    await this._deleteBrokenInstallations(brokenLinks);\n  }\n\n  private async _traverseBrowserInstallations(linksDir: string): Promise<{ browsers: BrowserInfo[], brokenLinks: string[] }> {\n    const browserList: BrowserInfo[] = [];\n    const brokenLinks: string[] = [];\n    for (const fileName of await fs.promises.readdir(linksDir)) {\n      const linkPath = path.join(linksDir, fileName);\n      let linkTarget = '';\n      try {\n        linkTarget = (await fs.promises.readFile(linkPath)).toString();\n        const browsersJSON = require(path.join(linkTarget, 'browsers.json'));\n        const descriptors = readDescriptors(browsersJSON);\n        for (const browserName of allDownloadable) {\n          // We retain browsers if they are found in the descriptor.\n          // Note, however, that there are older versions out in the wild that rely on\n          // the \"download\" field in the browser descriptor and use its value\n          // to retain and download browsers.\n          // As of v1.10, we decided to abandon \"download\" field.\n          const descriptor = descriptors.find(d => d.name === browserName);\n          if (!descriptor)\n            continue;\n\n          const browserPath = descriptor.dir;\n          const browserVersion = parseInt(descriptor.revision, 10);\n          browserList.push({\n            browserName,\n            browserVersion,\n            browserPath,\n            referenceDir: linkTarget,\n          });\n        }\n      } catch (e) {\n        brokenLinks.push(linkPath);\n      }\n    }\n\n    return { browsers: browserList, brokenLinks };\n  }\n\n  private async _deleteStaleBrowsers(browserList: BrowserInfo[]) {\n    const usedBrowserPaths: Set<string> = new Set();\n    for (const browser of browserList) {\n      const { browserName, browserVersion, browserPath } = browser;\n\n      // Old browser installations don't have marker file.\n      // We switched chromium from 999999 to 1000, 300000 is the new Y2K.\n      const shouldHaveMarkerFile = (browserName === 'chromium' && (browserVersion >= 786218 || browserVersion < 300000)) ||\n          (browserName === 'firefox' && browserVersion >= 1128) ||\n          (browserName === 'webkit' && browserVersion >= 1307) ||\n          // All new applications have a marker file right away.\n          (browserName !== 'firefox' && browserName !== 'chromium' && browserName !== 'webkit');\n      if (!shouldHaveMarkerFile || (await existsAsync(browserDirectoryToMarkerFilePath(browserPath))))\n        usedBrowserPaths.add(browserPath);\n    }\n\n    let downloadedBrowsers = (await fs.promises.readdir(registryDirectory)).map(file => path.join(registryDirectory, file));\n    downloadedBrowsers = downloadedBrowsers.filter(file => isBrowserDirectory(file));\n    const directories = new Set<string>(downloadedBrowsers);\n    for (const browserDirectory of usedBrowserPaths)\n      directories.delete(browserDirectory);\n    for (const directory of directories)\n      logPolitely('Removing unused browser at ' + directory);\n    await removeFolders([...directories]);\n  }\n\n  private async _deleteBrokenInstallations(brokenLinks: string[]) {\n    for (const linkPath of brokenLinks)\n      await fs.promises.unlink(linkPath).catch(e => {});\n  }\n}\n\nexport function browserDirectoryToMarkerFilePath(browserDirectory: string): string {\n  return path.join(browserDirectory, 'INSTALLATION_COMPLETE');\n}\n\nexport function buildPlaywrightCLICommand(sdkLanguage: string, parameters: string): string {\n  switch (sdkLanguage) {\n    case 'python':\n      return `playwright ${parameters}`;\n    case 'java':\n      return `mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args=\"${parameters}\"`;\n    case 'csharp':\n      return `pwsh bin/Debug/netX/playwright.ps1 ${parameters}`;\n    default: {\n      const packageManagerCommand = getPackageManagerExecCommand();\n      return `${packageManagerCommand} playwright ${parameters}`;\n    }\n  }\n}\n\nexport async function installBrowsersForNpmInstall(browsers: string[]) {\n  // PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD should have a value of 0 or 1\n  if (getAsBooleanFromENV('PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD')) {\n    logPolitely('Skipping browsers download because `PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD` env variable is set');\n    return false;\n  }\n  const executables: Executable[] = [];\n  if (process.platform === 'win32')\n    executables.push(registry.findExecutable('winldd')!);\n  for (const browserName of browsers) {\n    const executable = registry.findExecutable(browserName);\n    if (!executable || executable.installType === 'none')\n      throw new Error(`Cannot install ${browserName}`);\n    executables.push(executable);\n  }\n\n  await registry.install(executables, false /* forceReinstall */);\n}\n\n// for launchApp -> UI Mode / Trace Viewer\nexport function findChromiumChannelBestEffort(sdkLanguage: string): string | undefined {\n  // Fall back to the stable channels of popular vendors to work out of the box.\n  // Null means no installation and no channels found.\n  let channel = null;\n  for (const name of ['chromium', 'chrome', 'msedge']) {\n    try {\n      registry.findExecutable(name)!.executablePathOrDie(sdkLanguage);\n      channel = name === 'chromium' ? undefined : name;\n      break;\n    } catch (e) {\n    }\n  }\n\n  if (channel === null) {\n    const installCommand = buildPlaywrightCLICommand(sdkLanguage, `install chromium`);\n    const prettyMessage = [\n      `No chromium-based browser found on the system.`,\n      `Please run the following command to download one:`,\n      ``,\n      `    ${installCommand}`,\n      ``,\n      `<3 Playwright Team`,\n    ].join('\\n');\n    throw new Error('\\n' + wrapInASCIIBox(prettyMessage, 1));\n  }\n  return channel;\n}\n\nfunction lowercaseAllKeys(json: any): any {\n  if (typeof json !== 'object' || !json)\n    return json;\n\n  if (Array.isArray(json))\n    return json.map(lowercaseAllKeys);\n\n  const result: any = {};\n  for (const [key, value] of Object.entries(json))\n    result[key.toLowerCase()] = lowercaseAllKeys(value);\n  return result;\n}\n\nexport const registry = new Registry(require('../../../browsers.json'));\n"],
  "mappings": "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",
  "names": ["import_dependencies", "path", "os", "executablePath", "fs", "product", "release", "artifact"]
}
