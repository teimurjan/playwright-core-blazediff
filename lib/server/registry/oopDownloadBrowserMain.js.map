{
  "version": 3,
  "sources": ["../../../src/server/registry/oopDownloadBrowserMain.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport path from 'path';\n\nimport { ManualPromise } from '../../utils/isomorphic/manualPromise';\nimport { httpRequest } from '../utils/network';\nimport { extract } from '../../zipBundle';\n\nexport type DownloadParams = {\n  title: string;\n  browserDirectory: string;\n  url: string;\n  zipPath: string;\n  executablePath: string | undefined;\n  socketTimeout: number;\n  userAgent: string;\n};\n\nfunction log(message: string) {\n  process.send?.({ method: 'log', params: { message } });\n}\n\nfunction progress(done: number, total: number) {\n  process.send?.({ method: 'progress', params: { done, total } });\n}\n\nfunction browserDirectoryToMarkerFilePath(browserDirectory: string): string {\n  return path.join(browserDirectory, 'INSTALLATION_COMPLETE');\n}\n\nfunction downloadFile(options: DownloadParams): Promise<void> {\n  let downloadedBytes = 0;\n  let totalBytes = 0;\n\n  const promise = new ManualPromise<void>();\n  httpRequest({\n    url: options.url,\n    headers: {\n      'User-Agent': options.userAgent,\n    },\n    socketTimeout: options.socketTimeout,\n  }, response => {\n    log(`-- response status code: ${response.statusCode}`);\n    if (response.statusCode !== 200) {\n      let content = '';\n      const handleError = () => {\n        const error = new Error(`Download failed: server returned code ${response.statusCode} body '${content}'. URL: ${options.url}`);\n        // consume response data to free up memory\n        response.resume();\n        promise.reject(error);\n      };\n      response\n          .on('data', chunk => content += chunk)\n          .on('end', handleError)\n          .on('error', handleError);\n      return;\n    }\n    totalBytes = parseInt(response.headers['content-length'] || '0', 10);\n    log(`-- total bytes: ${totalBytes}`);\n    const file = fs.createWriteStream(options.zipPath);\n    file.on('finish', () => {\n      if (downloadedBytes !== totalBytes) {\n        log(`-- download failed, size mismatch: ${downloadedBytes} != ${totalBytes}`);\n        promise.reject(new Error(`Download failed: size mismatch, file size: ${downloadedBytes}, expected size: ${totalBytes} URL: ${options.url}`));\n      } else {\n        log(`-- download complete, size: ${downloadedBytes}`);\n        promise.resolve();\n      }\n    });\n    file.on('error', error => promise.reject(error));\n    response.pipe(file);\n    response.on('data', onData);\n    response.on('error', (error: any) => {\n      file.close();\n      if (error?.code === 'ECONNRESET') {\n        log(`-- download failed, server closed connection`);\n        promise.reject(new Error(`Download failed: server closed connection. URL: ${options.url}`));\n      } else {\n        log(`-- download failed, unexpected error`);\n        promise.reject(new Error(`Download failed: ${error?.message ?? error}. URL: ${options.url}`));\n      }\n    });\n  }, (error: any) => promise.reject(error));\n  return promise;\n\n  function onData(chunk: string) {\n    downloadedBytes += chunk.length;\n    progress(downloadedBytes, totalBytes);\n  }\n}\n\nasync function main(options: DownloadParams) {\n  await downloadFile(options);\n  log(`SUCCESS downloading ${options.title}`);\n  log(`extracting archive`);\n  await extract(options.zipPath, { dir: options.browserDirectory });\n  if (options.executablePath) {\n    log(`fixing permissions at ${options.executablePath}`);\n    await fs.promises.chmod(options.executablePath, 0o755);\n  }\n  await fs.promises.writeFile(browserDirectoryToMarkerFilePath(options.browserDirectory), '');\n}\n\nprocess.on('message', async message => {\n  const { method, params } = message as any;\n  if (method === 'download') {\n    try {\n      await main(params);\n      // eslint-disable-next-line no-restricted-properties\n      process.exit(0);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(e);\n      // eslint-disable-next-line no-restricted-properties\n      process.exit(1);\n    }\n  }\n});\n\n// eslint-disable-next-line no-restricted-properties\nprocess.on('disconnect', () => { process.exit(0); });\n"],
  "mappings": "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",
  "names": ["path", "fs"]
}
