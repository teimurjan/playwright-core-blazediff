{
  "version": 3,
  "sources": ["../../../src/server/recorder/recorderUtils.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { renderTitleForCall } from '../../utils/isomorphic/protocolFormatter';\nimport { monotonicTime, quoteCSSAttributeValue  } from '../../utils';\nimport { raceAgainstDeadline } from '../../utils/isomorphic/timeoutRunner';\nimport { Frame } from '../frames';\n\nimport type { CallMetadata } from '../instrumentation';\nimport type { Page } from '../page';\nimport type * as actions from '@recorder/actions';\nimport type { CallLog, CallLogStatus } from '@recorder/recorderTypes';\n\nexport function buildFullSelector(framePath: string[], selector: string) {\n  return [...framePath, selector].join(' >> internal:control=enter-frame >> ');\n}\n\nexport function metadataToCallLog(metadata: CallMetadata, status: CallLogStatus): CallLog {\n  const title = renderTitleForCall(metadata);\n  if (metadata.error)\n    status = 'error';\n  const params = {\n    url: metadata.params?.url,\n    selector: metadata.params?.selector,\n  };\n  let duration = metadata.endTime ? metadata.endTime - metadata.startTime : undefined;\n  if (typeof duration === 'number' && metadata.pauseStartTime && metadata.pauseEndTime) {\n    duration -= (metadata.pauseEndTime - metadata.pauseStartTime);\n    duration = Math.max(duration, 0);\n  }\n  const callLog: CallLog = {\n    id: metadata.id,\n    messages: metadata.log,\n    title: title ?? '',\n    status,\n    error: metadata.error?.error?.message,\n    params,\n    duration,\n  };\n  return callLog;\n}\n\nexport function mainFrameForAction(pageAliases: Map<Page, string>, actionInContext: actions.ActionInContext): Frame {\n  const pageAlias = actionInContext.frame.pageAlias;\n  const page = [...pageAliases.entries()].find(([, alias]) => pageAlias === alias)?.[0];\n  if (!page)\n    throw new Error(`Internal error: page ${pageAlias} not found in [${[...pageAliases.values()]}]`);\n  return page.mainFrame();\n}\n\nexport async function frameForAction(pageAliases: Map<Page, string>, actionInContext: actions.ActionInContext, action: actions.ActionWithSelector): Promise<Frame> {\n  const pageAlias = actionInContext.frame.pageAlias;\n  const page = [...pageAliases.entries()].find(([, alias]) => pageAlias === alias)?.[0];\n  if (!page)\n    throw new Error('Internal error: page not found');\n  const fullSelector = buildFullSelector(actionInContext.frame.framePath, action.selector);\n  const result = await page.mainFrame().selectors.resolveFrameForSelector(fullSelector);\n  if (!result)\n    throw new Error('Internal error: frame not found');\n  return result.frame;\n}\n\nfunction isSameAction(a: actions.ActionInContext, b: actions.ActionInContext): boolean {\n  return a.action.name === b.action.name && a.frame.pageAlias === b.frame.pageAlias && a.frame.framePath.join('|') === b.frame.framePath.join('|');\n}\n\nfunction isSameSelector(action: actions.ActionInContext, lastAction: actions.ActionInContext): boolean {\n  return 'selector' in action.action && 'selector' in lastAction.action && action.action.selector === lastAction.action.selector;\n}\n\nfunction isShortlyAfter(action: actions.ActionInContext, lastAction: actions.ActionInContext): boolean {\n  return action.startTime - lastAction.startTime < 500;\n}\n\nexport function shouldMergeAction(action: actions.ActionInContext, lastAction: actions.ActionInContext | undefined): boolean {\n  if (!lastAction)\n    return false;\n  switch (action.action.name) {\n    case 'fill':\n      return isSameAction(action, lastAction) && isSameSelector(action, lastAction);\n    case 'navigate':\n      return isSameAction(action, lastAction);\n    case 'click':\n      return isSameAction(action, lastAction) && isSameSelector(action, lastAction) && isShortlyAfter(action, lastAction) && action.action.clickCount > (lastAction.action as actions.ClickAction).clickCount;\n  }\n  return false;\n}\n\nexport function collapseActions(actions: actions.ActionInContext[]): actions.ActionInContext[] {\n  const result: actions.ActionInContext[] = [];\n  for (const action of actions) {\n    const lastAction = result[result.length - 1];\n    const shouldMerge = shouldMergeAction(action, lastAction);\n    if (!shouldMerge) {\n      result.push(action);\n      continue;\n    }\n    const startTime = result[result.length - 1].startTime;\n    result[result.length - 1] = action;\n    result[result.length - 1].startTime = startTime;\n  }\n  return result;\n}\n\nexport async function generateFrameSelector(frame: Frame): Promise<string[]> {\n  const selectorPromises: Promise<string>[] = [];\n  while (frame) {\n    const parent = frame.parentFrame();\n    if (!parent)\n      break;\n    selectorPromises.push(generateFrameSelectorInParent(parent, frame));\n    frame = parent;\n  }\n  const result = await Promise.all(selectorPromises);\n  return result.reverse();\n}\n\nasync function generateFrameSelectorInParent(parent: Frame, frame: Frame): Promise<string> {\n  const result = await raceAgainstDeadline(async () => {\n    try {\n      const frameElement = await frame.frameElement();\n      if (!frameElement || !parent)\n        return;\n      const utility = await parent._utilityContext();\n      const injected = await utility.injectedScript();\n      const selector = await injected.evaluate((injected, element) => {\n        return injected.generateSelectorSimple(element as Element);\n      }, frameElement);\n      return selector;\n    } catch (e) {\n    }\n  }, monotonicTime() + 2000);\n  if (!result.timedOut && result.result)\n    return result.result;\n\n  if (frame.name())\n    return `iframe[name=${quoteCSSAttributeValue(frame.name())}]`;\n  return `iframe[src=${quoteCSSAttributeValue(frame.url())}]`;\n}\n"],
  "mappings": "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",
  "names": ["injected"]
}
