{
  "version": 3,
  "sources": ["../../../src/server/recorder/recorderApp.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport path from 'path';\n\nimport { isUnderTest } from '../utils/debug';\nimport { mime } from '../../utilsBundle';\nimport { syncLocalStorageWithSettings } from '../launchApp';\nimport { launchApp } from '../launchApp';\nimport { ProgressController } from '../progress';\nimport { ThrottledFile } from './throttledFile';\nimport { languageSet } from '../codegen/languages';\nimport { collapseActions, shouldMergeAction } from './recorderUtils';\nimport { generateCode } from '../codegen/language';\nimport { Recorder, RecorderEvent } from '../recorder';\nimport { BrowserContext } from '../browserContext';\n\nimport type { Page } from '../page';\nimport type * as actions from '@recorder/actions';\nimport type { CallLog, ElementInfo, Mode, Source } from '@recorder/recorderTypes';\nimport type { Language, LanguageGeneratorOptions } from '../codegen/types';\nimport type * as channels from '@protocol/channels';\n\nexport type RecorderAppParams = channels.BrowserContextEnableRecorderParams & {\n  browserName: string;\n  sdkLanguage: Language;\n  headed: boolean;\n  executablePath?: string;\n  channel?: string;\n};\n\nexport class RecorderApp {\n  private _recorder: Recorder;\n  private _page: Page;\n  readonly wsEndpointForTest: string | undefined;\n  private _languageGeneratorOptions: LanguageGeneratorOptions;\n  private _throttledOutputFile: ThrottledFile | null = null;\n  private _actions: actions.ActionInContext[] = [];\n  private _userSources: Source[] = [];\n  private _recorderSources: Source[] = [];\n  private _primaryGeneratorId: string;\n  private _selectedGeneratorId: string;\n\n  private constructor(recorder: Recorder, params: RecorderAppParams, page: Page, wsEndpointForTest: string | undefined) {\n    this._page = page;\n    this._recorder = recorder;\n    this.wsEndpointForTest = wsEndpointForTest;\n\n    // Make a copy of options to modify them later.\n    this._languageGeneratorOptions = {\n      browserName: params.browserName,\n      launchOptions: { headless: false, ...params.launchOptions, tracesDir: undefined },\n      contextOptions: { ...params.contextOptions },\n      deviceName: params.device,\n      saveStorage: params.saveStorage,\n    };\n\n    this._throttledOutputFile = params.outputFile ? new ThrottledFile(params.outputFile) : null;\n    this._primaryGeneratorId = process.env.TEST_INSPECTOR_LANGUAGE || params.language || determinePrimaryGeneratorId(params.sdkLanguage);\n    this._selectedGeneratorId = this._primaryGeneratorId;\n  }\n\n  private async _init(inspectedContext: BrowserContext) {\n    await syncLocalStorageWithSettings(this._page, 'recorder');\n\n    const controller = new ProgressController();\n    await controller.run(async progress => {\n      await this._page.addRequestInterceptor(progress, route => {\n        if (!route.request().url().startsWith('https://playwright/')) {\n          route.continue({ isFallback: true }).catch(() => {});\n          return;\n        }\n\n        const uri = route.request().url().substring('https://playwright/'.length);\n        const file = require.resolve('../../vite/recorder/' + uri);\n        fs.promises.readFile(file).then(buffer => {\n          route.fulfill({\n            status: 200,\n            headers: [\n              { name: 'Content-Type', value: mime.getType(path.extname(file)) || 'application/octet-stream' }\n            ],\n            body: buffer.toString('base64'),\n            isBase64: true\n          }).catch(() => {});\n        });\n      });\n\n      await this._page.exposeBinding(progress, 'dispatch', false, (_, data: any) => this._handleUIEvent(data));\n\n      this._page.once('close', () => {\n        this._recorder.close();\n        this._page.browserContext.close({ reason: 'Recorder window closed' }).catch(() => {});\n        delete (inspectedContext as any)[recorderAppSymbol];\n      });\n\n      await this._page.mainFrame().goto(progress, process.env.PW_HMR ? 'http://localhost:44225' : 'https://playwright/index.html');\n    });\n\n    const url = this._recorder.url();\n    if (url)\n      this._onPageNavigated(url);\n    this._onModeChanged(this._recorder.mode());\n    this._onPausedStateChanged(this._recorder.paused());\n    this._updateActions('reveal');\n    // Update paused sources *after* generated ones, to reveal the currently paused source if any.\n    this._onUserSourcesChanged(this._recorder.userSources(), this._recorder.pausedSourceId());\n    this._onCallLogsUpdated(this._recorder.callLog());\n    this._wireListeners(this._recorder);\n  }\n\n  private _handleUIEvent(data: any) {\n    if (data.event === 'clear') {\n      this._actions = [];\n      this._updateActions('reveal');\n      this._recorder.clear();\n      return;\n    }\n    if (data.event === 'fileChanged') {\n      const source = [...this._recorderSources, ...this._userSources].find(s => s.id === data.params.fileId);\n      if (source) {\n        if (source.isRecorded)\n          this._selectedGeneratorId = source.id;\n        this._recorder.setLanguage(source.language);\n      }\n      return;\n    }\n    if (data.event === 'setAutoExpect') {\n      this._languageGeneratorOptions.generateAutoExpect = data.params.autoExpect;\n      this._updateActions();\n      return;\n    }\n    if (data.event === 'setMode') {\n      this._recorder.setMode(data.params.mode);\n      return;\n    }\n    if (data.event === 'resume') {\n      this._recorder.resume();\n      return;\n    }\n    if (data.event === 'pause') {\n      this._recorder.pause();\n      return;\n    }\n    if (data.event === 'step') {\n      this._recorder.step();\n      return;\n    }\n    if (data.event === 'highlightRequested') {\n      if (data.params.selector)\n        this._recorder.setHighlightedSelector(data.params.selector);\n      if (data.params.ariaTemplate)\n        this._recorder.setHighlightedAriaTemplate(data.params.ariaTemplate);\n      return;\n    }\n    throw new Error(`Unknown event: ${data.event}`);\n  }\n\n  static async show(context: BrowserContext, params: channels.BrowserContextEnableRecorderParams) {\n    if (process.env.PW_CODEGEN_NO_INSPECTOR)\n      return;\n    const recorder = await Recorder.forContext(context, params);\n    if (params.recorderMode === 'api') {\n      const browserName = context._browser.options.name;\n      await ProgrammaticRecorderApp.run(context, recorder, browserName, params);\n      return;\n    }\n    await RecorderApp._show(recorder, context, params);\n  }\n\n  async close() {\n    await this._page.close();\n  }\n\n  static showInspectorNoReply(context: BrowserContext) {\n    if (process.env.PW_CODEGEN_NO_INSPECTOR)\n      return;\n    void Recorder.forContext(context, {}).then(recorder => RecorderApp._show(recorder, context, {})).catch(() => {});\n  }\n\n  private static async _show(recorder: Recorder, inspectedContext: BrowserContext, params: channels.BrowserContextEnableRecorderParams) {\n    if ((inspectedContext as any)[recorderAppSymbol])\n      return;\n    (inspectedContext as any)[recorderAppSymbol] = true;\n    const sdkLanguage = inspectedContext._browser.sdkLanguage();\n    const headed = !!inspectedContext._browser.options.headful;\n    const recorderPlaywright = (require('../playwright').createPlaywright as typeof import('../playwright').createPlaywright)({ sdkLanguage: 'javascript', isInternalPlaywright: true });\n    const { context: appContext, page } = await launchApp(recorderPlaywright.chromium, {\n      sdkLanguage,\n      windowSize: { width: 600, height: 600 },\n      windowPosition: { x: 1020, y: 10 },\n      persistentContextOptions: {\n        noDefaultViewport: true,\n        headless: !!process.env.PWTEST_CLI_HEADLESS || (isUnderTest() && !headed),\n        cdpPort: isUnderTest() ? 0 : undefined,\n        handleSIGINT: params.handleSIGINT,\n        executablePath: inspectedContext._browser.options.isChromium ? inspectedContext._browser.options.customExecutablePath : undefined,\n        // Use the same channel as the inspected context to guarantee that the browser is installed.\n        channel: inspectedContext._browser.options.isChromium ? inspectedContext._browser.options.channel : undefined,\n      }\n    });\n    const controller = new ProgressController();\n    await controller.run(async progress => {\n      await appContext._browser._defaultContext!._loadDefaultContextAsIs(progress);\n    });\n\n    const appParams = {\n      browserName: inspectedContext._browser.options.name,\n      sdkLanguage: inspectedContext._browser.sdkLanguage(),\n      wsEndpointForTest: inspectedContext._browser.options.wsEndpoint,\n      headed: !!inspectedContext._browser.options.headful,\n      executablePath: inspectedContext._browser.options.isChromium ? inspectedContext._browser.options.customExecutablePath : undefined,\n      channel: inspectedContext._browser.options.isChromium ? inspectedContext._browser.options.channel : undefined,\n      ...params,\n    };\n\n    const recorderApp = new RecorderApp(recorder, appParams, page, appContext._browser.options.wsEndpoint);\n    await recorderApp._init(inspectedContext);\n    (inspectedContext as any).recorderAppForTest = recorderApp;\n  }\n\n  private _wireListeners(recorder: Recorder) {\n    recorder.on(RecorderEvent.ActionAdded, (action: actions.ActionInContext) => {\n      this._onActionAdded(action);\n    });\n\n    recorder.on(RecorderEvent.SignalAdded, (signal: actions.SignalInContext) => {\n      this._onSignalAdded(signal);\n    });\n\n    recorder.on(RecorderEvent.PageNavigated, (url: string) => {\n      this._onPageNavigated(url);\n    });\n\n    recorder.on(RecorderEvent.ContextClosed, () => {\n      this._onContextClosed();\n    });\n\n    recorder.on(RecorderEvent.ModeChanged, (mode: Mode) => {\n      this._onModeChanged(mode);\n    });\n\n    recorder.on(RecorderEvent.PausedStateChanged, (paused: boolean) => {\n      this._onPausedStateChanged(paused);\n    });\n\n    recorder.on(RecorderEvent.UserSourcesChanged, (sources: Source[], pausedSourceId?: string) => {\n      this._onUserSourcesChanged(sources, pausedSourceId);\n    });\n\n    recorder.on(RecorderEvent.ElementPicked, (elementInfo: ElementInfo, userGesture?: boolean) => {\n      this._onElementPicked(elementInfo, userGesture);\n    });\n\n    recorder.on(RecorderEvent.CallLogsUpdated, (callLogs: CallLog[]) => {\n      this._onCallLogsUpdated(callLogs);\n    });\n  }\n\n  private _onActionAdded(action: actions.ActionInContext) {\n    this._actions.push(action);\n    this._updateActions('reveal');\n  }\n\n  private _onSignalAdded(signal: actions.SignalInContext) {\n    const lastAction = this._actions.findLast(a => a.frame.pageGuid === signal.frame.pageGuid);\n    if (lastAction)\n      lastAction.action.signals.push(signal.signal);\n    this._updateActions();\n  }\n\n  private _onPageNavigated(url: string) {\n    this._page.mainFrame().evaluateExpression((({ url }: { url: string }) => {\n      window.playwrightSetPageURL(url);\n    }).toString(), { isFunction: true }, { url }).catch(() => {});\n  }\n\n  private _onContextClosed() {\n    this._throttledOutputFile?.flush();\n    this._page.browserContext.close({ reason: 'Recorder window closed' }).catch(() => {});\n  }\n\n  private _onModeChanged(mode: Mode) {\n    this._page.mainFrame().evaluateExpression(((mode: Mode) => {\n      window.playwrightSetMode(mode);\n    }).toString(), { isFunction: true }, mode).catch(() => {});\n  }\n\n  private _onPausedStateChanged(paused: boolean) {\n    this._page.mainFrame().evaluateExpression(((paused: boolean) => {\n      window.playwrightSetPaused(paused);\n    }).toString(), { isFunction: true }, paused).catch(() => {});\n  }\n\n  private _onUserSourcesChanged(sources: Source[], pausedSourceId: string | undefined) {\n    if (!sources.length && !this._userSources.length)\n      return;\n    this._userSources = sources;\n    this._pushAllSources();\n    this._revealSource(pausedSourceId);\n  }\n\n  private _onElementPicked(elementInfo: ElementInfo, userGesture?: boolean) {\n    if (userGesture)\n      this._page.bringToFront();\n    this._page.mainFrame().evaluateExpression(((param: { elementInfo: ElementInfo, userGesture?: boolean }) => {\n      window.playwrightElementPicked(param.elementInfo, param.userGesture);\n    }).toString(), { isFunction: true }, { elementInfo, userGesture }).catch(() => {});\n  }\n\n  private _onCallLogsUpdated(callLogs: CallLog[]) {\n    this._page.mainFrame().evaluateExpression(((callLogs: CallLog[]) => {\n      window.playwrightUpdateLogs(callLogs);\n    }).toString(), { isFunction: true }, callLogs).catch(() => {});\n  }\n\n  private _pushAllSources() {\n    const sources = [...this._userSources, ...this._recorderSources];\n    this._page.mainFrame().evaluateExpression((({ sources }: { sources: Source[] }) => {\n      window.playwrightSetSources(sources);\n    }).toString(), { isFunction: true }, { sources }).catch(() => {});\n  }\n\n  private _revealSource(sourceId: string | undefined) {\n    if (!sourceId)\n      return;\n    this._page.mainFrame().evaluateExpression((({ sourceId }: { sourceId: string }) => {\n      window.playwrightSelectSource(sourceId);\n    }).toString(), { isFunction: true }, { sourceId }).catch(() => {});\n  }\n\n  private _updateActions(reveal?: 'reveal') {\n    const recorderSources = [];\n    const actions = collapseActions(this._actions);\n\n    let revealSourceId: string | undefined;\n    for (const languageGenerator of languageSet()) {\n      const { header, footer, actionTexts, text } = generateCode(actions, languageGenerator, this._languageGeneratorOptions);\n      const source: Source = {\n        isRecorded: true,\n        label: languageGenerator.name,\n        group: languageGenerator.groupName,\n        id: languageGenerator.id,\n        text,\n        header,\n        footer,\n        actions: actionTexts,\n        language: languageGenerator.highlighter,\n        highlight: []\n      };\n      source.revealLine = text.split('\\n').length - 1;\n      recorderSources.push(source);\n      if (languageGenerator.id === this._primaryGeneratorId)\n        this._throttledOutputFile?.setContent(source.text);\n      if (reveal === 'reveal' && source.id === this._selectedGeneratorId)\n        revealSourceId = source.id;\n    }\n\n    this._recorderSources = recorderSources;\n    this._pushAllSources();\n    this._revealSource(revealSourceId);\n  }\n}\n\n// For example, if the SDK language is 'javascript', this returns 'playwright-test'.\nfunction determinePrimaryGeneratorId(sdkLanguage: Language): string {\n  for (const language of languageSet()) {\n    if (language.highlighter === sdkLanguage)\n      return language.id;\n  }\n  return sdkLanguage;\n}\n\nexport class ProgrammaticRecorderApp {\n  static async run(inspectedContext: BrowserContext, recorder: Recorder, browserName: string, params: channels.BrowserContextEnableRecorderParams) {\n    let lastAction: actions.ActionInContext | null = null;\n    const languages = [...languageSet()];\n\n    const languageGeneratorOptions = {\n      browserName: browserName,\n      launchOptions: { headless: false, ...params.launchOptions, tracesDir: undefined },\n      contextOptions: { ...params.contextOptions },\n      deviceName: params.device,\n      saveStorage: params.saveStorage,\n    };\n    const languageGenerator = languages.find(l => l.id === params.language) ?? languages.find(l => l.id === 'playwright-test')!;\n\n    recorder.on(RecorderEvent.ActionAdded, action => {\n      const page = findPageByGuid(inspectedContext, action.frame.pageGuid);\n      if (!page)\n        return;\n      const { actionTexts } = generateCode([action], languageGenerator, languageGeneratorOptions);\n      if (!lastAction || !shouldMergeAction(action, lastAction))\n        inspectedContext.emit(BrowserContext.Events.RecorderEvent, { event: 'actionAdded', data: action, page, code: actionTexts.join('\\n') });\n      else\n        inspectedContext.emit(BrowserContext.Events.RecorderEvent, { event: 'actionUpdated', data: action, page, code: actionTexts.join('\\n') });\n      lastAction = action;\n    });\n    recorder.on(RecorderEvent.SignalAdded, signal => {\n      const page = findPageByGuid(inspectedContext, signal.frame.pageGuid);\n      inspectedContext.emit(BrowserContext.Events.RecorderEvent, { event: 'signalAdded', data: signal, page, code: '' });\n    });\n  }\n}\n\nfunction findPageByGuid(context: BrowserContext, guid: string) {\n  return context.pages().find(p => p.guid === guid);\n}\n\nconst recorderAppSymbol = Symbol('recorderApp');\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,gBAAe;AACf,kBAAiB;AAEjB,mBAA4B;AAC5B,yBAAqB;AACrB,uBAA6C;AAC7C,IAAAA,oBAA0B;AAC1B,sBAAmC;AACnC,2BAA8B;AAC9B,uBAA4B;AAC5B,2BAAmD;AACnD,sBAA6B;AAC7B,sBAAwC;AACxC,4BAA+B;AAgBxB,MAAM,YAAY;AAAA,EAYf,YAAY,UAAoB,QAA2B,MAAY,mBAAuC;AAPtH,SAAQ,uBAA6C;AACrD,SAAQ,WAAsC,CAAC;AAC/C,SAAQ,eAAyB,CAAC;AAClC,SAAQ,mBAA6B,CAAC;AAKpC,SAAK,QAAQ;AACb,SAAK,YAAY;AACjB,SAAK,oBAAoB;AAGzB,SAAK,4BAA4B;AAAA,MAC/B,aAAa,OAAO;AAAA,MACpB,eAAe,EAAE,UAAU,OAAO,GAAG,OAAO,eAAe,WAAW,OAAU;AAAA,MAChF,gBAAgB,EAAE,GAAG,OAAO,eAAe;AAAA,MAC3C,YAAY,OAAO;AAAA,MACnB,aAAa,OAAO;AAAA,IACtB;AAEA,SAAK,uBAAuB,OAAO,aAAa,IAAI,mCAAc,OAAO,UAAU,IAAI;AACvF,SAAK,sBAAsB,QAAQ,IAAI,2BAA2B,OAAO,YAAY,4BAA4B,OAAO,WAAW;AACnI,SAAK,uBAAuB,KAAK;AAAA,EACnC;AAAA,EAEA,MAAc,MAAM,kBAAkC;AACpD,cAAM,+CAA6B,KAAK,OAAO,UAAU;AAEzD,UAAM,aAAa,IAAI,mCAAmB;AAC1C,UAAM,WAAW,IAAI,OAAM,aAAY;AACrC,YAAM,KAAK,MAAM,sBAAsB,UAAU,WAAS;AACxD,YAAI,CAAC,MAAM,QAAQ,EAAE,IAAI,EAAE,WAAW,qBAAqB,GAAG;AAC5D,gBAAM,SAAS,EAAE,YAAY,KAAK,CAAC,EAAE,MAAM,MAAM;AAAA,UAAC,CAAC;AACnD;AAAA,QACF;AAEA,cAAM,MAAM,MAAM,QAAQ,EAAE,IAAI,EAAE,UAAU,sBAAsB,MAAM;AACxE,cAAM,OAAO,QAAQ,QAAQ,yBAAyB,GAAG;AACzD,kBAAAC,QAAG,SAAS,SAAS,IAAI,EAAE,KAAK,YAAU;AACxC,gBAAM,QAAQ;AAAA,YACZ,QAAQ;AAAA,YACR,SAAS;AAAA,cACP,EAAE,MAAM,gBAAgB,OAAO,wBAAK,QAAQ,YAAAC,QAAK,QAAQ,IAAI,CAAC,KAAK,2BAA2B;AAAA,YAChG;AAAA,YACA,MAAM,OAAO,SAAS,QAAQ;AAAA,YAC9B,UAAU;AAAA,UACZ,CAAC,EAAE,MAAM,MAAM;AAAA,UAAC,CAAC;AAAA,QACnB,CAAC;AAAA,MACH,CAAC;AAED,YAAM,KAAK,MAAM,cAAc,UAAU,YAAY,OAAO,CAAC,GAAG,SAAc,KAAK,eAAe,IAAI,CAAC;AAEvG,WAAK,MAAM,KAAK,SAAS,MAAM;AAC7B,aAAK,UAAU,MAAM;AACrB,aAAK,MAAM,eAAe,MAAM,EAAE,QAAQ,yBAAyB,CAAC,EAAE,MAAM,MAAM;AAAA,QAAC,CAAC;AACpF,eAAQ,iBAAyB,iBAAiB;AAAA,MACpD,CAAC;AAED,YAAM,KAAK,MAAM,UAAU,EAAE,KAAK,UAAU,QAAQ,IAAI,SAAS,2BAA2B,+BAA+B;AAAA,IAC7H,CAAC;AAED,UAAM,MAAM,KAAK,UAAU,IAAI;AAC/B,QAAI;AACF,WAAK,iBAAiB,GAAG;AAC3B,SAAK,eAAe,KAAK,UAAU,KAAK,CAAC;AACzC,SAAK,sBAAsB,KAAK,UAAU,OAAO,CAAC;AAClD,SAAK,eAAe,QAAQ;AAE5B,SAAK,sBAAsB,KAAK,UAAU,YAAY,GAAG,KAAK,UAAU,eAAe,CAAC;AACxF,SAAK,mBAAmB,KAAK,UAAU,QAAQ,CAAC;AAChD,SAAK,eAAe,KAAK,SAAS;AAAA,EACpC;AAAA,EAEQ,eAAe,MAAW;AAChC,QAAI,KAAK,UAAU,SAAS;AAC1B,WAAK,WAAW,CAAC;AACjB,WAAK,eAAe,QAAQ;AAC5B,WAAK,UAAU,MAAM;AACrB;AAAA,IACF;AACA,QAAI,KAAK,UAAU,eAAe;AAChC,YAAM,SAAS,CAAC,GAAG,KAAK,kBAAkB,GAAG,KAAK,YAAY,EAAE,KAAK,OAAK,EAAE,OAAO,KAAK,OAAO,MAAM;AACrG,UAAI,QAAQ;AACV,YAAI,OAAO;AACT,eAAK,uBAAuB,OAAO;AACrC,aAAK,UAAU,YAAY,OAAO,QAAQ;AAAA,MAC5C;AACA;AAAA,IACF;AACA,QAAI,KAAK,UAAU,iBAAiB;AAClC,WAAK,0BAA0B,qBAAqB,KAAK,OAAO;AAChE,WAAK,eAAe;AACpB;AAAA,IACF;AACA,QAAI,KAAK,UAAU,WAAW;AAC5B,WAAK,UAAU,QAAQ,KAAK,OAAO,IAAI;AACvC;AAAA,IACF;AACA,QAAI,KAAK,UAAU,UAAU;AAC3B,WAAK,UAAU,OAAO;AACtB;AAAA,IACF;AACA,QAAI,KAAK,UAAU,SAAS;AAC1B,WAAK,UAAU,MAAM;AACrB;AAAA,IACF;AACA,QAAI,KAAK,UAAU,QAAQ;AACzB,WAAK,UAAU,KAAK;AACpB;AAAA,IACF;AACA,QAAI,KAAK,UAAU,sBAAsB;AACvC,UAAI,KAAK,OAAO;AACd,aAAK,UAAU,uBAAuB,KAAK,OAAO,QAAQ;AAC5D,UAAI,KAAK,OAAO;AACd,aAAK,UAAU,2BAA2B,KAAK,OAAO,YAAY;AACpE;AAAA,IACF;AACA,UAAM,IAAI,MAAM,kBAAkB,KAAK,KAAK,EAAE;AAAA,EAChD;AAAA,EAEA,aAAa,KAAK,SAAyB,QAAqD;AAC9F,QAAI,QAAQ,IAAI;AACd;AACF,UAAM,WAAW,MAAM,yBAAS,WAAW,SAAS,MAAM;AAC1D,QAAI,OAAO,iBAAiB,OAAO;AACjC,YAAM,cAAc,QAAQ,SAAS,QAAQ;AAC7C,YAAM,wBAAwB,IAAI,SAAS,UAAU,aAAa,MAAM;AACxE;AAAA,IACF;AACA,UAAM,YAAY,MAAM,UAAU,SAAS,MAAM;AAAA,EACnD;AAAA,EAEA,MAAM,QAAQ;AACZ,UAAM,KAAK,MAAM,MAAM;AAAA,EACzB;AAAA,EAEA,OAAO,qBAAqB,SAAyB;AACnD,QAAI,QAAQ,IAAI;AACd;AACF,SAAK,yBAAS,WAAW,SAAS,CAAC,CAAC,EAAE,KAAK,cAAY,YAAY,MAAM,UAAU,SAAS,CAAC,CAAC,CAAC,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAAA,EACjH;AAAA,EAEA,aAAqB,MAAM,UAAoB,kBAAkC,QAAqD;AACpI,QAAK,iBAAyB,iBAAiB;AAC7C;AACF,IAAC,iBAAyB,iBAAiB,IAAI;AAC/C,UAAM,cAAc,iBAAiB,SAAS,YAAY;AAC1D,UAAM,SAAS,CAAC,CAAC,iBAAiB,SAAS,QAAQ;AACnD,UAAM,qBAAsB,QAAQ,eAAe,EAAE,iBAAqE,EAAE,aAAa,cAAc,sBAAsB,KAAK,CAAC;AACnL,UAAM,EAAE,SAAS,YAAY,KAAK,IAAI,UAAM,6BAAU,mBAAmB,UAAU;AAAA,MACjF;AAAA,MACA,YAAY,EAAE,OAAO,KAAK,QAAQ,IAAI;AAAA,MACtC,gBAAgB,EAAE,GAAG,MAAM,GAAG,GAAG;AAAA,MACjC,0BAA0B;AAAA,QACxB,mBAAmB;AAAA,QACnB,UAAU,CAAC,CAAC,QAAQ,IAAI,2BAAwB,0BAAY,KAAK,CAAC;AAAA,QAClE,aAAS,0BAAY,IAAI,IAAI;AAAA,QAC7B,cAAc,OAAO;AAAA,QACrB,gBAAgB,iBAAiB,SAAS,QAAQ,aAAa,iBAAiB,SAAS,QAAQ,uBAAuB;AAAA;AAAA,QAExH,SAAS,iBAAiB,SAAS,QAAQ,aAAa,iBAAiB,SAAS,QAAQ,UAAU;AAAA,MACtG;AAAA,IACF,CAAC;AACD,UAAM,aAAa,IAAI,mCAAmB;AAC1C,UAAM,WAAW,IAAI,OAAM,aAAY;AACrC,YAAM,WAAW,SAAS,gBAAiB,wBAAwB,QAAQ;AAAA,IAC7E,CAAC;AAED,UAAM,YAAY;AAAA,MAChB,aAAa,iBAAiB,SAAS,QAAQ;AAAA,MAC/C,aAAa,iBAAiB,SAAS,YAAY;AAAA,MACnD,mBAAmB,iBAAiB,SAAS,QAAQ;AAAA,MACrD,QAAQ,CAAC,CAAC,iBAAiB,SAAS,QAAQ;AAAA,MAC5C,gBAAgB,iBAAiB,SAAS,QAAQ,aAAa,iBAAiB,SAAS,QAAQ,uBAAuB;AAAA,MACxH,SAAS,iBAAiB,SAAS,QAAQ,aAAa,iBAAiB,SAAS,QAAQ,UAAU;AAAA,MACpG,GAAG;AAAA,IACL;AAEA,UAAM,cAAc,IAAI,YAAY,UAAU,WAAW,MAAM,WAAW,SAAS,QAAQ,UAAU;AACrG,UAAM,YAAY,MAAM,gBAAgB;AACxC,IAAC,iBAAyB,qBAAqB;AAAA,EACjD;AAAA,EAEQ,eAAe,UAAoB;AACzC,aAAS,GAAG,8BAAc,aAAa,CAAC,WAAoC;AAC1E,WAAK,eAAe,MAAM;AAAA,IAC5B,CAAC;AAED,aAAS,GAAG,8BAAc,aAAa,CAAC,WAAoC;AAC1E,WAAK,eAAe,MAAM;AAAA,IAC5B,CAAC;AAED,aAAS,GAAG,8BAAc,eAAe,CAAC,QAAgB;AACxD,WAAK,iBAAiB,GAAG;AAAA,IAC3B,CAAC;AAED,aAAS,GAAG,8BAAc,eAAe,MAAM;AAC7C,WAAK,iBAAiB;AAAA,IACxB,CAAC;AAED,aAAS,GAAG,8BAAc,aAAa,CAAC,SAAe;AACrD,WAAK,eAAe,IAAI;AAAA,IAC1B,CAAC;AAED,aAAS,GAAG,8BAAc,oBAAoB,CAAC,WAAoB;AACjE,WAAK,sBAAsB,MAAM;AAAA,IACnC,CAAC;AAED,aAAS,GAAG,8BAAc,oBAAoB,CAAC,SAAmB,mBAA4B;AAC5F,WAAK,sBAAsB,SAAS,cAAc;AAAA,IACpD,CAAC;AAED,aAAS,GAAG,8BAAc,eAAe,CAAC,aAA0B,gBAA0B;AAC5F,WAAK,iBAAiB,aAAa,WAAW;AAAA,IAChD,CAAC;AAED,aAAS,GAAG,8BAAc,iBAAiB,CAAC,aAAwB;AAClE,WAAK,mBAAmB,QAAQ;AAAA,IAClC,CAAC;AAAA,EACH;AAAA,EAEQ,eAAe,QAAiC;AACtD,SAAK,SAAS,KAAK,MAAM;AACzB,SAAK,eAAe,QAAQ;AAAA,EAC9B;AAAA,EAEQ,eAAe,QAAiC;AACtD,UAAM,aAAa,KAAK,SAAS,SAAS,OAAK,EAAE,MAAM,aAAa,OAAO,MAAM,QAAQ;AACzF,QAAI;AACF,iBAAW,OAAO,QAAQ,KAAK,OAAO,MAAM;AAC9C,SAAK,eAAe;AAAA,EACtB;AAAA,EAEQ,iBAAiB,KAAa;AACpC,SAAK,MAAM,UAAU,EAAE,oBAAoB,CAAC,EAAE,KAAAC,KAAI,MAAuB;AACvE,aAAO,qBAAqBA,IAAG;AAAA,IACjC,GAAG,SAAS,GAAG,EAAE,YAAY,KAAK,GAAG,EAAE,IAAI,CAAC,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAAA,EAC9D;AAAA,EAEQ,mBAAmB;AACzB,SAAK,sBAAsB,MAAM;AACjC,SAAK,MAAM,eAAe,MAAM,EAAE,QAAQ,yBAAyB,CAAC,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAAA,EACtF;AAAA,EAEQ,eAAe,MAAY;AACjC,SAAK,MAAM,UAAU,EAAE,oBAAoB,CAACC,UAAe;AACzD,aAAO,kBAAkBA,KAAI;AAAA,IAC/B,GAAG,SAAS,GAAG,EAAE,YAAY,KAAK,GAAG,IAAI,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAAA,EAC3D;AAAA,EAEQ,sBAAsB,QAAiB;AAC7C,SAAK,MAAM,UAAU,EAAE,oBAAoB,CAACC,YAAoB;AAC9D,aAAO,oBAAoBA,OAAM;AAAA,IACnC,GAAG,SAAS,GAAG,EAAE,YAAY,KAAK,GAAG,MAAM,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAAA,EAC7D;AAAA,EAEQ,sBAAsB,SAAmB,gBAAoC;AACnF,QAAI,CAAC,QAAQ,UAAU,CAAC,KAAK,aAAa;AACxC;AACF,SAAK,eAAe;AACpB,SAAK,gBAAgB;AACrB,SAAK,cAAc,cAAc;AAAA,EACnC;AAAA,EAEQ,iBAAiB,aAA0B,aAAuB;AACxE,QAAI;AACF,WAAK,MAAM,aAAa;AAC1B,SAAK,MAAM,UAAU,EAAE,oBAAoB,CAAC,UAA+D;AACzG,aAAO,wBAAwB,MAAM,aAAa,MAAM,WAAW;AAAA,IACrE,GAAG,SAAS,GAAG,EAAE,YAAY,KAAK,GAAG,EAAE,aAAa,YAAY,CAAC,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAAA,EACnF;AAAA,EAEQ,mBAAmB,UAAqB;AAC9C,SAAK,MAAM,UAAU,EAAE,oBAAoB,CAACC,cAAwB;AAClE,aAAO,qBAAqBA,SAAQ;AAAA,IACtC,GAAG,SAAS,GAAG,EAAE,YAAY,KAAK,GAAG,QAAQ,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAAA,EAC/D;AAAA,EAEQ,kBAAkB;AACxB,UAAM,UAAU,CAAC,GAAG,KAAK,cAAc,GAAG,KAAK,gBAAgB;AAC/D,SAAK,MAAM,UAAU,EAAE,oBAAoB,CAAC,EAAE,SAAAC,SAAQ,MAA6B;AACjF,aAAO,qBAAqBA,QAAO;AAAA,IACrC,GAAG,SAAS,GAAG,EAAE,YAAY,KAAK,GAAG,EAAE,QAAQ,CAAC,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAAA,EAClE;AAAA,EAEQ,cAAc,UAA8B;AAClD,QAAI,CAAC;AACH;AACF,SAAK,MAAM,UAAU,EAAE,oBAAoB,CAAC,EAAE,UAAAC,UAAS,MAA4B;AACjF,aAAO,uBAAuBA,SAAQ;AAAA,IACxC,GAAG,SAAS,GAAG,EAAE,YAAY,KAAK,GAAG,EAAE,SAAS,CAAC,EAAE,MAAM,MAAM;AAAA,IAAC,CAAC;AAAA,EACnE;AAAA,EAEQ,eAAe,QAAmB;AACxC,UAAM,kBAAkB,CAAC;AACzB,UAAM,cAAU,sCAAgB,KAAK,QAAQ;AAE7C,QAAI;AACJ,eAAW,yBAAqB,8BAAY,GAAG;AAC7C,YAAM,EAAE,QAAQ,QAAQ,aAAa,KAAK,QAAI,8BAAa,SAAS,mBAAmB,KAAK,yBAAyB;AACrH,YAAM,SAAiB;AAAA,QACrB,YAAY;AAAA,QACZ,OAAO,kBAAkB;AAAA,QACzB,OAAO,kBAAkB;AAAA,QACzB,IAAI,kBAAkB;AAAA,QACtB;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS;AAAA,QACT,UAAU,kBAAkB;AAAA,QAC5B,WAAW,CAAC;AAAA,MACd;AACA,aAAO,aAAa,KAAK,MAAM,IAAI,EAAE,SAAS;AAC9C,sBAAgB,KAAK,MAAM;AAC3B,UAAI,kBAAkB,OAAO,KAAK;AAChC,aAAK,sBAAsB,WAAW,OAAO,IAAI;AACnD,UAAI,WAAW,YAAY,OAAO,OAAO,KAAK;AAC5C,yBAAiB,OAAO;AAAA,IAC5B;AAEA,SAAK,mBAAmB;AACxB,SAAK,gBAAgB;AACrB,SAAK,cAAc,cAAc;AAAA,EACnC;AACF;AAGA,SAAS,4BAA4B,aAA+B;AAClE,aAAW,gBAAY,8BAAY,GAAG;AACpC,QAAI,SAAS,gBAAgB;AAC3B,aAAO,SAAS;AAAA,EACpB;AACA,SAAO;AACT;AAEO,MAAM,wBAAwB;AAAA,EACnC,aAAa,IAAI,kBAAkC,UAAoB,aAAqB,QAAqD;AAC/I,QAAI,aAA6C;AACjD,UAAM,YAAY,CAAC,OAAG,8BAAY,CAAC;AAEnC,UAAM,2BAA2B;AAAA,MAC/B;AAAA,MACA,eAAe,EAAE,UAAU,OAAO,GAAG,OAAO,eAAe,WAAW,OAAU;AAAA,MAChF,gBAAgB,EAAE,GAAG,OAAO,eAAe;AAAA,MAC3C,YAAY,OAAO;AAAA,MACnB,aAAa,OAAO;AAAA,IACtB;AACA,UAAM,oBAAoB,UAAU,KAAK,OAAK,EAAE,OAAO,OAAO,QAAQ,KAAK,UAAU,KAAK,OAAK,EAAE,OAAO,iBAAiB;AAEzH,aAAS,GAAG,8BAAc,aAAa,YAAU;AAC/C,YAAM,OAAO,eAAe,kBAAkB,OAAO,MAAM,QAAQ;AACnE,UAAI,CAAC;AACH;AACF,YAAM,EAAE,YAAY,QAAI,8BAAa,CAAC,MAAM,GAAG,mBAAmB,wBAAwB;AAC1F,UAAI,CAAC,cAAc,KAAC,wCAAkB,QAAQ,UAAU;AACtD,yBAAiB,KAAK,qCAAe,OAAO,eAAe,EAAE,OAAO,eAAe,MAAM,QAAQ,MAAM,MAAM,YAAY,KAAK,IAAI,EAAE,CAAC;AAAA;AAErI,yBAAiB,KAAK,qCAAe,OAAO,eAAe,EAAE,OAAO,iBAAiB,MAAM,QAAQ,MAAM,MAAM,YAAY,KAAK,IAAI,EAAE,CAAC;AACzI,mBAAa;AAAA,IACf,CAAC;AACD,aAAS,GAAG,8BAAc,aAAa,YAAU;AAC/C,YAAM,OAAO,eAAe,kBAAkB,OAAO,MAAM,QAAQ;AACnE,uBAAiB,KAAK,qCAAe,OAAO,eAAe,EAAE,OAAO,eAAe,MAAM,QAAQ,MAAM,MAAM,GAAG,CAAC;AAAA,IACnH,CAAC;AAAA,EACH;AACF;AAEA,SAAS,eAAe,SAAyB,MAAc;AAC7D,SAAO,QAAQ,MAAM,EAAE,KAAK,OAAK,EAAE,SAAS,IAAI;AAClD;AAEA,MAAM,oBAAoB,OAAO,aAAa;",
  "names": ["import_launchApp", "fs", "path", "url", "mode", "paused", "callLogs", "sources", "sourceId"]
}
