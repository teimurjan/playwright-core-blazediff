{
  "version": 3,
  "sources": ["../../../src/server/recorder/recorderRunner.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { serializeExpectedTextValues } from '../../utils';\nimport { toKeyboardModifiers } from '../codegen/language';\nimport { buildFullSelector, mainFrameForAction } from './recorderUtils';\nimport { Progress, ProgressController } from '../progress';\n\nimport type { Page } from '../page';\nimport type * as types from '../types';\nimport type * as actions from '@recorder/actions';\nimport type { Frame } from '../frames';\n\nexport async function performAction(pageAliases: Map<Page, string>, actionInContext: actions.ActionInContext) {\n  const mainFrame = mainFrameForAction(pageAliases, actionInContext);\n  const controller = new ProgressController();\n  const kActionTimeout = 5000;\n  return await controller.run(progress => performActionImpl(progress, mainFrame, actionInContext), kActionTimeout);\n}\n\nasync function performActionImpl(progress: Progress, mainFrame: Frame, actionInContext: actions.ActionInContext) {\n  const { action } = actionInContext;\n\n  if (action.name === 'navigate') {\n    await mainFrame.goto(progress, action.url);\n    return;\n  }\n\n  if (action.name === 'openPage')\n    throw Error('Not reached');\n\n  if (action.name === 'closePage') {\n    await mainFrame._page.close();\n    return;\n  }\n\n  const selector = buildFullSelector(actionInContext.frame.framePath, action.selector);\n\n  if (action.name === 'click') {\n    const options = toClickOptions(action);\n    await mainFrame.click(progress, selector, { ...options, strict: true });\n    return;\n  }\n\n  if (action.name === 'press') {\n    const modifiers = toKeyboardModifiers(action.modifiers);\n    const shortcut = [...modifiers, action.key].join('+');\n    await mainFrame.press(progress, selector, shortcut, { strict: true });\n    return;\n  }\n\n  if (action.name === 'fill') {\n    await mainFrame.fill(progress, selector, action.text, { strict: true });\n    return;\n  }\n\n  if (action.name === 'setInputFiles') {\n    await mainFrame.setInputFiles(progress, selector, { selector, payloads: [], strict: true });\n    return;\n  }\n\n  if (action.name === 'check') {\n    await mainFrame.check(progress, selector, { strict: true });\n    return;\n  }\n\n  if (action.name === 'uncheck') {\n    await mainFrame.uncheck(progress, selector, { strict: true });\n    return;\n  }\n\n  if (action.name === 'select') {\n    const values = action.options.map(value => ({ value }));\n    await mainFrame.selectOption(progress, selector, [], values, { strict: true });\n    return;\n  }\n\n  if (action.name === 'assertChecked') {\n    await mainFrame.expect(progress, selector, {\n      selector,\n      expression: 'to.be.checked',\n      expectedValue: { checked: action.checked },\n      isNot: !action.checked,\n    });\n    return;\n  }\n\n  if (action.name === 'assertText') {\n    await mainFrame.expect(progress, selector, {\n      selector,\n      expression: 'to.have.text',\n      expectedText: serializeExpectedTextValues([action.text], { matchSubstring: true, normalizeWhiteSpace: true }),\n      isNot: false,\n    });\n    return;\n  }\n\n  if (action.name === 'assertValue') {\n    await mainFrame.expect(progress, selector, {\n      selector,\n      expression: 'to.have.value',\n      expectedValue: action.value,\n      isNot: false,\n    });\n    return;\n  }\n\n  if (action.name === 'assertVisible') {\n    await mainFrame.expect(progress, selector, {\n      selector,\n      expression: 'to.be.visible',\n      isNot: false,\n    });\n    return;\n  }\n\n  throw new Error('Internal error: unexpected action ' + (action as any).name);\n}\n\nexport function toClickOptions(action: actions.ClickAction): types.MouseClickOptions {\n  const modifiers = toKeyboardModifiers(action.modifiers);\n  const options: types.MouseClickOptions = {};\n  if (action.button !== 'left')\n    options.button = action.button;\n  if (modifiers.length)\n    options.modifiers = modifiers;\n  if (action.clickCount > 1)\n    options.clickCount = action.clickCount;\n  if (action.position)\n    options.position = action.position;\n  return options;\n}\n"],
  "mappings": "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",
  "names": []
}
