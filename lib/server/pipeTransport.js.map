{
  "version": 3,
  "sources": ["../../src/server/pipeTransport.ts"],
  "sourcesContent": ["/**\n * Copyright 2018 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { makeWaitForNextTask } from '../utils';\nimport { debugLogger } from './utils/debugLogger';\n\nimport type { ConnectionTransport, ProtocolRequest, ProtocolResponse } from './transport';\n\nexport class PipeTransport implements ConnectionTransport {\n  private _pipeRead: NodeJS.ReadableStream;\n  private _pipeWrite: NodeJS.WritableStream;\n  private _pendingBuffers: Buffer[] = [];\n  private _waitForNextTask = makeWaitForNextTask();\n  private _closed = false;\n  private _onclose?: (reason?: string) => void;\n\n  onmessage?: (message: ProtocolResponse) => void;\n\n  constructor(pipeWrite: NodeJS.WritableStream, pipeRead: NodeJS.ReadableStream) {\n    this._pipeRead = pipeRead;\n    this._pipeWrite = pipeWrite;\n    pipeRead.on('data', buffer => this._dispatch(buffer));\n    pipeRead.on('close', () => {\n      this._closed = true;\n      if (this._onclose)\n        this._onclose.call(null);\n    });\n    pipeRead.on('error', e => debugLogger.log('error', e));\n    pipeWrite.on('error', e => debugLogger.log('error', e));\n    this.onmessage = undefined;\n  }\n\n  get onclose() {\n    return this._onclose;\n  }\n\n  set onclose(onclose: undefined | ((reason?: string) => void)) {\n    this._onclose = onclose;\n    if (onclose && !this._pipeRead.readable)\n      onclose();\n  }\n\n  send(message: ProtocolRequest) {\n    if (this._closed)\n      throw new Error('Pipe has been closed');\n    this._pipeWrite.write(JSON.stringify(message));\n    this._pipeWrite.write('\\0');\n  }\n\n  close() {\n    throw new Error('unimplemented');\n  }\n\n  _dispatch(buffer: Buffer) {\n    let end = buffer.indexOf('\\0');\n    if (end === -1) {\n      this._pendingBuffers.push(buffer);\n      return;\n    }\n    this._pendingBuffers.push(buffer.slice(0, end));\n    const message = Buffer.concat(this._pendingBuffers).toString();\n    this._waitForNextTask(() => {\n      if (this.onmessage)\n        this.onmessage.call(null, JSON.parse(message));\n    });\n\n    let start = end + 1;\n    end = buffer.indexOf('\\0', start);\n    while (end !== -1) {\n      const message = buffer.toString(undefined, start, end);\n      this._waitForNextTask(() => {\n        if (this.onmessage)\n          this.onmessage.call(null, JSON.parse(message));\n      });\n      start = end + 1;\n      end = buffer.indexOf('\\0', start);\n    }\n    this._pendingBuffers = [buffer.slice(start)];\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA,mBAAoC;AACpC,yBAA4B;AAIrB,MAAM,cAA6C;AAAA,EAUxD,YAAY,WAAkC,UAAiC;AAP/E,SAAQ,kBAA4B,CAAC;AACrC,SAAQ,uBAAmB,kCAAoB;AAC/C,SAAQ,UAAU;AAMhB,SAAK,YAAY;AACjB,SAAK,aAAa;AAClB,aAAS,GAAG,QAAQ,YAAU,KAAK,UAAU,MAAM,CAAC;AACpD,aAAS,GAAG,SAAS,MAAM;AACzB,WAAK,UAAU;AACf,UAAI,KAAK;AACP,aAAK,SAAS,KAAK,IAAI;AAAA,IAC3B,CAAC;AACD,aAAS,GAAG,SAAS,OAAK,+BAAY,IAAI,SAAS,CAAC,CAAC;AACrD,cAAU,GAAG,SAAS,OAAK,+BAAY,IAAI,SAAS,CAAC,CAAC;AACtD,SAAK,YAAY;AAAA,EACnB;AAAA,EAEA,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,IAAI,QAAQ,SAAkD;AAC5D,SAAK,WAAW;AAChB,QAAI,WAAW,CAAC,KAAK,UAAU;AAC7B,cAAQ;AAAA,EACZ;AAAA,EAEA,KAAK,SAA0B;AAC7B,QAAI,KAAK;AACP,YAAM,IAAI,MAAM,sBAAsB;AACxC,SAAK,WAAW,MAAM,KAAK,UAAU,OAAO,CAAC;AAC7C,SAAK,WAAW,MAAM,IAAI;AAAA,EAC5B;AAAA,EAEA,QAAQ;AACN,UAAM,IAAI,MAAM,eAAe;AAAA,EACjC;AAAA,EAEA,UAAU,QAAgB;AACxB,QAAI,MAAM,OAAO,QAAQ,IAAI;AAC7B,QAAI,QAAQ,IAAI;AACd,WAAK,gBAAgB,KAAK,MAAM;AAChC;AAAA,IACF;AACA,SAAK,gBAAgB,KAAK,OAAO,MAAM,GAAG,GAAG,CAAC;AAC9C,UAAM,UAAU,OAAO,OAAO,KAAK,eAAe,EAAE,SAAS;AAC7D,SAAK,iBAAiB,MAAM;AAC1B,UAAI,KAAK;AACP,aAAK,UAAU,KAAK,MAAM,KAAK,MAAM,OAAO,CAAC;AAAA,IACjD,CAAC;AAED,QAAI,QAAQ,MAAM;AAClB,UAAM,OAAO,QAAQ,MAAM,KAAK;AAChC,WAAO,QAAQ,IAAI;AACjB,YAAMA,WAAU,OAAO,SAAS,QAAW,OAAO,GAAG;AACrD,WAAK,iBAAiB,MAAM;AAC1B,YAAI,KAAK;AACP,eAAK,UAAU,KAAK,MAAM,KAAK,MAAMA,QAAO,CAAC;AAAA,MACjD,CAAC;AACD,cAAQ,MAAM;AACd,YAAM,OAAO,QAAQ,MAAM,KAAK;AAAA,IAClC;AACA,SAAK,kBAAkB,CAAC,OAAO,MAAM,KAAK,CAAC;AAAA,EAC7C;AACF;",
  "names": ["message"]
}
