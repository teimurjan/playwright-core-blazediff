{
  "version": 3,
  "sources": ["../../../src/server/webkit/wkWorkers.ts"],
  "sourcesContent": ["/**\n * Copyright 2019 Microsoft Corporation All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { eventsHelper } from '../utils/eventsHelper';\nimport { Worker } from '../page';\nimport { WKSession } from './wkConnection';\nimport { createHandle, WKExecutionContext } from './wkExecutionContext';\n\nimport type { Protocol } from './protocol';\nimport type { RegisteredListener } from '../utils/eventsHelper';\nimport type { Page } from '../page';\nimport type * as types from '../types';\n\nexport class WKWorkers {\n  private _sessionListeners: RegisteredListener[] = [];\n  private _page: Page;\n  private _workerSessions = new Map<string, WKSession>();\n\n  constructor(page: Page) {\n    this._page = page;\n  }\n\n  setSession(session: WKSession) {\n    eventsHelper.removeEventListeners(this._sessionListeners);\n    this.clear();\n    this._sessionListeners = [\n      eventsHelper.addEventListener(session, 'Worker.workerCreated', (event: Protocol.Worker.workerCreatedPayload) => {\n        const worker = new Worker(this._page, event.url);\n        const workerSession = new WKSession(session.connection, event.workerId, (message: any) => {\n          session.send('Worker.sendMessageToWorker', {\n            workerId: event.workerId,\n            message: JSON.stringify(message)\n          }).catch(e => {\n            workerSession.dispatchMessage({ id: message.id, error: { message: e.message } });\n          });\n        });\n        this._workerSessions.set(event.workerId, workerSession);\n        worker.createExecutionContext(new WKExecutionContext(workerSession, undefined));\n        this._page.addWorker(event.workerId, worker);\n        workerSession.on('Console.messageAdded', event => this._onConsoleMessage(worker, event));\n        Promise.all([\n          workerSession.send('Runtime.enable'),\n          workerSession.send('Console.enable'),\n          session.send('Worker.initialized', { workerId: event.workerId })\n        ]).catch(e => {\n          // Worker can go as we are initializing it.\n          this._page.removeWorker(event.workerId);\n        });\n      }),\n      eventsHelper.addEventListener(session, 'Worker.dispatchMessageFromWorker', (event: Protocol.Worker.dispatchMessageFromWorkerPayload) => {\n        const workerSession = this._workerSessions.get(event.workerId)!;\n        if (!workerSession)\n          return;\n        workerSession.dispatchMessage(JSON.parse(event.message));\n      }),\n      eventsHelper.addEventListener(session, 'Worker.workerTerminated', (event: Protocol.Worker.workerTerminatedPayload) => {\n        const workerSession = this._workerSessions.get(event.workerId)!;\n        if (!workerSession)\n          return;\n        workerSession.dispose();\n        this._workerSessions.delete(event.workerId);\n        this._page.removeWorker(event.workerId);\n      })\n    ];\n  }\n\n  clear() {\n    this._page.clearWorkers();\n    this._workerSessions.clear();\n  }\n\n  async initializeSession(session: WKSession) {\n    await session.send('Worker.enable');\n  }\n\n  async _onConsoleMessage(worker: Worker, event: Protocol.Console.messageAddedPayload) {\n    const { type, level, text, parameters, url, line: lineNumber, column: columnNumber } = event.message;\n    let derivedType: string = type || '';\n    if (type === 'log')\n      derivedType = level;\n    else if (type === 'timing')\n      derivedType = 'timeEnd';\n\n    const handles = (parameters || []).map(p => {\n      return createHandle(worker.existingExecutionContext!, p);\n    });\n    const location: types.ConsoleMessageLocation = {\n      url: url || '',\n      lineNumber: (lineNumber || 1) - 1,\n      columnNumber: (columnNumber || 1) - 1\n    };\n    this._page.addConsoleMessage(derivedType, handles, location, handles.length ? undefined : text);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,0BAA6B;AAC7B,kBAAuB;AACvB,0BAA0B;AAC1B,gCAAiD;AAO1C,MAAM,UAAU;AAAA,EAKrB,YAAY,MAAY;AAJxB,SAAQ,oBAA0C,CAAC;AAEnD,SAAQ,kBAAkB,oBAAI,IAAuB;AAGnD,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,WAAW,SAAoB;AAC7B,qCAAa,qBAAqB,KAAK,iBAAiB;AACxD,SAAK,MAAM;AACX,SAAK,oBAAoB;AAAA,MACvB,iCAAa,iBAAiB,SAAS,wBAAwB,CAAC,UAAgD;AAC9G,cAAM,SAAS,IAAI,mBAAO,KAAK,OAAO,MAAM,GAAG;AAC/C,cAAM,gBAAgB,IAAI,8BAAU,QAAQ,YAAY,MAAM,UAAU,CAAC,YAAiB;AACxF,kBAAQ,KAAK,8BAA8B;AAAA,YACzC,UAAU,MAAM;AAAA,YAChB,SAAS,KAAK,UAAU,OAAO;AAAA,UACjC,CAAC,EAAE,MAAM,OAAK;AACZ,0BAAc,gBAAgB,EAAE,IAAI,QAAQ,IAAI,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;AAAA,UACjF,CAAC;AAAA,QACH,CAAC;AACD,aAAK,gBAAgB,IAAI,MAAM,UAAU,aAAa;AACtD,eAAO,uBAAuB,IAAI,6CAAmB,eAAe,MAAS,CAAC;AAC9E,aAAK,MAAM,UAAU,MAAM,UAAU,MAAM;AAC3C,sBAAc,GAAG,wBAAwB,CAAAA,WAAS,KAAK,kBAAkB,QAAQA,MAAK,CAAC;AACvF,gBAAQ,IAAI;AAAA,UACV,cAAc,KAAK,gBAAgB;AAAA,UACnC,cAAc,KAAK,gBAAgB;AAAA,UACnC,QAAQ,KAAK,sBAAsB,EAAE,UAAU,MAAM,SAAS,CAAC;AAAA,QACjE,CAAC,EAAE,MAAM,OAAK;AAEZ,eAAK,MAAM,aAAa,MAAM,QAAQ;AAAA,QACxC,CAAC;AAAA,MACH,CAAC;AAAA,MACD,iCAAa,iBAAiB,SAAS,oCAAoC,CAAC,UAA4D;AACtI,cAAM,gBAAgB,KAAK,gBAAgB,IAAI,MAAM,QAAQ;AAC7D,YAAI,CAAC;AACH;AACF,sBAAc,gBAAgB,KAAK,MAAM,MAAM,OAAO,CAAC;AAAA,MACzD,CAAC;AAAA,MACD,iCAAa,iBAAiB,SAAS,2BAA2B,CAAC,UAAmD;AACpH,cAAM,gBAAgB,KAAK,gBAAgB,IAAI,MAAM,QAAQ;AAC7D,YAAI,CAAC;AACH;AACF,sBAAc,QAAQ;AACtB,aAAK,gBAAgB,OAAO,MAAM,QAAQ;AAC1C,aAAK,MAAM,aAAa,MAAM,QAAQ;AAAA,MACxC,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,QAAQ;AACN,SAAK,MAAM,aAAa;AACxB,SAAK,gBAAgB,MAAM;AAAA,EAC7B;AAAA,EAEA,MAAM,kBAAkB,SAAoB;AAC1C,UAAM,QAAQ,KAAK,eAAe;AAAA,EACpC;AAAA,EAEA,MAAM,kBAAkB,QAAgB,OAA6C;AACnF,UAAM,EAAE,MAAM,OAAO,MAAM,YAAY,KAAK,MAAM,YAAY,QAAQ,aAAa,IAAI,MAAM;AAC7F,QAAI,cAAsB,QAAQ;AAClC,QAAI,SAAS;AACX,oBAAc;AAAA,aACP,SAAS;AAChB,oBAAc;AAEhB,UAAM,WAAW,cAAc,CAAC,GAAG,IAAI,OAAK;AAC1C,iBAAO,wCAAa,OAAO,0BAA2B,CAAC;AAAA,IACzD,CAAC;AACD,UAAM,WAAyC;AAAA,MAC7C,KAAK,OAAO;AAAA,MACZ,aAAa,cAAc,KAAK;AAAA,MAChC,eAAe,gBAAgB,KAAK;AAAA,IACtC;AACA,SAAK,MAAM,kBAAkB,aAAa,SAAS,UAAU,QAAQ,SAAS,SAAY,IAAI;AAAA,EAChG;AACF;",
  "names": ["event"]
}
