{
  "version": 3,
  "sources": ["../../../src/server/webkit/wkAccessibility.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type * as accessibility from '../accessibility';\nimport type { Protocol } from './protocol';\nimport type { WKSession } from './wkConnection';\nimport type * as dom from '../dom';\nimport type * as channels from '@protocol/channels';\n\nexport async function getAccessibilityTree(session: WKSession, needle?: dom.ElementHandle) {\n  const objectId = needle ? needle._objectId : undefined;\n  const { axNode } = await session.send('Page.accessibilitySnapshot', { objectId });\n  const tree = new WKAXNode(axNode);\n  return {\n    tree,\n    needle: needle ? tree._findNeedle() : null\n  };\n}\n\nconst WKRoleToARIARole = new Map(Object.entries({\n  'TextField': 'textbox',\n}));\n\n// WebKit localizes role descriptions on mac, but the english versions only add noise.\nconst WKUnhelpfulRoleDescriptions = new Map(Object.entries({\n  'WebArea': 'HTML content',\n  'Summary': 'summary',\n  'DescriptionList': 'description list',\n  'ImageMap': 'image map',\n  'ListMarker': 'list marker',\n  'Video': 'video playback',\n  'Mark': 'highlighted',\n  'contentinfo': 'content information',\n  'Details': 'details',\n  'DescriptionListDetail': 'description',\n  'DescriptionListTerm': 'term',\n  'alertdialog': 'web alert dialog',\n  'dialog': 'web dialog',\n  'status': 'application status',\n  'tabpanel': 'tab panel',\n  'application': 'web application',\n}));\n\nclass WKAXNode implements accessibility.AXNode {\n  private _payload: Protocol.Page.AXNode;\n  private _children: WKAXNode[];\n\n  constructor(payload: Protocol.Page.AXNode) {\n    this._payload = payload;\n\n    this._children = [];\n    for (const payload of this._payload.children || [])\n      this._children.push(new WKAXNode(payload));\n  }\n\n  children() {\n    return this._children;\n  }\n\n  _findNeedle(): WKAXNode | null {\n    if (this._payload.found)\n      return this;\n    for (const child of this._children) {\n      const found = child._findNeedle();\n      if (found)\n        return found;\n    }\n    return null;\n  }\n\n  isControl(): boolean {\n    switch (this._payload.role) {\n      case 'button':\n      case 'checkbox':\n      case 'ColorWell':\n      case 'combobox':\n      case 'DisclosureTriangle':\n      case 'listbox':\n      case 'menu':\n      case 'menubar':\n      case 'menuitem':\n      case 'menuitemcheckbox':\n      case 'menuitemradio':\n      case 'radio':\n      case 'scrollbar':\n      case 'searchbox':\n      case 'slider':\n      case 'spinbutton':\n      case 'switch':\n      case 'tab':\n      case 'textbox':\n      case 'TextField':\n      case 'tree':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  _isTextControl(): boolean {\n    switch (this._payload.role) {\n      case 'combobox':\n      case 'searchfield':\n      case 'textbox':\n      case 'TextField':\n        return true;\n    }\n    return false;\n  }\n\n  _name(): string {\n    if (this._payload.role === 'text')\n      return this._payload.value || '';\n    return this._payload.name || '';\n  }\n\n  isInteresting(insideControl: boolean): boolean {\n    const { role, focusable } = this._payload;\n    const name = this._name();\n    if (role === 'ScrollArea')\n      return false;\n    if (role === 'WebArea')\n      return true;\n\n    if (focusable || role === 'MenuListOption')\n      return true;\n\n    // If it's not focusable but has a control role, then it's interesting.\n    if (this.isControl())\n      return true;\n\n    // A non focusable child of a control is not interesting\n    if (insideControl)\n      return false;\n\n    return this.isLeafNode() && !!name;\n  }\n\n  _hasRedundantTextChild() {\n    if (this._children.length !== 1)\n      return false;\n    const child = this._children[0];\n    return child._payload.role === 'text' && this._payload.name === child._payload.value;\n  }\n\n  isLeafNode(): boolean {\n    if (!this._children.length)\n      return true;\n      // WebKit on Linux ignores everything inside text controls, normalize this behavior\n    if (this._isTextControl())\n      return true;\n      // WebKit for mac has text nodes inside heading, li, menuitem, a, and p nodes\n    if (this._hasRedundantTextChild())\n      return true;\n    return false;\n  }\n\n  serialize(): channels.AXNode {\n    const node: channels.AXNode = {\n      role: WKRoleToARIARole.get(this._payload.role) || this._payload.role,\n      name: this._name(),\n    };\n\n    if ('description' in this._payload && this._payload.description !== node.name)\n      node.description = this._payload.description;\n\n    if ('roledescription' in this._payload) {\n      const roledescription = this._payload.roledescription;\n      if (roledescription !== this._payload.role && WKUnhelpfulRoleDescriptions.get(this._payload.role) !== roledescription)\n        node.roledescription = roledescription;\n    }\n\n    if ('value' in this._payload && this._payload.role !== 'text') {\n      if (typeof this._payload.value === 'string')\n        node.valueString = this._payload.value;\n      else if (typeof this._payload.value === 'number')\n        node.valueNumber = this._payload.value;\n    }\n\n    if ('checked' in this._payload)\n      node.checked = this._payload.checked === 'true' ? 'checked' : this._payload.checked === 'false' ? 'unchecked' : 'mixed';\n\n    if ('pressed' in this._payload)\n      node.pressed = this._payload.pressed === 'true' ? 'pressed' : this._payload.pressed === 'false' ? 'released' : 'mixed';\n\n    const userStringProperties: Array<keyof channels.AXNode & keyof Protocol.Page.AXNode> = [\n      'keyshortcuts',\n      'valuetext'\n    ];\n    for (const userStringProperty of userStringProperties) {\n      if (!(userStringProperty in this._payload))\n        continue;\n      (node as any)[userStringProperty] = this._payload[userStringProperty];\n    }\n\n    const booleanProperties: Array<keyof channels.AXNode & keyof Protocol.Page.AXNode> = [\n      'disabled',\n      'expanded',\n      'focused',\n      'modal',\n      'multiselectable',\n      'readonly',\n      'required',\n      'selected',\n    ];\n    for (const booleanProperty of booleanProperties) {\n      // WebArea and ScrollArea treat focus differently than other nodes. They report whether their frame  has focus,\n      // not whether focus is specifically on the root node.\n      if (booleanProperty === 'focused' && (this._payload.role === 'WebArea' || this._payload.role === 'ScrollArea'))\n        continue;\n      const value = this._payload[booleanProperty];\n      if (!value)\n        continue;\n      (node as any)[booleanProperty] = value;\n    }\n\n    const numericalProperties: Array<keyof channels.AXNode & keyof Protocol.Page.AXNode> = [\n      'level',\n      'valuemax',\n      'valuemin',\n    ];\n    for (const numericalProperty of numericalProperties) {\n      if (!(numericalProperty in this._payload))\n        continue;\n      (node as any)[numericalProperty] = (this._payload as any)[numericalProperty];\n    }\n    const tokenProperties: Array<keyof channels.AXNode & keyof Protocol.Page.AXNode> = [\n      'autocomplete',\n      'haspopup',\n      'invalid',\n    ];\n    for (const tokenProperty of tokenProperties) {\n      const value = (this._payload as any)[tokenProperty];\n      if (!value || value === 'false')\n        continue;\n      (node as any)[tokenProperty] = value;\n    }\n\n    const orientationIsApplicable = new Set([\n      'ScrollArea',\n      'scrollbar',\n      'listbox',\n      'combobox',\n      'menu',\n      'tree',\n      'separator',\n      'slider',\n      'tablist',\n      'toolbar',\n    ]);\n    if (this._payload.orientation && orientationIsApplicable.has(this._payload.role))\n      node.orientation = this._payload.orientation;\n\n    return node;\n  }\n}\n"],
  "mappings": "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",
  "names": ["payload"]
}
