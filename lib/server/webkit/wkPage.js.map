{
  "version": 3,
  "sources": ["../../../src/server/webkit/wkPage.ts"],
  "sourcesContent": ["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport path from 'path';\n\nimport { assert } from '../../utils';\nimport { headersArrayToObject } from '../../utils/isomorphic/headers';\nimport { createGuid } from '../utils/crypto';\nimport { eventsHelper } from '../utils/eventsHelper';\nimport { hostPlatform } from '../utils/hostPlatform';\nimport { splitErrorMessage } from '../../utils/isomorphic/stackTrace';\nimport { PNG, jpegjs } from '../../utilsBundle';\nimport { BrowserContext } from '../browserContext';\nimport * as dialog from '../dialog';\nimport * as dom from '../dom';\nimport { TargetClosedError } from '../errors';\nimport { helper } from '../helper';\nimport * as network from '../network';\nimport { Page, PageBinding } from '../page';\nimport { getAccessibilityTree } from './wkAccessibility';\nimport { WKSession } from './wkConnection';\nimport { createHandle, WKExecutionContext } from './wkExecutionContext';\nimport { RawKeyboardImpl, RawMouseImpl, RawTouchscreenImpl } from './wkInput';\nimport { WKInterceptableRequest, WKRouteImpl } from './wkInterceptableRequest';\nimport { WKProvisionalPage } from './wkProvisionalPage';\nimport { WKWorkers } from './wkWorkers';\nimport { debugLogger } from '../utils/debugLogger';\n\nimport type { Protocol } from './protocol';\nimport type { WKBrowserContext } from './wkBrowser';\nimport type { RegisteredListener } from '../utils/eventsHelper';\nimport type * as accessibility from '../accessibility';\nimport type * as frames from '../frames';\nimport type { JSHandle } from '../javascript';\nimport type { InitScript, PageDelegate } from '../page';\nimport type { Progress } from '../progress';\nimport type * as types from '../types';\n\nconst UTILITY_WORLD_NAME = '__playwright_utility_world__';\n\nexport class WKPage implements PageDelegate {\n  readonly rawMouse: RawMouseImpl;\n  readonly rawKeyboard: RawKeyboardImpl;\n  readonly rawTouchscreen: RawTouchscreenImpl;\n  _session: WKSession;\n  private _provisionalPage: WKProvisionalPage | null = null;\n  readonly _page: Page;\n  private readonly _pageProxySession: WKSession;\n  readonly _opener: WKPage | null;\n  private readonly _requestIdToRequest = new Map<string, WKInterceptableRequest>();\n  private readonly _requestIdToRequestWillBeSentEvent = new Map<string, Protocol.Network.requestWillBeSentPayload>();\n  private readonly _workers: WKWorkers;\n  private readonly _contextIdToContext: Map<number, dom.FrameExecutionContext>;\n  private _sessionListeners: RegisteredListener[] = [];\n  private _eventListeners: RegisteredListener[];\n  readonly _browserContext: WKBrowserContext;\n  private _firstNonInitialNavigationCommittedPromise: Promise<void>;\n  private _firstNonInitialNavigationCommittedFulfill = () => {};\n  _firstNonInitialNavigationCommittedReject = (e: Error) => {};\n  private _lastConsoleMessage: { derivedType: string, text: string, handles: JSHandle[]; count: number, location: types.ConsoleMessageLocation; } | null = null;\n\n  private readonly _requestIdToResponseReceivedPayloadEvent = new Map<string, Protocol.Network.responseReceivedPayload>();\n  // Holds window features for the next popup being opened via window.open,\n  // until the popup page proxy arrives.\n  private _nextWindowOpenPopupFeatures?: string[];\n  private _recordingVideoFile: string | null = null;\n  private _screencastGeneration: number = 0;\n\n  constructor(browserContext: WKBrowserContext, pageProxySession: WKSession, opener: WKPage | null) {\n    this._pageProxySession = pageProxySession;\n    this._opener = opener;\n    this.rawKeyboard = new RawKeyboardImpl(pageProxySession);\n    this.rawMouse = new RawMouseImpl(pageProxySession);\n    this.rawTouchscreen = new RawTouchscreenImpl(pageProxySession);\n    this._contextIdToContext = new Map();\n    this._page = new Page(this, browserContext);\n    this.rawMouse.setPage(this._page);\n    this._workers = new WKWorkers(this._page);\n    this._session = undefined as any as WKSession;\n    this._browserContext = browserContext;\n    this._page.on(Page.Events.FrameDetached, (frame: frames.Frame) => this._removeContextsForFrame(frame, false));\n    this._eventListeners = [\n      eventsHelper.addEventListener(this._pageProxySession, 'Target.targetCreated', this._onTargetCreated.bind(this)),\n      eventsHelper.addEventListener(this._pageProxySession, 'Target.targetDestroyed', this._onTargetDestroyed.bind(this)),\n      eventsHelper.addEventListener(this._pageProxySession, 'Target.dispatchMessageFromTarget', this._onDispatchMessageFromTarget.bind(this)),\n      eventsHelper.addEventListener(this._pageProxySession, 'Target.didCommitProvisionalTarget', this._onDidCommitProvisionalTarget.bind(this)),\n      eventsHelper.addEventListener(this._pageProxySession, 'Screencast.screencastFrame', this._onScreencastFrame.bind(this)),\n    ];\n    this._firstNonInitialNavigationCommittedPromise = new Promise((f, r) => {\n      this._firstNonInitialNavigationCommittedFulfill = f;\n      this._firstNonInitialNavigationCommittedReject = r;\n    });\n    // Avoid unhandled rejection on disconnect in the middle of initialization.\n    this._firstNonInitialNavigationCommittedPromise.catch(() => {});\n    if (opener && !browserContext._options.noDefaultViewport && opener._nextWindowOpenPopupFeatures) {\n      const viewportSize = helper.getViewportSizeFromWindowFeatures(opener._nextWindowOpenPopupFeatures);\n      opener._nextWindowOpenPopupFeatures = undefined;\n      if (viewportSize)\n        this._page.setEmulatedSizeFromWindowOpen({ viewport: viewportSize, screen: viewportSize });\n    }\n  }\n\n  private async _initializePageProxySession() {\n    if (this._page.isStorageStatePage)\n      return;\n    const promises: Promise<any>[] = [\n      this._pageProxySession.send('Dialog.enable'),\n      this._pageProxySession.send('Emulation.setActiveAndFocused', { active: true }),\n    ];\n    const contextOptions = this._browserContext._options;\n    if (contextOptions.javaScriptEnabled === false)\n      promises.push(this._pageProxySession.send('Emulation.setJavaScriptEnabled', { enabled: false }));\n    promises.push(this._updateViewport());\n    promises.push(this.updateHttpCredentials());\n    if (this._browserContext._permissions.size) {\n      for (const [key, value] of this._browserContext._permissions)\n        promises.push(this._grantPermissions(key, value));\n    }\n    if (this._browserContext._options.recordVideo) {\n      const outputFile = path.join(this._browserContext._options.recordVideo.dir, createGuid() + '.webm');\n      promises.push(this._browserContext._ensureVideosPath().then(() => {\n        return this._startVideo({\n          // validateBrowserContextOptions ensures correct video size.\n          ...this._browserContext._options.recordVideo!.size!,\n          outputFile,\n        });\n      }));\n    }\n    await Promise.all(promises);\n  }\n\n  private _setSession(session: WKSession) {\n    eventsHelper.removeEventListeners(this._sessionListeners);\n    this._session = session;\n    this.rawKeyboard.setSession(session);\n    this.rawMouse.setSession(session);\n    this._addSessionListeners();\n    this._workers.setSession(session);\n  }\n\n  // This method is called for provisional targets as well. The session passed as the parameter\n  // may be different from the current session and may be destroyed without becoming current.\n  async _initializeSession(session: WKSession, provisional: boolean, resourceTreeHandler: (r: Protocol.Page.getResourceTreeReturnValue) => void) {\n    await this._initializeSessionMayThrow(session, resourceTreeHandler).catch(e => {\n      // Provisional session can be disposed at any time, for example due to new navigation initiating\n      // a new provisional page.\n      if (provisional && session.isDisposed())\n        return;\n      // Swallow initialization errors due to newer target swap in,\n      // since we will reinitialize again.\n      if (this._session === session)\n        throw e;\n    });\n  }\n\n  private async _initializeSessionMayThrow(session: WKSession, resourceTreeHandler: (r: Protocol.Page.getResourceTreeReturnValue) => void) {\n    const [, frameTree] = await Promise.all([\n      // Page agent must be enabled before Runtime.\n      session.send('Page.enable'),\n      session.send('Page.getResourceTree'),\n    ] as const);\n    resourceTreeHandler(frameTree);\n    const promises: Promise<any>[] = [\n      // Resource tree should be received before first execution context.\n      session.send('Runtime.enable'),\n      session.send('Page.createUserWorld', { name: UTILITY_WORLD_NAME }).catch(_ => {}),  // Worlds are per-process\n      session.send('Console.enable'),\n      session.send('Network.enable'),\n      this._workers.initializeSession(session)\n    ];\n    if (this._page.browserContext.needsPlaywrightBinding())\n      promises.push(session.send('Runtime.addBinding', { name: PageBinding.kBindingName }));\n    if (this._page.needsRequestInterception()) {\n      promises.push(session.send('Network.setInterceptionEnabled', { enabled: true }));\n      promises.push(session.send('Network.setResourceCachingDisabled', { disabled: true }));\n      promises.push(session.send('Network.addInterception', { url: '.*', stage: 'request', isRegex: true }));\n    }\n    if (this._page.isStorageStatePage) {\n      await Promise.all(promises);\n      return;\n    }\n\n    const contextOptions = this._browserContext._options;\n    if (contextOptions.userAgent)\n      promises.push(this.updateUserAgent());\n    const emulatedMedia = this._page.emulatedMedia();\n    if (emulatedMedia.media || emulatedMedia.colorScheme || emulatedMedia.reducedMotion || emulatedMedia.forcedColors || emulatedMedia.contrast)\n      promises.push(WKPage._setEmulateMedia(session, emulatedMedia.media, emulatedMedia.colorScheme, emulatedMedia.reducedMotion, emulatedMedia.forcedColors, emulatedMedia.contrast));\n    const bootstrapScript = this._calculateBootstrapScript();\n    if (bootstrapScript.length)\n      promises.push(session.send('Page.setBootstrapScript', { source: bootstrapScript }));\n    this._page.frames().map(frame => frame.evaluateExpression(bootstrapScript).catch(e => {}));\n    if (contextOptions.bypassCSP)\n      promises.push(session.send('Page.setBypassCSP', { enabled: true }));\n    const emulatedSize = this._page.emulatedSize();\n    if (emulatedSize) {\n      promises.push(session.send('Page.setScreenSizeOverride', {\n        width: emulatedSize.screen.width,\n        height: emulatedSize.screen.height,\n      }));\n    }\n    promises.push(this.updateEmulateMedia());\n    promises.push(session.send('Network.setExtraHTTPHeaders', { headers: headersArrayToObject(this._calculateExtraHTTPHeaders(), false /* lowerCase */) }));\n    if (contextOptions.offline)\n      promises.push(session.send('Network.setEmulateOfflineState', { offline: true }));\n    promises.push(session.send('Page.setTouchEmulationEnabled', { enabled: !!contextOptions.hasTouch }));\n    if (contextOptions.timezoneId) {\n      promises.push(session.send('Page.setTimeZone', { timeZone: contextOptions.timezoneId }).\n          catch(e => { throw new Error(`Invalid timezone ID: ${contextOptions.timezoneId}`); }));\n    }\n    if (this._page.fileChooserIntercepted())\n      promises.push(session.send('Page.setInterceptFileChooserDialog', { enabled: true }));\n    promises.push(session.send('Page.overrideSetting', { setting: 'DeviceOrientationEventEnabled', value: contextOptions.isMobile }));\n    promises.push(session.send('Page.overrideSetting', { setting: 'FullScreenEnabled', value: !contextOptions.isMobile }));\n    promises.push(session.send('Page.overrideSetting', { setting: 'NotificationsEnabled', value: !contextOptions.isMobile }));\n    promises.push(session.send('Page.overrideSetting', { setting: 'PointerLockEnabled', value: !contextOptions.isMobile }));\n    promises.push(session.send('Page.overrideSetting', { setting: 'InputTypeMonthEnabled', value: contextOptions.isMobile }));\n    promises.push(session.send('Page.overrideSetting', { setting: 'InputTypeWeekEnabled', value: contextOptions.isMobile }));\n    promises.push(session.send('Page.overrideSetting', { setting: 'FixedBackgroundsPaintRelativeToDocument', value: contextOptions.isMobile }));\n    await Promise.all(promises);\n  }\n\n  private _onDidCommitProvisionalTarget(event: Protocol.Target.didCommitProvisionalTargetPayload) {\n    const { oldTargetId, newTargetId } = event;\n    assert(this._provisionalPage);\n    assert(this._provisionalPage._session.sessionId === newTargetId, 'Unknown new target: ' + newTargetId);\n    assert(this._session.sessionId === oldTargetId, 'Unknown old target: ' + oldTargetId);\n    const newSession = this._provisionalPage._session;\n    this._provisionalPage.commit();\n    this._provisionalPage.dispose();\n    this._provisionalPage = null;\n    this._setSession(newSession);\n  }\n\n  private _onTargetDestroyed(event: Protocol.Target.targetDestroyedPayload) {\n    const { targetId, crashed } = event;\n    if (this._provisionalPage && this._provisionalPage._session.sessionId === targetId) {\n      this._maybeCancelCoopNavigationRequest(this._provisionalPage);\n      this._provisionalPage._session.dispose();\n      this._provisionalPage.dispose();\n      this._provisionalPage = null;\n    } else if (this._session.sessionId === targetId) {\n      this._session.dispose();\n      eventsHelper.removeEventListeners(this._sessionListeners);\n      if (crashed) {\n        this._session.markAsCrashed();\n        this._page._didCrash();\n      }\n    }\n  }\n\n  didClose() {\n    this._pageProxySession.dispose();\n    eventsHelper.removeEventListeners(this._sessionListeners);\n    eventsHelper.removeEventListeners(this._eventListeners);\n    if (this._session)\n      this._session.dispose();\n    if (this._provisionalPage) {\n      this._provisionalPage._session.dispose();\n      this._provisionalPage.dispose();\n      this._provisionalPage = null;\n    }\n    this._firstNonInitialNavigationCommittedReject(new TargetClosedError());\n    this._page._didClose();\n  }\n\n  dispatchMessageToSession(message: any) {\n    this._pageProxySession.dispatchMessage(message);\n  }\n\n  handleProvisionalLoadFailed(event: Protocol.Playwright.provisionalLoadFailedPayload) {\n    if (!this._page.initializedOrUndefined()) {\n      this._firstNonInitialNavigationCommittedReject(new Error('Initial load failed'));\n      return;\n    }\n    if (!this._provisionalPage)\n      return;\n    let errorText = event.error;\n    if (errorText.includes('cancelled'))\n      errorText += '; maybe frame was detached?';\n    this._page.frameManager.frameAbortedNavigation(this._page.mainFrame()._id, errorText, event.loaderId);\n  }\n\n  handleWindowOpen(event: Protocol.Playwright.windowOpenPayload) {\n    this._nextWindowOpenPopupFeatures = event.windowFeatures;\n  }\n\n  private async _onTargetCreated(event: Protocol.Target.targetCreatedPayload) {\n    const { targetInfo } = event;\n    const session = new WKSession(this._pageProxySession.connection, targetInfo.targetId, (message: any) => {\n      this._pageProxySession.send('Target.sendMessageToTarget', {\n        message: JSON.stringify(message), targetId: targetInfo.targetId\n      }).catch(e => {\n        session.dispatchMessage({ id: message.id, error: { message: e.message } });\n      });\n    });\n    assert(targetInfo.type === 'page', 'Only page targets are expected in WebKit, received: ' + targetInfo.type);\n\n    if (!targetInfo.isProvisional) {\n      assert(!this._page.initializedOrUndefined());\n      let pageOrError: Page | Error;\n      try {\n        this._setSession(session);\n        await Promise.all([\n          this._initializePageProxySession(),\n          this._initializeSession(session, false, ({ frameTree }) => this._handleFrameTree(frameTree)),\n        ]);\n        pageOrError = this._page;\n      } catch (e) {\n        pageOrError = e;\n      }\n\n      if (targetInfo.isPaused)\n        this._pageProxySession.sendMayFail('Target.resume', { targetId: targetInfo.targetId });\n      if ((pageOrError instanceof Page) && this._page.mainFrame().url() === '') {\n        try {\n          // Initial empty page has an empty url. We should wait until the first real url has been loaded,\n          // even if that url is about:blank. This is especially important for popups, where we need the\n          // actual url before interacting with it.\n          await this._firstNonInitialNavigationCommittedPromise;\n        } catch (e) {\n          pageOrError = e;\n        }\n      }\n      this._page.reportAsNew(this._opener?._page, pageOrError instanceof Page ? undefined : pageOrError);\n    } else {\n      assert(targetInfo.isProvisional);\n      assert(!this._provisionalPage);\n      this._provisionalPage = new WKProvisionalPage(session, this);\n      if (targetInfo.isPaused) {\n        this._provisionalPage.initializationPromise.then(() => {\n          this._pageProxySession.sendMayFail('Target.resume', { targetId: targetInfo.targetId });\n        });\n      }\n    }\n  }\n\n  private _onDispatchMessageFromTarget(event: Protocol.Target.dispatchMessageFromTargetPayload) {\n    const { targetId, message } = event;\n    if (this._provisionalPage && this._provisionalPage._session.sessionId === targetId)\n      this._provisionalPage._session.dispatchMessage(JSON.parse(message));\n    else if (this._session.sessionId === targetId)\n      this._session.dispatchMessage(JSON.parse(message));\n    else\n      throw new Error('Unknown target: ' + targetId);\n  }\n\n  private _addSessionListeners() {\n    this._sessionListeners = [\n      eventsHelper.addEventListener(this._session, 'Page.frameNavigated', event => this._onFrameNavigated(event.frame, false)),\n      eventsHelper.addEventListener(this._session, 'Page.navigatedWithinDocument', event => this._onFrameNavigatedWithinDocument(event.frameId, event.url)),\n      eventsHelper.addEventListener(this._session, 'Page.frameAttached', event => this._onFrameAttached(event.frameId, event.parentFrameId)),\n      eventsHelper.addEventListener(this._session, 'Page.frameDetached', event => this._onFrameDetached(event.frameId)),\n      eventsHelper.addEventListener(this._session, 'Page.willCheckNavigationPolicy', event => this._onWillCheckNavigationPolicy(event.frameId)),\n      eventsHelper.addEventListener(this._session, 'Page.didCheckNavigationPolicy', event => this._onDidCheckNavigationPolicy(event.frameId, event.cancel)),\n      eventsHelper.addEventListener(this._session, 'Page.frameScheduledNavigation', event => this._onFrameScheduledNavigation(event.frameId, event.delay, event.targetIsCurrentFrame)),\n      eventsHelper.addEventListener(this._session, 'Page.loadEventFired', event => this._page.frameManager.frameLifecycleEvent(event.frameId, 'load')),\n      eventsHelper.addEventListener(this._session, 'Page.domContentEventFired', event => this._page.frameManager.frameLifecycleEvent(event.frameId, 'domcontentloaded')),\n      eventsHelper.addEventListener(this._session, 'Runtime.executionContextCreated', event => this._onExecutionContextCreated(event.context)),\n      eventsHelper.addEventListener(this._session, 'Runtime.bindingCalled', event => this._onBindingCalled(event.contextId, event.argument)),\n      eventsHelper.addEventListener(this._session, 'Console.messageAdded', event => this._onConsoleMessage(event)),\n      eventsHelper.addEventListener(this._session, 'Console.messageRepeatCountUpdated', event => this._onConsoleRepeatCountUpdated(event)),\n      eventsHelper.addEventListener(this._pageProxySession, 'Dialog.javascriptDialogOpening', event => this._onDialog(event)),\n      eventsHelper.addEventListener(this._session, 'Page.fileChooserOpened', event => this._onFileChooserOpened(event)),\n      eventsHelper.addEventListener(this._session, 'Network.requestWillBeSent', e => this._onRequestWillBeSent(this._session, e)),\n      eventsHelper.addEventListener(this._session, 'Network.requestIntercepted', e => this._onRequestIntercepted(this._session, e)),\n      eventsHelper.addEventListener(this._session, 'Network.responseReceived', e => this._onResponseReceived(this._session, e)),\n      eventsHelper.addEventListener(this._session, 'Network.loadingFinished', e => this._onLoadingFinished(e)),\n      eventsHelper.addEventListener(this._session, 'Network.loadingFailed', e => this._onLoadingFailed(this._session, e)),\n      eventsHelper.addEventListener(this._session, 'Network.webSocketCreated', e => this._page.frameManager.onWebSocketCreated(e.requestId, e.url)),\n      eventsHelper.addEventListener(this._session, 'Network.webSocketWillSendHandshakeRequest', e => this._page.frameManager.onWebSocketRequest(e.requestId)),\n      eventsHelper.addEventListener(this._session, 'Network.webSocketHandshakeResponseReceived', e => this._page.frameManager.onWebSocketResponse(e.requestId, e.response.status, e.response.statusText)),\n      eventsHelper.addEventListener(this._session, 'Network.webSocketFrameSent', e => e.response.payloadData && this._page.frameManager.onWebSocketFrameSent(e.requestId, e.response.opcode, e.response.payloadData)),\n      eventsHelper.addEventListener(this._session, 'Network.webSocketFrameReceived', e => e.response.payloadData && this._page.frameManager.webSocketFrameReceived(e.requestId, e.response.opcode, e.response.payloadData)),\n      eventsHelper.addEventListener(this._session, 'Network.webSocketClosed', e => this._page.frameManager.webSocketClosed(e.requestId)),\n      eventsHelper.addEventListener(this._session, 'Network.webSocketFrameError', e => this._page.frameManager.webSocketError(e.requestId, e.errorMessage)),\n    ];\n  }\n  private async _updateState<T extends keyof Protocol.CommandParameters>(\n    method: T,\n    params?: Protocol.CommandParameters[T]\n  ): Promise<void> {\n    await this._forAllSessions(session => session.send(method, params).then());\n  }\n\n  private async _forAllSessions(callback: ((session: WKSession) => Promise<void>)): Promise<void> {\n    const sessions = [\n      this._session\n    ];\n    // If the state changes during provisional load, push it to the provisional page\n    // as well to always be in sync with the backend.\n    if (this._provisionalPage)\n      sessions.push(this._provisionalPage._session);\n    await Promise.all(sessions.map(session => callback(session).catch(e => {})));\n  }\n\n  private _onWillCheckNavigationPolicy(frameId: string) {\n    // It may happen that new policy check occurs while there is an ongoing\n    // provisional load, in this case it should be safe to ignore it as it will\n    // either:\n    // - end up canceled, e.g. ctrl+click opening link in new tab, having no effect\n    //   on this page\n    // - start new provisional load which we will miss in our signal trackers but\n    //   we certainly won't hang waiting for it to finish and there is high chance\n    //   that the current provisional page will commit navigation canceling the new\n    //   one.\n    if (this._provisionalPage)\n      return;\n    this._page.frameManager.frameRequestedNavigation(frameId);\n  }\n\n  private _onDidCheckNavigationPolicy(frameId: string, cancel?: boolean) {\n    if (!cancel)\n      return;\n    // This is a cross-process navigation that is canceled in the original page and continues in\n    // the provisional page. Bail out as we are tracking it.\n    if (this._provisionalPage)\n      return;\n    this._page.frameManager.frameAbortedNavigation(frameId, 'Navigation canceled by policy check');\n  }\n\n  private _onFrameScheduledNavigation(frameId: string, delay: number, targetIsCurrentFrame: boolean) {\n    if (targetIsCurrentFrame)\n      this._page.frameManager.frameRequestedNavigation(frameId);\n  }\n\n  private _handleFrameTree(frameTree: Protocol.Page.FrameResourceTree) {\n    this._onFrameAttached(frameTree.frame.id, frameTree.frame.parentId || null);\n    this._onFrameNavigated(frameTree.frame, true);\n    this._page.frameManager.frameLifecycleEvent(frameTree.frame.id, 'domcontentloaded');\n    this._page.frameManager.frameLifecycleEvent(frameTree.frame.id, 'load');\n\n    if (!frameTree.childFrames)\n      return;\n    for (const child of frameTree.childFrames)\n      this._handleFrameTree(child);\n  }\n\n  _onFrameAttached(frameId: string, parentFrameId: string | null): frames.Frame {\n    return this._page.frameManager.frameAttached(frameId, parentFrameId);\n  }\n\n  private _onFrameNavigated(framePayload: Protocol.Page.Frame, initial: boolean) {\n    const frame = this._page.frameManager.frame(framePayload.id);\n    assert(frame);\n    this._removeContextsForFrame(frame, true);\n    if (!framePayload.parentId)\n      this._workers.clear();\n    this._page.frameManager.frameCommittedNewDocumentNavigation(framePayload.id, framePayload.url, framePayload.name || '', framePayload.loaderId, initial);\n    if (!initial)\n      this._firstNonInitialNavigationCommittedFulfill();\n  }\n\n  private _onFrameNavigatedWithinDocument(frameId: string, url: string) {\n    this._page.frameManager.frameCommittedSameDocumentNavigation(frameId, url);\n  }\n\n  private _onFrameDetached(frameId: string) {\n    this._page.frameManager.frameDetached(frameId);\n  }\n\n  private _removeContextsForFrame(frame: frames.Frame, notifyFrame: boolean) {\n    for (const [contextId, context] of this._contextIdToContext) {\n      if (context.frame === frame) {\n        this._contextIdToContext.delete(contextId);\n        if (notifyFrame)\n          frame._contextDestroyed(context);\n      }\n    }\n  }\n\n  private _onExecutionContextCreated(contextPayload: Protocol.Runtime.ExecutionContextDescription) {\n    if (this._contextIdToContext.has(contextPayload.id))\n      return;\n    const frame = this._page.frameManager.frame(contextPayload.frameId);\n    if (!frame)\n      return;\n    const delegate = new WKExecutionContext(this._session, contextPayload.id);\n    let worldName: types.World|null = null;\n    if (contextPayload.type === 'normal')\n      worldName = 'main';\n    else if (contextPayload.type === 'user' && contextPayload.name === UTILITY_WORLD_NAME)\n      worldName = 'utility';\n    const context = new dom.FrameExecutionContext(delegate, frame, worldName);\n    if (worldName)\n      frame._contextCreated(worldName, context);\n    this._contextIdToContext.set(contextPayload.id, context);\n  }\n\n  private async _onBindingCalled(contextId: Protocol.Runtime.ExecutionContextId, argument: string) {\n    const pageOrError = await this._page.waitForInitializedOrError();\n    if (!(pageOrError instanceof Error)) {\n      const context = this._contextIdToContext.get(contextId);\n      if (context)\n        await this._page.onBindingCalled(argument, context);\n    }\n  }\n\n  async navigateFrame(frame: frames.Frame, url: string, referrer: string | undefined): Promise<frames.GotoResult> {\n    if (this._pageProxySession.isDisposed())\n      throw new TargetClosedError();\n    const pageProxyId = this._pageProxySession.sessionId;\n    const result = await this._pageProxySession.connection.browserSession.send('Playwright.navigate', { url, pageProxyId, frameId: frame._id, referrer });\n    return { newDocumentId: result.loaderId };\n  }\n\n  private _onConsoleMessage(event: Protocol.Console.messageAddedPayload) {\n    // Note: do no introduce await in this function, otherwise we lose the ordering.\n    // For example, frame.setContent relies on this.\n    const { type, level, text, parameters, url, line: lineNumber, column: columnNumber, source } = event.message;\n    if (level === 'error' && source === 'javascript') {\n      const { name, message } = splitErrorMessage(text);\n\n      let stack: string;\n      if (event.message.stackTrace) {\n        stack = text + '\\n' + event.message.stackTrace.callFrames.map(callFrame => {\n          return `    at ${callFrame.functionName || 'unknown'} (${callFrame.url}:${callFrame.lineNumber}:${callFrame.columnNumber})`;\n        }).join('\\n');\n      } else {\n        stack = '';\n      }\n\n      this._lastConsoleMessage = null;\n      const error = new Error(message);\n      error.stack = stack;\n      error.name = name;\n\n      this._page.emitOnContextOnceInitialized(BrowserContext.Events.PageError, error, this._page);\n      return;\n    }\n\n    let derivedType: string = type || '';\n    if (type === 'log')\n      derivedType = level;\n    else if (type === 'timing')\n      derivedType = 'timeEnd';\n\n    const handles: JSHandle[] = [];\n    for (const p of parameters || []) {\n      let context: dom.FrameExecutionContext | undefined;\n      if (p.objectId) {\n        const objectId = JSON.parse(p.objectId);\n        context = this._contextIdToContext.get(objectId.injectedScriptId);\n      } else {\n        // Pick any context if the parameter is a value.\n        context = [...this._contextIdToContext.values()].find(c => c.frame === this._page.mainFrame());\n      }\n      if (!context)\n        return;\n      handles.push(createHandle(context, p));\n    }\n    this._lastConsoleMessage = {\n      derivedType,\n      text,\n      handles,\n      count: 0,\n      location: {\n        url: url || '',\n        lineNumber: (lineNumber || 1) - 1,\n        columnNumber: (columnNumber || 1) - 1,\n      }\n    };\n    this._onConsoleRepeatCountUpdated({ count: 1 });\n  }\n\n  _onConsoleRepeatCountUpdated(event: Protocol.Console.messageRepeatCountUpdatedPayload) {\n    if (this._lastConsoleMessage) {\n      const {\n        derivedType,\n        text,\n        handles,\n        count,\n        location\n      } = this._lastConsoleMessage;\n      for (let i = count; i < event.count; ++i)\n        this._page.addConsoleMessage(derivedType, handles, location, handles.length ? undefined : text);\n      this._lastConsoleMessage.count = event.count;\n    }\n  }\n\n  _onDialog(event: Protocol.Dialog.javascriptDialogOpeningPayload) {\n    this._page.browserContext.dialogManager.dialogDidOpen(new dialog.Dialog(\n        this._page,\n        event.type as dialog.DialogType,\n        event.message,\n        async (accept: boolean, promptText?: string) => {\n          // TODO: this should actually be a RDP event that notifies about a cancelled navigation attempt.\n          if (event.type === 'beforeunload' && !accept)\n            this._page.frameManager.frameAbortedNavigation(this._page.mainFrame()._id, 'navigation cancelled by beforeunload dialog');\n          await this._pageProxySession.send('Dialog.handleJavaScriptDialog', { accept, promptText });\n        },\n        event.defaultPrompt));\n  }\n\n  private async _onFileChooserOpened(event: {frameId: Protocol.Network.FrameId, element: Protocol.Runtime.RemoteObject}) {\n    let handle;\n    try {\n      const context = await this._page.frameManager.frame(event.frameId)!._mainContext();\n      handle =  createHandle(context, event.element).asElement()!;\n    } catch (e) {\n      // During async processing, frame/context may go away. We should not throw.\n      return;\n    }\n    await this._page._onFileChooserOpened(handle);\n  }\n\n  private static async _setEmulateMedia(session: WKSession, mediaType: types.MediaType, colorScheme: types.ColorScheme, reducedMotion: types.ReducedMotion, forcedColors: types.ForcedColors, contrast: types.Contrast): Promise<void> {\n    const promises = [];\n    promises.push(session.send('Page.setEmulatedMedia', { media: mediaType === 'no-override' ? '' : mediaType }));\n    let appearance: any = undefined;\n    switch (colorScheme) {\n      case 'light': appearance = 'Light'; break;\n      case 'dark': appearance = 'Dark'; break;\n      case 'no-override': appearance = undefined; break;\n    }\n    promises.push(session.send('Page.overrideUserPreference', { name: 'PrefersColorScheme', value: appearance }));\n    let reducedMotionWk: any = undefined;\n    switch (reducedMotion) {\n      case 'reduce': reducedMotionWk = 'Reduce'; break;\n      case 'no-preference': reducedMotionWk = 'NoPreference'; break;\n      case 'no-override': reducedMotionWk = undefined; break;\n    }\n    promises.push(session.send('Page.overrideUserPreference', { name: 'PrefersReducedMotion', value: reducedMotionWk }));\n    let forcedColorsWk: any = undefined;\n    switch (forcedColors) {\n      case 'active': forcedColorsWk = 'Active'; break;\n      case 'none': forcedColorsWk = 'None'; break;\n      case 'no-override': forcedColorsWk = undefined; break;\n    }\n    promises.push(session.send('Page.setForcedColors', { forcedColors: forcedColorsWk }));\n    let contrastWk: any = undefined;\n    switch (contrast) {\n      case 'more': contrastWk = 'More'; break;\n      case 'no-preference': contrastWk = 'NoPreference'; break;\n      case 'no-override': contrastWk = undefined; break;\n    }\n    promises.push(session.send('Page.overrideUserPreference', { name: 'PrefersContrast', value: contrastWk }));\n    await Promise.all(promises);\n  }\n\n  async updateExtraHTTPHeaders(): Promise<void> {\n    await this._updateState('Network.setExtraHTTPHeaders', { headers: headersArrayToObject(this._calculateExtraHTTPHeaders(), false /* lowerCase */) });\n  }\n\n  _calculateExtraHTTPHeaders(): types.HeadersArray {\n    const locale = this._browserContext._options.locale;\n    const headers = network.mergeHeaders([\n      this._browserContext._options.extraHTTPHeaders,\n      this._page.extraHTTPHeaders(),\n      locale ? network.singleHeader('Accept-Language', locale) : undefined,\n    ]);\n    return headers;\n  }\n\n  async updateEmulateMedia(): Promise<void> {\n    const emulatedMedia = this._page.emulatedMedia();\n    const colorScheme = emulatedMedia.colorScheme;\n    const reducedMotion = emulatedMedia.reducedMotion;\n    const forcedColors = emulatedMedia.forcedColors;\n    const contrast = emulatedMedia.contrast;\n    await this._forAllSessions(session => WKPage._setEmulateMedia(session, emulatedMedia.media, colorScheme, reducedMotion, forcedColors, contrast));\n  }\n\n  async updateEmulatedViewportSize(): Promise<void> {\n    this._browserContext._validateEmulatedViewport(this._page.emulatedSize()?.viewport);\n    await this._updateViewport();\n  }\n\n  async updateUserAgent(): Promise<void> {\n    const contextOptions = this._browserContext._options;\n    this._updateState('Page.overrideUserAgent', { value: contextOptions.userAgent });\n  }\n\n  async bringToFront(): Promise<void> {\n    this._pageProxySession.send('Target.activate', {\n      targetId: this._session.sessionId\n    });\n  }\n\n  async _updateViewport(): Promise<void> {\n    const options = this._browserContext._options;\n    const emulatedSize = this._page.emulatedSize();\n    if (!emulatedSize)\n      return;\n    const viewportSize = emulatedSize.viewport;\n    const screenSize = emulatedSize.screen;\n    const promises: Promise<any>[] = [\n      this._pageProxySession.send('Emulation.setDeviceMetricsOverride', {\n        width: viewportSize.width,\n        height: viewportSize.height,\n        fixedLayout: !!options.isMobile,\n        deviceScaleFactor: options.deviceScaleFactor || 1\n      }),\n      this._session.send('Page.setScreenSizeOverride', {\n        width: screenSize.width,\n        height: screenSize.height,\n      }),\n    ];\n    if (options.isMobile) {\n      const angle = viewportSize.width > viewportSize.height ? 90 : 0;\n      promises.push(this._pageProxySession.send('Emulation.setOrientationOverride', { angle }));\n    }\n    await Promise.all(promises);\n\n    // WPE WebKit is failing in mesa due to a race condition if we start interacting\n    // with the page too quickly.\n    if (!this._browserContext._browser?.options.headful && (hostPlatform === 'ubuntu22.04-x64' || hostPlatform.startsWith('debian12')))\n      await new Promise(r => setTimeout(r, 500));\n  }\n\n  async updateRequestInterception(): Promise<void> {\n    const enabled = this._page.needsRequestInterception();\n    await Promise.all([\n      this._updateState('Network.setInterceptionEnabled', { enabled }),\n      this._updateState('Network.setResourceCachingDisabled', { disabled: enabled }),\n      this._updateState('Network.addInterception', { url: '.*', stage: 'request', isRegex: true }),\n    ]);\n  }\n\n  async updateOffline() {\n    await this._updateState('Network.setEmulateOfflineState', { offline: !!this._browserContext._options.offline });\n  }\n\n  async updateHttpCredentials() {\n    const credentials = this._browserContext._options.httpCredentials || { username: '', password: '', origin: '' };\n    await this._pageProxySession.send('Emulation.setAuthCredentials', { username: credentials.username, password: credentials.password, origin: credentials.origin });\n  }\n\n  async updateFileChooserInterception() {\n    const enabled = this._page.fileChooserIntercepted();\n    await this._session.send('Page.setInterceptFileChooserDialog', { enabled }).catch(() => {}); // target can be closed.\n  }\n\n  async reload(): Promise<void> {\n    await this._session.send('Page.reload');\n  }\n\n  goBack(): Promise<boolean> {\n    return this._session.send('Page.goBack').then(() => true).catch(error => {\n      if (error instanceof Error && error.message.includes(`Protocol error (Page.goBack): Failed to go`))\n        return false;\n      throw error;\n    });\n  }\n\n  goForward(): Promise<boolean> {\n    return this._session.send('Page.goForward').then(() => true).catch(error => {\n      if (error instanceof Error && error.message.includes(`Protocol error (Page.goForward): Failed to go`))\n        return false;\n      throw error;\n    });\n  }\n\n  async requestGC(): Promise<void> {\n    await this._session.send('Heap.gc');\n  }\n\n  async addInitScript(initScript: InitScript): Promise<void> {\n    await this._updateBootstrapScript();\n  }\n\n  async removeInitScripts(initScripts: InitScript[]): Promise<void> {\n    await this._updateBootstrapScript();\n  }\n\n  async exposePlaywrightBinding() {\n    await this._updateState('Runtime.addBinding', { name: PageBinding.kBindingName });\n  }\n\n  private _calculateBootstrapScript(): string {\n    const scripts: string[] = [];\n    if (!this._page.browserContext._options.isMobile) {\n      scripts.push('delete window.orientation');\n      scripts.push('delete window.ondevicemotion');\n      scripts.push('delete window.ondeviceorientation');\n    }\n    scripts.push('if (!window.safari) window.safari = { pushNotification: { toString() { return \"[object SafariRemoteNotification]\"; } } };');\n    scripts.push('if (!window.GestureEvent) window.GestureEvent = function GestureEvent() {};');\n    scripts.push(this._publicKeyCredentialScript());\n    scripts.push(...this._page.allInitScripts().map(script => script.source));\n    return scripts.join(';\\n');\n  }\n\n  private _publicKeyCredentialScript(): string {\n    function polyfill() {\n      /**\n       * Some sites don't check existance of PublicKeyCredentials because all browsers except Webkit on Linux implement it.\n       * We polyfill the subset that's used for feature detection, so that login flows that'd work in Safari don't crash with \"PublicKeyCredential is not defined\" in CI.\n       * https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential\n       */\n      window.PublicKeyCredential ??= {\n        async getClientCapabilities() {\n          return {};\n        },\n        async isConditionalMediationAvailable() {\n          return false;\n        },\n        async isUserVerifyingPlatformAuthenticatorAvailable() {\n          return false;\n        },\n      } as any;\n    }\n    return `(${polyfill.toString()})();`;\n  }\n\n  async _updateBootstrapScript(): Promise<void> {\n    await this._updateState('Page.setBootstrapScript', { source: this._calculateBootstrapScript() });\n  }\n\n  async closePage(runBeforeUnload: boolean): Promise<void> {\n    await this._stopVideo();\n    await this._pageProxySession.sendMayFail('Target.close', {\n      targetId: this._session.sessionId,\n      runBeforeUnload\n    });\n  }\n\n  async setBackgroundColor(color?: { r: number; g: number; b: number; a: number; }): Promise<void> {\n    await this._session.send('Page.setDefaultBackgroundColorOverride', { color });\n  }\n\n  private _toolbarHeight(): number {\n    if (this._page.browserContext._browser?.options.headful)\n      return hostPlatform === 'mac10.15' ? 55 : 59;\n    return 0;\n  }\n\n  private async _startVideo(options: types.PageScreencastOptions): Promise<void> {\n    assert(!this._recordingVideoFile);\n    const { screencastId } = await this._pageProxySession.send('Screencast.startVideo', {\n      file: options.outputFile,\n      width: options.width,\n      height: options.height,\n      toolbarHeight: this._toolbarHeight()\n    });\n    this._recordingVideoFile = options.outputFile;\n    this._browserContext._browser._videoStarted(this._browserContext, screencastId, options.outputFile, this._page.waitForInitializedOrError());\n  }\n\n  async _stopVideo(): Promise<void> {\n    if (!this._recordingVideoFile)\n      return;\n    await this._pageProxySession.sendMayFail('Screencast.stopVideo');\n    this._recordingVideoFile = null;\n  }\n\n  private validateScreenshotDimension(side: number, omitDeviceScaleFactor: boolean) {\n    // Cairo based implementations (Linux and Windows) have hard limit of 32767\n    // (see https://github.com/microsoft/playwright/issues/16727).\n    if (process.platform === 'darwin')\n      return;\n    if (!omitDeviceScaleFactor && this._page.browserContext._options.deviceScaleFactor)\n      side = Math.ceil(side * this._page.browserContext._options.deviceScaleFactor);\n    if (side > 32767)\n      throw new Error('Cannot take screenshot larger than 32767 pixels on any dimension');\n  }\n\n  async takeScreenshot(progress: Progress, format: string, documentRect: types.Rect | undefined, viewportRect: types.Rect | undefined, quality: number | undefined, fitsViewport: boolean, scale: 'css' | 'device'): Promise<Buffer> {\n    const rect = (documentRect || viewportRect)!;\n    const omitDeviceScaleFactor = scale === 'css';\n    this.validateScreenshotDimension(rect.width, omitDeviceScaleFactor);\n    this.validateScreenshotDimension(rect.height, omitDeviceScaleFactor);\n    const result = await progress.race(this._session.send('Page.snapshotRect', { ...rect, coordinateSystem: documentRect ? 'Page' : 'Viewport', omitDeviceScaleFactor }));\n    const prefix = 'data:image/png;base64,';\n    let buffer: Buffer = Buffer.from(result.dataURL.substr(prefix.length), 'base64');\n    if (format === 'jpeg')\n      buffer = jpegjs.encode(PNG.sync.read(buffer), quality).data;\n    return buffer;\n  }\n\n  async getContentFrame(handle: dom.ElementHandle): Promise<frames.Frame | null> {\n    const nodeInfo = await this._session.send('DOM.describeNode', {\n      objectId: handle._objectId\n    });\n    if (!nodeInfo.contentFrameId)\n      return null;\n    return this._page.frameManager.frame(nodeInfo.contentFrameId);\n  }\n\n  async getOwnerFrame(handle: dom.ElementHandle): Promise<string | null> {\n    if (!handle._objectId)\n      return null;\n    const nodeInfo = await this._session.send('DOM.describeNode', {\n      objectId: handle._objectId\n    });\n    return nodeInfo.ownerFrameId || null;\n  }\n\n  async getBoundingBox(handle: dom.ElementHandle): Promise<types.Rect | null> {\n    const quads = await this.getContentQuads(handle);\n    if (!quads || !quads.length)\n      return null;\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for (const quad of quads) {\n      for (const point of quad) {\n        minX = Math.min(minX, point.x);\n        maxX = Math.max(maxX, point.x);\n        minY = Math.min(minY, point.y);\n        maxY = Math.max(maxY, point.y);\n      }\n    }\n    return { x: minX, y: minY, width: maxX - minX, height: maxY - minY };\n  }\n\n  async scrollRectIntoViewIfNeeded(handle: dom.ElementHandle, rect?: types.Rect): Promise<'error:notvisible' | 'error:notconnected' | 'done'> {\n    return await this._session.send('DOM.scrollIntoViewIfNeeded', {\n      objectId: handle._objectId,\n      rect,\n    }).then(() => 'done' as const).catch(e => {\n      if (e instanceof Error && e.message.includes('Node does not have a layout object'))\n        return 'error:notvisible';\n      if (e instanceof Error && e.message.includes('Node is detached from document'))\n        return 'error:notconnected';\n      throw e;\n    });\n  }\n\n  async setScreencastOptions(options: { width: number, height: number, quality: number } | null): Promise<void> {\n    if (options) {\n      const so = { ...options, toolbarHeight: this._toolbarHeight() };\n      const { generation } = await this._pageProxySession.send('Screencast.startScreencast', so);\n      this._screencastGeneration = generation;\n    } else {\n      await this._pageProxySession.send('Screencast.stopScreencast');\n    }\n  }\n\n  private _onScreencastFrame(event: Protocol.Screencast.screencastFramePayload) {\n    const generation = this._screencastGeneration;\n    this._page.throttleScreencastFrameAck(() => {\n      this._pageProxySession.send('Screencast.screencastFrameAck', { generation }).catch(e => debugLogger.log('error', e));\n    });\n    const buffer = Buffer.from(event.data, 'base64');\n    this._page.emit(Page.Events.ScreencastFrame, {\n      buffer,\n      width: event.deviceWidth,\n      height: event.deviceHeight,\n    });\n  }\n\n  rafCountForStablePosition(): number {\n    return process.platform === 'win32' ? 5 : 1;\n  }\n\n  async getContentQuads(handle: dom.ElementHandle): Promise<types.Quad[] | null> {\n    const result = await this._session.sendMayFail('DOM.getContentQuads', {\n      objectId: handle._objectId\n    });\n    if (!result)\n      return null;\n    return result.quads.map(quad => [\n      { x: quad[0], y: quad[1] },\n      { x: quad[2], y: quad[3] },\n      { x: quad[4], y: quad[5] },\n      { x: quad[6], y: quad[7] }\n    ]);\n  }\n\n  async setInputFilePaths(handle: dom.ElementHandle<HTMLInputElement>, paths: string[]): Promise<void> {\n    const pageProxyId = this._pageProxySession.sessionId;\n    const objectId = handle._objectId;\n    await Promise.all([\n      this._pageProxySession.connection.browserSession.send('Playwright.grantFileReadAccess', { pageProxyId, paths }),\n      this._session.send('DOM.setInputFiles', { objectId, paths })\n    ]);\n  }\n\n  async adoptElementHandle<T extends Node>(handle: dom.ElementHandle<T>, to: dom.FrameExecutionContext): Promise<dom.ElementHandle<T>> {\n    const result = await this._session.sendMayFail('DOM.resolveNode', {\n      objectId: handle._objectId,\n      executionContextId: (to.delegate as WKExecutionContext)._contextId\n    });\n    if (!result || result.object.subtype === 'null')\n      throw new Error(dom.kUnableToAdoptErrorMessage);\n    return createHandle(to, result.object) as dom.ElementHandle<T>;\n  }\n\n  async getAccessibilityTree(needle?: dom.ElementHandle): Promise<{tree: accessibility.AXNode, needle: accessibility.AXNode | null}> {\n    return getAccessibilityTree(this._session, needle);\n  }\n\n  async inputActionEpilogue(): Promise<void> {\n  }\n\n  async resetForReuse(progress: Progress): Promise<void> {\n  }\n\n  async getFrameElement(frame: frames.Frame): Promise<dom.ElementHandle> {\n    const parent = frame.parentFrame();\n    if (!parent)\n      throw new Error('Frame has been detached.');\n    const context = await parent._mainContext();\n    const result = await this._session.send('DOM.resolveNode', {\n      frameId: frame._id,\n      executionContextId: (context.delegate as WKExecutionContext)._contextId\n    });\n    if (!result || result.object.subtype === 'null')\n      throw new Error('Frame has been detached.');\n    return createHandle(context, result.object) as dom.ElementHandle;\n  }\n\n  private _maybeCancelCoopNavigationRequest(provisionalPage: WKProvisionalPage) {\n    const navigationRequest = provisionalPage.coopNavigationRequest();\n    for (const [requestId, request] of this._requestIdToRequest) {\n      if (request.request === navigationRequest) {\n        // Make sure the request completes if the provisional navigation is canceled.\n        this._onLoadingFailed(provisionalPage._session, {\n          requestId: requestId,\n          errorText: 'Provisiolal navigation canceled.',\n          timestamp: request._timestamp,\n          canceled: true,\n        });\n        return;\n      }\n    }\n  }\n\n  _adoptRequestFromNewProcess(navigationRequest: network.Request, newSession: WKSession, newRequestId: string) {\n    for (const [requestId, request] of this._requestIdToRequest) {\n      if (request.request === navigationRequest) {\n        this._requestIdToRequest.delete(requestId);\n        request.adoptRequestFromNewProcess(newSession, newRequestId);\n        this._requestIdToRequest.set(newRequestId, request);\n        return;\n      }\n    }\n  }\n\n  _onRequestWillBeSent(session: WKSession, event: Protocol.Network.requestWillBeSentPayload) {\n    if (event.request.url.startsWith('data:'))\n      return;\n    // WebKit started dispatching network events for about:blank after https://commits.webkit.org/292206@main.\n    if (event.request.url.startsWith('about:'))\n      return;\n\n    // We do not support intercepting redirects.\n    if (this._page.needsRequestInterception() && !event.redirectResponse)\n      this._requestIdToRequestWillBeSentEvent.set(event.requestId, event);\n    else\n      this._onRequest(session, event, false);\n  }\n\n  private _onRequest(session: WKSession, event: Protocol.Network.requestWillBeSentPayload, intercepted: boolean) {\n    let redirectedFrom: WKInterceptableRequest | null = null;\n    if (event.redirectResponse) {\n      const request = this._requestIdToRequest.get(event.requestId);\n      // If we connect late to the target, we could have missed the requestWillBeSent event.\n      if (request) {\n        this._handleRequestRedirect(request, event.requestId, event.redirectResponse, event.timestamp);\n        redirectedFrom = request;\n      }\n    }\n    const frame = redirectedFrom ? redirectedFrom.request.frame() : this._page.frameManager.frame(event.frameId);\n    // sometimes we get stray network events for detached frames\n    // TODO(einbinder) why?\n    if (!frame)\n      return;\n\n    // TODO(einbinder) this will fail if we are an XHR document request\n    const isNavigationRequest = event.type === 'Document';\n    const documentId = isNavigationRequest ? event.loaderId : undefined;\n    const request = new WKInterceptableRequest(session, frame, event, redirectedFrom, documentId);\n    let route;\n    if (intercepted) {\n      route = new WKRouteImpl(session, event.requestId);\n      // There is no point in waiting for the raw headers in Network.responseReceived when intercepting.\n      // Use provisional headers as raw headers, so that client can call allHeaders() from the route handler.\n      request.request.setRawRequestHeaders(null);\n    }\n    this._requestIdToRequest.set(event.requestId, request);\n    this._page.frameManager.requestStarted(request.request, route);\n  }\n\n  private _handleRequestRedirect(request: WKInterceptableRequest, requestId: string, responsePayload: Protocol.Network.Response, timestamp: number) {\n    const response = request.createResponse(responsePayload);\n    response._securityDetailsFinished();\n    response._serverAddrFinished();\n    response.setResponseHeadersSize(null);\n    response.setEncodedBodySize(null);\n    response._requestFinished(responsePayload.timing ? helper.secondsToRoundishMillis(timestamp - request._timestamp) : -1);\n    this._requestIdToRequest.delete(requestId);\n    this._page.frameManager.requestReceivedResponse(response);\n    this._page.frameManager.reportRequestFinished(request.request, response);\n  }\n\n  _onRequestIntercepted(session: WKSession, event: Protocol.Network.requestInterceptedPayload) {\n    const requestWillBeSentEvent = this._requestIdToRequestWillBeSentEvent.get(event.requestId);\n    if (!requestWillBeSentEvent) {\n      // Intercepted, although we do not intend to allow interception.\n      // Just continue.\n      session.sendMayFail('Network.interceptWithRequest', { requestId: event.requestId });\n      return;\n    }\n    this._requestIdToRequestWillBeSentEvent.delete(event.requestId);\n    this._onRequest(session, requestWillBeSentEvent, true);\n  }\n\n  _onResponseReceived(session: WKSession, event: Protocol.Network.responseReceivedPayload) {\n    const requestWillBeSentEvent = this._requestIdToRequestWillBeSentEvent.get(event.requestId);\n    if (requestWillBeSentEvent) {\n      this._requestIdToRequestWillBeSentEvent.delete(event.requestId);\n      // We received a response, so the request won't be intercepted (e.g. it was handled by a\n      // service worker and we don't intercept service workers).\n      this._onRequest(session, requestWillBeSentEvent, false);\n    }\n    const request = this._requestIdToRequest.get(event.requestId);\n    // FileUpload sends a response without a matching request.\n    if (!request)\n      return;\n\n    this._requestIdToResponseReceivedPayloadEvent.set(event.requestId, event);\n    const response = request.createResponse(event.response);\n    this._page.frameManager.requestReceivedResponse(response);\n\n    if (response.status() === 204 && request.request.isNavigationRequest()) {\n      this._onLoadingFailed(session, {\n        requestId: event.requestId,\n        errorText: 'Aborted: 204 No Content',\n        timestamp: event.timestamp\n      });\n    }\n  }\n\n  _onLoadingFinished(event: Protocol.Network.loadingFinishedPayload) {\n    const request = this._requestIdToRequest.get(event.requestId);\n    // For certain requestIds we never receive requestWillBeSent event.\n    // @see https://crbug.com/750469\n    if (!request)\n      return;\n\n    // Under certain conditions we never get the Network.responseReceived\n    // event from protocol. @see https://crbug.com/883475\n    const response = request.request._existingResponse();\n    if (response) {\n      const responseReceivedPayload = this._requestIdToResponseReceivedPayloadEvent.get(event.requestId);\n      response._serverAddrFinished(parseRemoteAddress(event?.metrics?.remoteAddress));\n      response._securityDetailsFinished({\n        protocol: isLoadedSecurely(response.url(), response.timing()) ? event.metrics?.securityConnection?.protocol : undefined,\n        subjectName: responseReceivedPayload?.response.security?.certificate?.subject,\n        validFrom: responseReceivedPayload?.response.security?.certificate?.validFrom,\n        validTo: responseReceivedPayload?.response.security?.certificate?.validUntil,\n      });\n      if (event.metrics?.protocol)\n        response._setHttpVersion(event.metrics.protocol);\n      response.setEncodedBodySize(event.metrics?.responseBodyBytesReceived ?? null);\n      response.setResponseHeadersSize(event.metrics?.responseHeaderBytesReceived ?? null);\n\n      response._requestFinished(helper.secondsToRoundishMillis(event.timestamp - request._timestamp));\n    } else {\n      // Use provisional headers if we didn't have the response with raw headers.\n      request.request.setRawRequestHeaders(null);\n    }\n\n    this._requestIdToResponseReceivedPayloadEvent.delete(event.requestId);\n    this._requestIdToRequest.delete(event.requestId);\n    this._page.frameManager.reportRequestFinished(request.request, response);\n  }\n\n  _onLoadingFailed(session: WKSession, event: Protocol.Network.loadingFailedPayload) {\n    const requestWillBeSentEvent = this._requestIdToRequestWillBeSentEvent.get(event.requestId);\n    if (requestWillBeSentEvent) {\n      this._requestIdToRequestWillBeSentEvent.delete(event.requestId);\n      // If loading failed, the request won't be intercepted (e.g. it was handled by a\n      // service worker and we don't intercept service workers).\n      this._onRequest(session, requestWillBeSentEvent, false);\n    }\n\n    const request = this._requestIdToRequest.get(event.requestId);\n    // For certain requestIds we never receive requestWillBeSent event.\n    // @see https://crbug.com/750469\n    if (!request)\n      return;\n\n    const response = request.request._existingResponse();\n    if (response) {\n      response._serverAddrFinished();\n      response._securityDetailsFinished();\n      response.setResponseHeadersSize(null);\n      response.setEncodedBodySize(null);\n      response._requestFinished(helper.secondsToRoundishMillis(event.timestamp - request._timestamp));\n    } else {\n      // Use provisional headers if we didn't have the response with raw headers.\n      request.request.setRawRequestHeaders(null);\n    }\n    this._requestIdToRequest.delete(event.requestId);\n    request.request._setFailureText(event.errorText);\n    this._page.frameManager.requestFailed(request.request, event.errorText.includes('cancelled'));\n  }\n\n  async _grantPermissions(origin: string, permissions: string[]) {\n    const webPermissionToProtocol = new Map<string, string>([\n      ['geolocation', 'geolocation'],\n      ['notifications', 'notifications'],\n      ['clipboard-read', 'clipboard-read'],\n    ]);\n    const filtered = permissions.map(permission => {\n      const protocolPermission = webPermissionToProtocol.get(permission);\n      if (!protocolPermission)\n        throw new Error('Unknown permission: ' + permission);\n      return protocolPermission;\n    });\n    await this._pageProxySession.send('Emulation.grantPermissions', { origin, permissions: filtered });\n  }\n\n  async _clearPermissions() {\n    await this._pageProxySession.send('Emulation.resetPermissions', {});\n  }\n\n  shouldToggleStyleSheetToSyncAnimations(): boolean {\n    return true;\n  }\n}\n\n/**\n * WebKit Remote Addresses look like:\n *\n * macOS:\n * ::1.8911\n * 2606:2800:220:1:248:1893:25c8:1946.443\n * 127.0.0.1:8000\n *\n * ubuntu:\n * ::1:8907\n * 127.0.0.1:8000\n *\n * NB: They look IPv4 and IPv6's with ports but use an alternative notation.\n */\nfunction parseRemoteAddress(value?: string) {\n  if (!value)\n    return;\n\n  try {\n    const colon = value.lastIndexOf(':');\n    const dot = value.lastIndexOf('.');\n    if (dot < 0) { // IPv6ish:port\n      return {\n        ipAddress: `[${value.slice(0, colon)}]`,\n        port: +value.slice(colon + 1)\n      };\n    }\n\n    if (colon > dot) { // IPv4:port\n      const [address, port] = value.split(':');\n      return {\n        ipAddress: address,\n        port: +port,\n      };\n    } else { // IPv6ish.port\n      const [address, port] = value.split('.');\n      return {\n        ipAddress: `[${address}]`,\n        port: +port,\n      };\n    }\n  } catch (_) {}\n}\n\n\n/**\n * Adapted from Source/WebInspectorUI/UserInterface/Models/Resource.js in\n * WebKit codebase.\n */\nfunction isLoadedSecurely(url: string, timing: network.ResourceTiming) {\n  try {\n    const u = new URL(url);\n    if (u.protocol !== 'https:' && u.protocol !== 'wss:' && u.protocol !== 'sftp:')\n      return false;\n    if (timing.secureConnectionStart === -1 && timing.connectStart !== -1)\n      return false;\n    return true;\n  } catch (_) {}\n}\n"],
  "mappings": "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",
  "names": ["path", "request"]
}
