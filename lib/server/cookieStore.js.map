{
  "version": 3,
  "sources": ["../../src/server/cookieStore.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isLocalHostname, kMaxCookieExpiresDateInSeconds } from './network';\n\nimport type * as channels from '@protocol/channels';\n\nexport class Cookie {\n  private _raw: channels.NetworkCookie;\n  constructor(data: channels.NetworkCookie) {\n    this._raw = data;\n  }\n\n  name(): string {\n    return this._raw.name;\n  }\n\n  // https://datatracker.ietf.org/doc/html/rfc6265#section-5.4\n  matches(url: URL): boolean {\n    if (this._raw.secure && (url.protocol !== 'https:' && !isLocalHostname(url.hostname)))\n      return false;\n    if (!domainMatches(url.hostname, this._raw.domain))\n      return false;\n    if (!pathMatches(url.pathname, this._raw.path))\n      return false;\n    return true;\n  }\n\n  equals(other: Cookie) {\n    return this._raw.name === other._raw.name &&\n      this._raw.domain === other._raw.domain &&\n      this._raw.path === other._raw.path;\n  }\n\n  networkCookie(): channels.NetworkCookie {\n    return this._raw;\n  }\n\n  updateExpiresFrom(other: Cookie) {\n    this._raw.expires = other._raw.expires;\n  }\n\n  expired() {\n    if (this._raw.expires === -1)\n      return false;\n    return this._raw.expires * 1000 < Date.now();\n  }\n}\n\nexport class CookieStore {\n  private readonly _nameToCookies: Map<string, Set<Cookie>> = new Map();\n\n  addCookies(cookies: channels.NetworkCookie[]) {\n    for (const cookie of cookies)\n      this._addCookie(new Cookie(cookie));\n  }\n\n  cookies(url: URL): channels.NetworkCookie[] {\n    const result = [];\n    for (const cookie of this._cookiesIterator()) {\n      if (cookie.matches(url))\n        result.push(cookie.networkCookie());\n    }\n    return result;\n  }\n\n  allCookies(): channels.NetworkCookie[] {\n    const result = [];\n    for (const cookie of this._cookiesIterator())\n      result.push(cookie.networkCookie());\n    return result;\n  }\n\n  private _addCookie(cookie: Cookie) {\n    let set = this._nameToCookies.get(cookie.name());\n    if (!set) {\n      set = new Set();\n      this._nameToCookies.set(cookie.name(), set);\n    }\n    // https://datatracker.ietf.org/doc/html/rfc6265#section-5.3\n    for (const other of set) {\n      if (other.equals(cookie))\n        set.delete(other);\n    }\n    set.add(cookie);\n    CookieStore.pruneExpired(set);\n  }\n\n  private *_cookiesIterator(): IterableIterator<Cookie> {\n    for (const [name, cookies] of this._nameToCookies) {\n      CookieStore.pruneExpired(cookies);\n      for (const cookie of cookies)\n        yield cookie;\n      if (cookies.size === 0)\n        this._nameToCookies.delete(name);\n    }\n  }\n\n  private static pruneExpired(cookies: Set<Cookie>) {\n    for (const cookie of cookies) {\n      if (cookie.expired())\n        cookies.delete(cookie);\n    }\n  }\n}\n\ntype RawCookie = {\n  name: string,\n  value: string,\n  domain?: string,\n  path?: string,\n  expires?: number,\n  httpOnly?: boolean,\n  secure?: boolean,\n  sameSite?: 'Strict' | 'Lax' | 'None',\n};\n\nexport function parseRawCookie(header: string): RawCookie | null {\n  const pairs = header.split(';').filter(s => s.trim().length > 0).map(p => {\n    let key = '';\n    let value = '';\n    const separatorPos = p.indexOf('=');\n    if (separatorPos === -1) {\n      // If only a key is specified, the value is left undefined.\n      key = p.trim();\n    } else {\n      // Otherwise we assume that the key is the element before the first `=`\n      key = p.slice(0, separatorPos).trim();\n      // And the value is the rest of the string.\n      value = p.slice(separatorPos + 1).trim();\n    }\n    return [key, value];\n  });\n  if (!pairs.length)\n    return null;\n  const [name, value] = pairs[0];\n  const cookie: RawCookie = {\n    name,\n    value,\n  };\n  for (let i = 1; i < pairs.length; i++) {\n    const [name, value] = pairs[i];\n    switch (name.toLowerCase()) {\n      case 'expires':\n        const expiresMs = (+new Date(value));\n        // https://datatracker.ietf.org/doc/html/rfc6265#section-5.2.1\n        if (isFinite(expiresMs)) {\n          if (expiresMs <= 0)\n            cookie.expires = 0;\n          else\n            cookie.expires = Math.min(expiresMs / 1000, kMaxCookieExpiresDateInSeconds);\n        }\n        break;\n      case 'max-age':\n        const maxAgeSec = parseInt(value, 10);\n        if (isFinite(maxAgeSec)) {\n          // From https://datatracker.ietf.org/doc/html/rfc6265#section-5.2.2\n          // If delta-seconds is less than or equal to zero (0), let expiry-time\n          // be the earliest representable date and time.\n          if (maxAgeSec <= 0)\n            cookie.expires = 0;\n          else\n            cookie.expires = Math.min(Date.now() / 1000 + maxAgeSec, kMaxCookieExpiresDateInSeconds);\n        }\n        break;\n      case 'domain':\n        cookie.domain = value.toLocaleLowerCase() || '';\n        if (cookie.domain && !cookie.domain.startsWith('.') && cookie.domain.includes('.'))\n          cookie.domain = '.' + cookie.domain;\n        break;\n      case 'path':\n        cookie.path = value || '';\n        break;\n      case 'secure':\n        cookie.secure = true;\n        break;\n      case 'httponly':\n        cookie.httpOnly = true;\n        break;\n      case 'samesite':\n        switch (value.toLowerCase()) {\n          case 'none':\n            cookie.sameSite = 'None';\n            break;\n          case 'lax':\n            cookie.sameSite = 'Lax';\n            break;\n          case 'strict':\n            cookie.sameSite = 'Strict';\n            break;\n        }\n        break;\n    }\n  }\n  return cookie;\n}\n\nexport function domainMatches(value: string, domain: string): boolean {\n  if (value === domain)\n    return true;\n  // Only strict match is allowed if domain doesn't start with '.' (host-only-flag is true in the spec)\n  if (!domain.startsWith('.'))\n    return false;\n  value = '.' + value;\n  return value.endsWith(domain);\n}\n\nfunction pathMatches(value: string, path: string): boolean {\n  if (value === path)\n    return true;\n  if (!value.endsWith('/'))\n    value = value + '/';\n  if (!path.endsWith('/'))\n    path = path + '/';\n  return value.startsWith(path);\n}\n"],
  "mappings": "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",
  "names": ["value", "name"]
}
