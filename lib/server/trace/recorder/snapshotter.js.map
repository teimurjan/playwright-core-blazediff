{
  "version": 3,
  "sources": ["../../../../src/server/trace/recorder/snapshotter.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { frameSnapshotStreamer } from './snapshotterInjected';\nimport { monotonicTime } from '../../../utils/isomorphic/time';\nimport { calculateSha1, createGuid } from '../../utils/crypto';\nimport { debugLogger } from '../../utils/debugLogger';\nimport { eventsHelper } from '../../utils/eventsHelper';\nimport { mime } from '../../../utilsBundle';\nimport { BrowserContext } from '../../browserContext';\nimport { Page } from '../../page';\n\nimport type { SnapshotData } from './snapshotterInjected';\nimport type { RegisteredListener } from '../../utils/eventsHelper';\nimport type { Frame } from '../../frames';\nimport type { InitScript } from '../../page';\nimport type { FrameSnapshot } from '@trace/snapshot';\n\nexport type SnapshotterBlob = {\n  buffer: Buffer,\n  sha1: string,\n};\n\nexport interface SnapshotterDelegate {\n  onSnapshotterBlob(blob: SnapshotterBlob): void;\n  onFrameSnapshot(snapshot: FrameSnapshot): void;\n}\n\nexport class Snapshotter {\n  private _context: BrowserContext;\n  private _delegate: SnapshotterDelegate;\n  private _eventListeners: RegisteredListener[] = [];\n  private _snapshotStreamer: string;\n  private _initScript: InitScript | undefined;\n  private _started = false;\n\n  constructor(context: BrowserContext, delegate: SnapshotterDelegate) {\n    this._context = context;\n    this._delegate = delegate;\n    const guid = createGuid();\n    this._snapshotStreamer = '__playwright_snapshot_streamer_' + guid;\n  }\n\n  started(): boolean {\n    return this._started;\n  }\n\n  async start() {\n    this._started = true;\n    if (!this._initScript)\n      await this._initialize();\n    await this.reset();\n  }\n\n  async reset() {\n    if (this._started)\n      await this._context.safeNonStallingEvaluateInAllFrames(`window[\"${this._snapshotStreamer}\"].reset()`, 'main');\n  }\n\n  stop() {\n    this._started = false;\n  }\n\n  async resetForReuse() {\n    // Next time we start recording, we will call addInitScript again.\n    if (this._initScript) {\n      eventsHelper.removeEventListeners(this._eventListeners);\n      await this._context.removeInitScripts([this._initScript]);\n      this._initScript = undefined;\n    }\n  }\n\n  async _initialize() {\n    for (const page of this._context.pages())\n      this._onPage(page);\n    this._eventListeners = [\n      eventsHelper.addEventListener(this._context, BrowserContext.Events.Page, this._onPage.bind(this)),\n    ];\n\n    const { javaScriptEnabled } = this._context._options;\n    const initScriptSource = `(${frameSnapshotStreamer})(\"${this._snapshotStreamer}\", ${javaScriptEnabled || javaScriptEnabled === undefined})`;\n    this._initScript = await this._context.addInitScript(undefined, initScriptSource);\n    await this._context.safeNonStallingEvaluateInAllFrames(initScriptSource, 'main');\n  }\n\n  dispose() {\n    eventsHelper.removeEventListeners(this._eventListeners);\n  }\n\n  async captureSnapshot(page: Page, callId: string, snapshotName: string): Promise<void> {\n    // Prepare expression synchronously.\n    const expression = `window[\"${this._snapshotStreamer}\"].captureSnapshot(${JSON.stringify(snapshotName)})`;\n\n    // In each frame, in a non-stalling manner, capture the snapshots.\n    const snapshots = page.frames().map(async frame => {\n      const data = await frame.nonStallingRawEvaluateInExistingMainContext(expression).catch(e => debugLogger.log('error', e)) as SnapshotData;\n      // Something went wrong -> bail out, our snapshots are best-efforty.\n      if (!data || !this._started)\n        return;\n\n      const snapshot: FrameSnapshot = {\n        callId,\n        snapshotName,\n        pageId: page.guid,\n        frameId: frame.guid,\n        frameUrl: data.url,\n        doctype: data.doctype,\n        html: data.html,\n        viewport: data.viewport,\n        timestamp: monotonicTime(),\n        wallTime: data.wallTime,\n        collectionTime: data.collectionTime,\n        resourceOverrides: [],\n        isMainFrame: page.mainFrame() === frame\n      };\n      for (const { url, content, contentType } of data.resourceOverrides) {\n        if (typeof content === 'string') {\n          const buffer = Buffer.from(content);\n          const sha1 = calculateSha1(buffer) + '.' + (mime.getExtension(contentType) || 'dat');\n          this._delegate.onSnapshotterBlob({ sha1, buffer });\n          snapshot.resourceOverrides.push({ url, sha1 });\n        } else {\n          snapshot.resourceOverrides.push({ url, ref: content });\n        }\n      }\n      this._delegate.onFrameSnapshot(snapshot);\n    });\n    await Promise.all(snapshots);\n  }\n\n  private _onPage(page: Page) {\n    // Annotate frame hierarchy so that snapshots could include frame ids.\n    for (const frame of page.frames())\n      this._annotateFrameHierarchy(frame);\n    this._eventListeners.push(eventsHelper.addEventListener(page, Page.Events.FrameAttached, frame => this._annotateFrameHierarchy(frame)));\n  }\n\n  private async _annotateFrameHierarchy(frame: Frame) {\n    try {\n      const frameElement = await frame.frameElement();\n      const parent = frame.parentFrame();\n      if (!parent)\n        return;\n      const context = await parent._mainContext();\n      await context?.evaluate(({ snapshotStreamer, frameElement, frameId }) => {\n        (window as any)[snapshotStreamer].markIframe(frameElement, frameId);\n      }, { snapshotStreamer: this._snapshotStreamer, frameElement, frameId: frame.guid });\n      frameElement.dispose();\n    } catch (e) {\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,iCAAsC;AACtC,kBAA8B;AAC9B,oBAA0C;AAC1C,yBAA4B;AAC5B,0BAA6B;AAC7B,yBAAqB;AACrB,4BAA+B;AAC/B,kBAAqB;AAkBd,MAAM,YAAY;AAAA,EAQvB,YAAY,SAAyB,UAA+B;AALpE,SAAQ,kBAAwC,CAAC;AAGjD,SAAQ,WAAW;AAGjB,SAAK,WAAW;AAChB,SAAK,YAAY;AACjB,UAAM,WAAO,0BAAW;AACxB,SAAK,oBAAoB,oCAAoC;AAAA,EAC/D;AAAA,EAEA,UAAmB;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,MAAM,QAAQ;AACZ,SAAK,WAAW;AAChB,QAAI,CAAC,KAAK;AACR,YAAM,KAAK,YAAY;AACzB,UAAM,KAAK,MAAM;AAAA,EACnB;AAAA,EAEA,MAAM,QAAQ;AACZ,QAAI,KAAK;AACP,YAAM,KAAK,SAAS,mCAAmC,WAAW,KAAK,iBAAiB,cAAc,MAAM;AAAA,EAChH;AAAA,EAEA,OAAO;AACL,SAAK,WAAW;AAAA,EAClB;AAAA,EAEA,MAAM,gBAAgB;AAEpB,QAAI,KAAK,aAAa;AACpB,uCAAa,qBAAqB,KAAK,eAAe;AACtD,YAAM,KAAK,SAAS,kBAAkB,CAAC,KAAK,WAAW,CAAC;AACxD,WAAK,cAAc;AAAA,IACrB;AAAA,EACF;AAAA,EAEA,MAAM,cAAc;AAClB,eAAW,QAAQ,KAAK,SAAS,MAAM;AACrC,WAAK,QAAQ,IAAI;AACnB,SAAK,kBAAkB;AAAA,MACrB,iCAAa,iBAAiB,KAAK,UAAU,qCAAe,OAAO,MAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,IAClG;AAEA,UAAM,EAAE,kBAAkB,IAAI,KAAK,SAAS;AAC5C,UAAM,mBAAmB,IAAI,gDAAqB,MAAM,KAAK,iBAAiB,MAAM,qBAAqB,sBAAsB,MAAS;AACxI,SAAK,cAAc,MAAM,KAAK,SAAS,cAAc,QAAW,gBAAgB;AAChF,UAAM,KAAK,SAAS,mCAAmC,kBAAkB,MAAM;AAAA,EACjF;AAAA,EAEA,UAAU;AACR,qCAAa,qBAAqB,KAAK,eAAe;AAAA,EACxD;AAAA,EAEA,MAAM,gBAAgB,MAAY,QAAgB,cAAqC;AAErF,UAAM,aAAa,WAAW,KAAK,iBAAiB,sBAAsB,KAAK,UAAU,YAAY,CAAC;AAGtG,UAAM,YAAY,KAAK,OAAO,EAAE,IAAI,OAAM,UAAS;AACjD,YAAM,OAAO,MAAM,MAAM,4CAA4C,UAAU,EAAE,MAAM,OAAK,+BAAY,IAAI,SAAS,CAAC,CAAC;AAEvH,UAAI,CAAC,QAAQ,CAAC,KAAK;AACjB;AAEF,YAAM,WAA0B;AAAA,QAC9B;AAAA,QACA;AAAA,QACA,QAAQ,KAAK;AAAA,QACb,SAAS,MAAM;AAAA,QACf,UAAU,KAAK;AAAA,QACf,SAAS,KAAK;AAAA,QACd,MAAM,KAAK;AAAA,QACX,UAAU,KAAK;AAAA,QACf,eAAW,2BAAc;AAAA,QACzB,UAAU,KAAK;AAAA,QACf,gBAAgB,KAAK;AAAA,QACrB,mBAAmB,CAAC;AAAA,QACpB,aAAa,KAAK,UAAU,MAAM;AAAA,MACpC;AACA,iBAAW,EAAE,KAAK,SAAS,YAAY,KAAK,KAAK,mBAAmB;AAClE,YAAI,OAAO,YAAY,UAAU;AAC/B,gBAAM,SAAS,OAAO,KAAK,OAAO;AAClC,gBAAM,WAAO,6BAAc,MAAM,IAAI,OAAO,wBAAK,aAAa,WAAW,KAAK;AAC9E,eAAK,UAAU,kBAAkB,EAAE,MAAM,OAAO,CAAC;AACjD,mBAAS,kBAAkB,KAAK,EAAE,KAAK,KAAK,CAAC;AAAA,QAC/C,OAAO;AACL,mBAAS,kBAAkB,KAAK,EAAE,KAAK,KAAK,QAAQ,CAAC;AAAA,QACvD;AAAA,MACF;AACA,WAAK,UAAU,gBAAgB,QAAQ;AAAA,IACzC,CAAC;AACD,UAAM,QAAQ,IAAI,SAAS;AAAA,EAC7B;AAAA,EAEQ,QAAQ,MAAY;AAE1B,eAAW,SAAS,KAAK,OAAO;AAC9B,WAAK,wBAAwB,KAAK;AACpC,SAAK,gBAAgB,KAAK,iCAAa,iBAAiB,MAAM,iBAAK,OAAO,eAAe,WAAS,KAAK,wBAAwB,KAAK,CAAC,CAAC;AAAA,EACxI;AAAA,EAEA,MAAc,wBAAwB,OAAc;AAClD,QAAI;AACF,YAAM,eAAe,MAAM,MAAM,aAAa;AAC9C,YAAM,SAAS,MAAM,YAAY;AACjC,UAAI,CAAC;AACH;AACF,YAAM,UAAU,MAAM,OAAO,aAAa;AAC1C,YAAM,SAAS,SAAS,CAAC,EAAE,kBAAkB,cAAAA,eAAc,QAAQ,MAAM;AACvE,QAAC,OAAe,gBAAgB,EAAE,WAAWA,eAAc,OAAO;AAAA,MACpE,GAAG,EAAE,kBAAkB,KAAK,mBAAmB,cAAc,SAAS,MAAM,KAAK,CAAC;AAClF,mBAAa,QAAQ;AAAA,IACvB,SAAS,GAAG;AAAA,IACZ;AAAA,EACF;AACF;",
  "names": ["frameElement"]
}
