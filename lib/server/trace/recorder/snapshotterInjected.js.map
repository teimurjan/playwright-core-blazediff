{
  "version": 3,
  "sources": ["../../../../src/server/trace/recorder/snapshotterInjected.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { NodeSnapshot } from '@trace/snapshot';\n\nexport type SnapshotData = {\n  doctype?: string,\n  html: NodeSnapshot,\n  resourceOverrides: {\n    url: string,\n    // String is the content. Number is \"x snapshots ago\", same url.\n    content: string | number,\n    contentType: 'text/css'\n  }[],\n  viewport: { width: number, height: number },\n  url: string,\n  wallTime: number,\n  collectionTime: number,\n};\n\nexport function frameSnapshotStreamer(snapshotStreamer: string, removeNoScript: boolean) {\n  // Communication with Playwright.\n  if ((window as any)[snapshotStreamer])\n    return;\n\n  // Attributes present in the snapshot.\n  const kShadowAttribute = '__playwright_shadow_root_';\n  const kValueAttribute = '__playwright_value_';\n  const kCheckedAttribute = '__playwright_checked_';\n  const kSelectedAttribute = '__playwright_selected_';\n  const kScrollTopAttribute = '__playwright_scroll_top_';\n  const kScrollLeftAttribute = '__playwright_scroll_left_';\n  const kStyleSheetAttribute = '__playwright_style_sheet_';\n  const kTargetAttribute = '__playwright_target__';\n  const kCustomElementsAttribute = '__playwright_custom_elements__';\n  const kCurrentSrcAttribute = '__playwright_current_src__';\n  const kBoundingRectAttribute = '__playwright_bounding_rect__';\n  const kPopoverOpenAttribute = '__playwright_popover_open_';\n  const kDialogOpenAttribute = '__playwright_dialog_open_';\n\n  // Symbols for our own info on Nodes/StyleSheets.\n  const kSnapshotFrameId = Symbol('__playwright_snapshot_frameid_');\n  const kCachedData = Symbol('__playwright_snapshot_cache_');\n  const kEndOfList = Symbol('__playwright_end_of_list_');\n  type CachedData = {\n    cached?: any[], // Cached values to determine whether the snapshot will be the same.\n    ref?: [number, number], // Previous snapshotNumber and nodeIndex.\n    attributesCached?: boolean, // Whether node attributes have not changed.\n    cssText?: string, // Text for stylesheets.\n    cssRef?: number, // Previous snapshotNumber for overridden stylesheets.\n  };\n\n  function resetCachedData(obj: any) {\n    delete obj[kCachedData];\n  }\n\n  function ensureCachedData(obj: any): CachedData {\n    if (!obj[kCachedData])\n      obj[kCachedData] = {};\n    return obj[kCachedData];\n  }\n\n  function removeHash(url: string) {\n    try {\n      const u = new URL(url);\n      u.hash = '';\n      return u.toString();\n    } catch (e) {\n      return url;\n    }\n  }\n\n  class Streamer {\n    private _lastSnapshotNumber = 0;\n    private _staleStyleSheets = new Set<CSSStyleSheet>();\n    private _readingStyleSheet = false;  // To avoid invalidating due to our own reads.\n    private _fakeBase: HTMLBaseElement;\n    private _observer: MutationObserver;\n\n    constructor() {\n      const invalidateCSSGroupingRule = (rule: CSSGroupingRule) => {\n        if (rule.parentStyleSheet)\n          this._invalidateStyleSheet(rule.parentStyleSheet);\n      };\n      this._interceptNativeMethod(window.CSSStyleSheet.prototype, 'insertRule', (sheet: CSSStyleSheet) => this._invalidateStyleSheet(sheet));\n      this._interceptNativeMethod(window.CSSStyleSheet.prototype, 'deleteRule', (sheet: CSSStyleSheet) => this._invalidateStyleSheet(sheet));\n      this._interceptNativeMethod(window.CSSStyleSheet.prototype, 'addRule', (sheet: CSSStyleSheet) => this._invalidateStyleSheet(sheet));\n      this._interceptNativeMethod(window.CSSStyleSheet.prototype, 'removeRule', (sheet: CSSStyleSheet) => this._invalidateStyleSheet(sheet));\n      this._interceptNativeGetter(window.CSSStyleSheet.prototype, 'rules', (sheet: CSSStyleSheet) => this._invalidateStyleSheet(sheet));\n      this._interceptNativeGetter(window.CSSStyleSheet.prototype, 'cssRules', (sheet: CSSStyleSheet) => this._invalidateStyleSheet(sheet));\n      this._interceptNativeMethod(window.CSSStyleSheet.prototype, 'replaceSync', (sheet: CSSStyleSheet) => this._invalidateStyleSheet(sheet));\n      this._interceptNativeMethod(window.CSSGroupingRule.prototype, 'insertRule', invalidateCSSGroupingRule);\n      this._interceptNativeMethod(window.CSSGroupingRule.prototype, 'deleteRule', invalidateCSSGroupingRule);\n      this._interceptNativeGetter(window.CSSGroupingRule.prototype, 'cssRules', invalidateCSSGroupingRule);\n      this._interceptNativeAsyncMethod(window.CSSStyleSheet.prototype, 'replace', (sheet: CSSStyleSheet) => this._invalidateStyleSheet(sheet));\n\n      this._fakeBase = document.createElement('base');\n\n      this._observer = new MutationObserver(list => this._handleMutations(list));\n      const observerConfig = { attributes: true, subtree: true };\n      this._observer.observe(document, observerConfig);\n      this._refreshListenersWhenNeeded();\n    }\n\n    private _refreshListenersWhenNeeded() {\n      this._refreshListeners();\n\n      const customEventName = '__playwright_snapshotter_global_listeners_check__';\n\n      let seenEvent = false;\n      const handleCustomEvent = () => seenEvent = true;\n      window.addEventListener(customEventName, handleCustomEvent);\n\n      const observer = new MutationObserver(entries => {\n        // Check for new documentElement in case we need to reinstall document listeners.\n        const newDocumentElement = entries.some(entry => Array.from(entry.addedNodes).includes(document.documentElement));\n        if (newDocumentElement) {\n          // New documentElement - let's check whether listeners are still here.\n          seenEvent = false;\n          window.dispatchEvent(new CustomEvent(customEventName));\n          if (!seenEvent) {\n            // Listener did not fire. Reattach the listener and notify.\n            window.addEventListener(customEventName, handleCustomEvent);\n            this._refreshListeners();\n          }\n        }\n      });\n      observer.observe(document, { childList: true });\n    }\n\n    private _refreshListeners() {\n      (document as any).addEventListener('__playwright_mark_target__', (event: CustomEvent) => {\n        if (!event.detail)\n          return;\n        const callId = event.detail as string;\n        (event.composedPath()[0] as any).__playwright_target__ = callId;\n      });\n      (document as any).addEventListener('__playwright_unmark_target__', (event: CustomEvent) => {\n        if (!event.detail)\n          return;\n        const callId = event.detail as string;\n        if ((event.composedPath()[0] as any).__playwright_target__ === callId)\n          delete (event.composedPath()[0] as any).__playwright_target__;\n      });\n    }\n\n    private _interceptNativeMethod(obj: any, method: string, cb: (thisObj: any, result: any) => void) {\n      const native = obj[method] as Function;\n      if (!native)\n        return;\n      obj[method] = function(...args: any[]) {\n        const result = native.call(this, ...args);\n        cb(this, result);\n        return result;\n      };\n    }\n\n    private _interceptNativeAsyncMethod(obj: any, method: string, cb: (thisObj: any, result: any) => void) {\n      const native = obj[method] as Function;\n      if (!native)\n        return;\n      obj[method] = async function(...args: any[]) {\n        const result = await native.call(this, ...args);\n        cb(this, result);\n        return result;\n      };\n    }\n\n    private _interceptNativeGetter(obj: any, prop: string, cb: (thisObj: any, result: any) => void) {\n      const descriptor = Object.getOwnPropertyDescriptor(obj, prop)!;\n      Object.defineProperty(obj, prop, {\n        ...descriptor,\n        get: function() {\n          const result = descriptor.get!.call(this);\n          cb(this, result);\n          return result;\n        },\n      });\n    }\n\n    private _handleMutations(list: MutationRecord[]) {\n      for (const mutation of list)\n        ensureCachedData(mutation.target).attributesCached = undefined;\n    }\n\n    private _invalidateStyleSheet(sheet: CSSStyleSheet) {\n      if (this._readingStyleSheet)\n        return;\n      this._staleStyleSheets.add(sheet);\n    }\n\n    private _updateStyleElementStyleSheetTextIfNeeded(sheet: CSSStyleSheet, forceText?: boolean): string | undefined {\n      const data = ensureCachedData(sheet);\n      if (this._staleStyleSheets.has(sheet) || (forceText && data.cssText === undefined)) {\n        this._staleStyleSheets.delete(sheet);\n        try {\n          data.cssText = this._getSheetText(sheet);\n        } catch (e) {\n          // Sometimes we cannot access cross-origin stylesheets.\n          data.cssText = '';\n        }\n      }\n      return data.cssText;\n    }\n\n    // Returns either content, ref, or no override.\n    private _updateLinkStyleSheetTextIfNeeded(sheet: CSSStyleSheet, snapshotNumber: number): string | number | undefined {\n      const data = ensureCachedData(sheet);\n      if (this._staleStyleSheets.has(sheet)) {\n        this._staleStyleSheets.delete(sheet);\n        try {\n          data.cssText = this._getSheetText(sheet);\n          data.cssRef = snapshotNumber;\n          return data.cssText;\n        } catch (e) {\n          // Sometimes we cannot access cross-origin stylesheets.\n        }\n      }\n      return data.cssRef === undefined ? undefined : snapshotNumber - data.cssRef;\n    }\n\n    markIframe(iframeElement: HTMLIFrameElement | HTMLFrameElement, frameId: string) {\n      (iframeElement as any)[kSnapshotFrameId] = frameId;\n    }\n\n    reset() {\n      this._staleStyleSheets.clear();\n\n      const visitNode = (node: Node | ShadowRoot) => {\n        resetCachedData(node);\n        if (node.nodeType === Node.ELEMENT_NODE) {\n          const element = node as Element;\n          if (element.shadowRoot)\n            visitNode(element.shadowRoot);\n        }\n        for (let child = node.firstChild; child; child = child.nextSibling)\n          visitNode(child);\n      };\n      visitNode(document.documentElement);\n      visitNode(this._fakeBase);\n    }\n\n    private __sanitizeMetaAttribute(name: string, value: string, httpEquiv: string) {\n      if (name === 'charset')\n        return 'utf-8';\n\n      if (httpEquiv.toLowerCase() !== 'content-type' || name !== 'content')\n        return value;\n\n      const [type, ...params] = value.split(';');\n      if (type !== 'text/html' || params.length <= 0)\n        return value;\n\n      const charsetParamIdx = params.findIndex(param => param.trim().startsWith('charset='));\n      if (charsetParamIdx > -1)\n        params[charsetParamIdx] = 'charset=utf-8';\n\n      return `${type}; ${params.join('; ')}`;\n    }\n\n    private _sanitizeUrl(url: string): string {\n      if (url.startsWith('javascript:') || url.startsWith('vbscript:'))\n        return '';\n      return url;\n    }\n\n    private _sanitizeSrcSet(srcset: string): string {\n      return srcset.split(',').map(src => {\n        src = src.trim();\n        const spaceIndex = src.lastIndexOf(' ');\n        if (spaceIndex === -1)\n          return this._sanitizeUrl(src);\n        return this._sanitizeUrl(src.substring(0, spaceIndex).trim()) + src.substring(spaceIndex);\n      }).join(', ');\n    }\n\n    private _resolveUrl(base: string, url: string): string {\n      if (url === '')\n        return '';\n      try {\n        return new URL(url, base).href;\n      } catch (e) {\n        return url;\n      }\n    }\n\n    private _getSheetBase(sheet: CSSStyleSheet): string {\n      let rootSheet = sheet;\n      while (rootSheet.parentStyleSheet)\n        rootSheet = rootSheet.parentStyleSheet;\n      if (rootSheet.ownerNode)\n        return rootSheet.ownerNode.baseURI;\n      return document.baseURI;\n    }\n\n    private _getSheetText(sheet: CSSStyleSheet): string {\n      this._readingStyleSheet = true;\n      try {\n        const rules: string[] = [];\n        for (const rule of sheet.cssRules)\n          rules.push(rule.cssText);\n        return rules.join('\\n');\n      } finally {\n        this._readingStyleSheet = false;\n      }\n    }\n\n    captureSnapshot(): SnapshotData | undefined {\n      const timestamp = performance.now();\n      const snapshotNumber = ++this._lastSnapshotNumber;\n      let nodeCounter = 0;\n      let shadowDomNesting = 0;\n      let headNesting = 0;\n\n      // Ensure we are up to date.\n      this._handleMutations(this._observer.takeRecords());\n\n      const definedCustomElements = new Set<string>();\n\n      const visitNode = (node: Node | ShadowRoot): { equals: boolean, n: NodeSnapshot } | undefined => {\n        const nodeType = node.nodeType;\n        const nodeName = nodeType === Node.DOCUMENT_FRAGMENT_NODE ? 'template' : node.nodeName;\n\n        if (nodeType !== Node.ELEMENT_NODE &&\n            nodeType !== Node.DOCUMENT_FRAGMENT_NODE &&\n            nodeType !== Node.TEXT_NODE)\n          return;\n        if (nodeName === 'SCRIPT')\n          return;\n        // Don't preload resources.\n        if (nodeName === 'LINK' && nodeType === Node.ELEMENT_NODE) {\n          const rel = (node as Element).getAttribute('rel')?.toLowerCase();\n          if (rel === 'preload' || rel === 'prefetch')\n            return;\n        }\n        if (removeNoScript && nodeName === 'NOSCRIPT')\n          return;\n        if (nodeName === 'META' && (node as HTMLMetaElement).httpEquiv.toLowerCase() === 'content-security-policy')\n          return;\n        // Skip iframes which are inside document's head as they are not visible.\n        // See https://github.com/microsoft/playwright/issues/12005.\n        if ((nodeName === 'IFRAME' || nodeName === 'FRAME') && headNesting)\n          return;\n\n        const data = ensureCachedData(node);\n        const values: any[] = [];\n        let equals = !!data.cached;\n        let extraNodes = 0;\n\n        const expectValue = (value: any) => {\n          equals = equals && data.cached![values.length] === value;\n          values.push(value);\n        };\n\n        const checkAndReturn = (n: NodeSnapshot): { equals: boolean, n: NodeSnapshot } => {\n          data.attributesCached = true;\n          if (equals)\n            return { equals: true, n: [[snapshotNumber - data.ref![0], data.ref![1]]] };\n          nodeCounter += extraNodes;\n          data.ref = [snapshotNumber, nodeCounter++];\n          data.cached = values;\n          return { equals: false, n };\n        };\n\n        if (nodeType === Node.TEXT_NODE) {\n          const value = node.nodeValue || '';\n          expectValue(value);\n          return checkAndReturn(value);\n        }\n\n        if (nodeName === 'STYLE') {\n          const sheet = (node as HTMLStyleElement).sheet;\n          let cssText: string | undefined;\n          if (sheet)\n            cssText = this._updateStyleElementStyleSheetTextIfNeeded(sheet);\n          cssText = cssText || node.textContent || '';\n          expectValue(cssText);\n          // Compensate for the extra 'cssText' text node.\n          extraNodes++;\n          return checkAndReturn([nodeName, {}, cssText]);\n        }\n\n        const attrs: { [attr: string]: string } = {};\n        const result: NodeSnapshot = [nodeName, attrs];\n\n        const visitChild = (child: Node) => {\n          const snapshot = visitNode(child);\n          if (snapshot) {\n            result.push(snapshot.n);\n            expectValue(child);\n            equals = equals && snapshot.equals;\n          }\n        };\n\n        const visitChildStyleSheet = (child: CSSStyleSheet) => {\n          const snapshot = visitStyleSheet(child);\n          if (snapshot) {\n            result.push(snapshot.n);\n            expectValue(child);\n            equals = equals && snapshot.equals;\n          }\n        };\n\n        if (nodeType === Node.DOCUMENT_FRAGMENT_NODE)\n          attrs[kShadowAttribute] = 'open';\n\n        if (nodeType === Node.ELEMENT_NODE) {\n          const element = node as Element;\n          if (element.localName.includes('-') && window.customElements?.get(element.localName))\n            definedCustomElements.add(element.localName);\n          if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\n            const value = (element as HTMLInputElement).value;\n            expectValue(kValueAttribute);\n            expectValue(value);\n            attrs[kValueAttribute] = value;\n          }\n          if (nodeName === 'INPUT' && ['checkbox', 'radio'].includes((element as HTMLInputElement).type)) {\n            const value = (element as HTMLInputElement).checked ? 'true' : 'false';\n            expectValue(kCheckedAttribute);\n            expectValue(value);\n            attrs[kCheckedAttribute] = value;\n          }\n          if (nodeName === 'OPTION') {\n            const value = (element as HTMLOptionElement).selected ? 'true' : 'false';\n            expectValue(kSelectedAttribute);\n            expectValue(value);\n            attrs[kSelectedAttribute] = value;\n          }\n          if (nodeName === 'CANVAS' || nodeName === 'IFRAME' || nodeName === 'FRAME') {\n            const boundingRect = (element as HTMLElement).getBoundingClientRect();\n            const value = JSON.stringify({\n              left: boundingRect.left,\n              top: boundingRect.top,\n              right: boundingRect.right,\n              bottom: boundingRect.bottom\n            });\n            expectValue(kBoundingRectAttribute);\n            expectValue(value);\n            attrs[kBoundingRectAttribute] = value;\n          }\n          if ((element as HTMLElement).popover && (element as HTMLElement).matches && (element as HTMLElement).matches(':popover-open')) {\n            const value = 'true';\n            expectValue(kPopoverOpenAttribute);\n            expectValue(value);\n            attrs[kPopoverOpenAttribute] = value;\n          }\n          if (nodeName === 'DIALOG' && (element as HTMLDialogElement).open) {\n            const value = (element as HTMLDialogElement).matches(':modal') ? 'modal' : 'true';\n            expectValue(kDialogOpenAttribute);\n            expectValue(value);\n            attrs[kDialogOpenAttribute] = value;\n          }\n          if (element.scrollTop) {\n            expectValue(kScrollTopAttribute);\n            expectValue(element.scrollTop);\n            attrs[kScrollTopAttribute] = '' + element.scrollTop;\n          }\n          if (element.scrollLeft) {\n            expectValue(kScrollLeftAttribute);\n            expectValue(element.scrollLeft);\n            attrs[kScrollLeftAttribute] = '' + element.scrollLeft;\n          }\n          if (element.shadowRoot) {\n            ++shadowDomNesting;\n            visitChild(element.shadowRoot);\n            --shadowDomNesting;\n          }\n          if ('__playwright_target__' in element) {\n            expectValue(kTargetAttribute);\n            expectValue(element['__playwright_target__']);\n            attrs[kTargetAttribute] = element['__playwright_target__'] as string;\n          }\n        }\n\n        if (nodeName === 'HEAD') {\n          ++headNesting;\n          // Insert fake <base> first, to ensure all <link> elements use the proper base uri.\n          this._fakeBase.setAttribute('href', document.baseURI);\n          visitChild(this._fakeBase);\n        }\n        for (let child = node.firstChild; child; child = child.nextSibling)\n          visitChild(child);\n        if (nodeName === 'HEAD')\n          --headNesting;\n        expectValue(kEndOfList);\n        let documentOrShadowRoot = null;\n        if (node.ownerDocument!.documentElement === node)\n          documentOrShadowRoot = node.ownerDocument;\n        else if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE)\n          documentOrShadowRoot = node;\n        if (documentOrShadowRoot) {\n          for (const sheet of (documentOrShadowRoot as any).adoptedStyleSheets || [])\n            visitChildStyleSheet(sheet);\n          expectValue(kEndOfList);\n        }\n\n        // Process iframe src attribute before bailing out since it depends on a symbol, not the DOM.\n        if (nodeName === 'IFRAME' || nodeName === 'FRAME') {\n          const element = node as Element;\n          const frameId = (element as any)[kSnapshotFrameId];\n          const name = 'src';\n          const value = frameId ? `/snapshot/${frameId}` : '';\n          expectValue(name);\n          expectValue(value);\n          attrs[name] = value;\n        }\n\n        // Process custom elements before bailing out since they depend on JS, not the DOM.\n        if (nodeName === 'BODY' && definedCustomElements.size) {\n          const value = [...definedCustomElements].join(',');\n          expectValue(kCustomElementsAttribute);\n          expectValue(value);\n          attrs[kCustomElementsAttribute] = value;\n        }\n\n        // Process currentSrc before bailing out since it depends on JS, not the DOM.\n        if (nodeName === 'IMG' || nodeName === 'PICTURE') {\n          const value = nodeName === 'PICTURE' ? '' : this._sanitizeUrl((node as HTMLImageElement).currentSrc);\n          expectValue(kCurrentSrcAttribute);\n          expectValue(value);\n          attrs[kCurrentSrcAttribute] = value;\n        }\n\n        // We can skip attributes comparison because nothing else has changed,\n        // and mutation observer didn't tell us about the attributes.\n        if (equals && data.attributesCached && !shadowDomNesting)\n          return checkAndReturn(result);\n\n        if (nodeType === Node.ELEMENT_NODE) {\n          const element = node as Element;\n          for (let i = 0; i < element.attributes.length; i++) {\n            const name = element.attributes[i].name;\n            if (nodeName === 'LINK' && name === 'integrity')\n              continue;\n            if (nodeName === 'IFRAME' && (name === 'src' || name === 'srcdoc' || name === 'sandbox'))\n              continue;\n            if (nodeName === 'FRAME' && name === 'src')\n              continue;\n            if (nodeName === 'DIALOG' && name === 'open')\n              continue;\n            let value = element.attributes[i].value;\n            if (nodeName === 'META')\n              value = this.__sanitizeMetaAttribute(name, value, (node as HTMLMetaElement).httpEquiv);\n            else if (name === 'src' && (nodeName === 'IMG'))\n              value = this._sanitizeUrl(value);\n            else if (name === 'srcset' && (nodeName === 'IMG'))\n              value = this._sanitizeSrcSet(value);\n            else if (name === 'srcset' && (nodeName === 'SOURCE'))\n              value = this._sanitizeSrcSet(value);\n            else if (name === 'href' && (nodeName === 'LINK'))\n              value = this._sanitizeUrl(value);\n            else if (name.startsWith('on'))\n              value = '';\n            expectValue(name);\n            expectValue(value);\n            attrs[name] = value;\n          }\n          expectValue(kEndOfList);\n        }\n\n        if (result.length === 2 && !Object.keys(attrs).length)\n          result.pop();  // Remove empty attrs when there are no children.\n        return checkAndReturn(result);\n      };\n\n      const visitStyleSheet = (sheet: CSSStyleSheet): { equals: boolean, n: NodeSnapshot } => {\n        const data = ensureCachedData(sheet);\n        const oldCSSText = data.cssText;\n        const cssText = this._updateStyleElementStyleSheetTextIfNeeded(sheet, true /* forceText */)!;\n        if (cssText === oldCSSText)\n          return { equals: true, n: [[snapshotNumber - data.ref![0], data.ref![1]]] };\n        data.ref = [snapshotNumber, nodeCounter++];\n        return {\n          equals: false,\n          n: ['template', {\n            [kStyleSheetAttribute]: cssText,\n          }]\n        };\n      };\n\n      let html: NodeSnapshot;\n      if (document.documentElement) {\n        const { n } = visitNode(document.documentElement)!;\n        html = n;\n      } else {\n        html = ['html'];\n      }\n\n      const result: SnapshotData = {\n        html,\n        doctype: document.doctype ? document.doctype.name : undefined,\n        resourceOverrides: [],\n        viewport: {\n          width: window.innerWidth,\n          height: window.innerHeight,\n        },\n        url: location.href,\n        wallTime: Date.now(),\n        collectionTime: 0,\n      };\n\n      for (const sheet of this._staleStyleSheets) {\n        if (sheet.href === null)\n          continue;\n        const content = this._updateLinkStyleSheetTextIfNeeded(sheet, snapshotNumber);\n        if (content === undefined) {\n          // Unable to capture stylesheet contents.\n          continue;\n        }\n        const base = this._getSheetBase(sheet);\n        const url = removeHash(this._resolveUrl(base, sheet.href!));\n        result.resourceOverrides.push({ url, content, contentType: 'text/css' },);\n      }\n\n      result.collectionTime = performance.now() - timestamp;\n      return result;\n    }\n  }\n\n  (window as any)[snapshotStreamer] = new Streamer();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCO,SAAS,sBAAsB,kBAA0B,gBAAyB;AAEvF,MAAK,OAAe,gBAAgB;AAClC;AAGF,QAAM,mBAAmB;AACzB,QAAM,kBAAkB;AACxB,QAAM,oBAAoB;AAC1B,QAAM,qBAAqB;AAC3B,QAAM,sBAAsB;AAC5B,QAAM,uBAAuB;AAC7B,QAAM,uBAAuB;AAC7B,QAAM,mBAAmB;AACzB,QAAM,2BAA2B;AACjC,QAAM,uBAAuB;AAC7B,QAAM,yBAAyB;AAC/B,QAAM,wBAAwB;AAC9B,QAAM,uBAAuB;AAG7B,QAAM,mBAAmB,OAAO,gCAAgC;AAChE,QAAM,cAAc,OAAO,8BAA8B;AACzD,QAAM,aAAa,OAAO,2BAA2B;AASrD,WAAS,gBAAgB,KAAU;AACjC,WAAO,IAAI,WAAW;AAAA,EACxB;AAEA,WAAS,iBAAiB,KAAsB;AAC9C,QAAI,CAAC,IAAI,WAAW;AAClB,UAAI,WAAW,IAAI,CAAC;AACtB,WAAO,IAAI,WAAW;AAAA,EACxB;AAEA,WAAS,WAAW,KAAa;AAC/B,QAAI;AACF,YAAM,IAAI,IAAI,IAAI,GAAG;AACrB,QAAE,OAAO;AACT,aAAO,EAAE,SAAS;AAAA,IACpB,SAAS,GAAG;AACV,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EAEA,MAAM,SAAS;AAAA,IAOb,cAAc;AANd,WAAQ,sBAAsB;AAC9B,WAAQ,oBAAoB,oBAAI,IAAmB;AACnD,WAAQ,qBAAqB;AAK3B,YAAM,4BAA4B,CAAC,SAA0B;AAC3D,YAAI,KAAK;AACP,eAAK,sBAAsB,KAAK,gBAAgB;AAAA,MACpD;AACA,WAAK,uBAAuB,OAAO,cAAc,WAAW,cAAc,CAAC,UAAyB,KAAK,sBAAsB,KAAK,CAAC;AACrI,WAAK,uBAAuB,OAAO,cAAc,WAAW,cAAc,CAAC,UAAyB,KAAK,sBAAsB,KAAK,CAAC;AACrI,WAAK,uBAAuB,OAAO,cAAc,WAAW,WAAW,CAAC,UAAyB,KAAK,sBAAsB,KAAK,CAAC;AAClI,WAAK,uBAAuB,OAAO,cAAc,WAAW,cAAc,CAAC,UAAyB,KAAK,sBAAsB,KAAK,CAAC;AACrI,WAAK,uBAAuB,OAAO,cAAc,WAAW,SAAS,CAAC,UAAyB,KAAK,sBAAsB,KAAK,CAAC;AAChI,WAAK,uBAAuB,OAAO,cAAc,WAAW,YAAY,CAAC,UAAyB,KAAK,sBAAsB,KAAK,CAAC;AACnI,WAAK,uBAAuB,OAAO,cAAc,WAAW,eAAe,CAAC,UAAyB,KAAK,sBAAsB,KAAK,CAAC;AACtI,WAAK,uBAAuB,OAAO,gBAAgB,WAAW,cAAc,yBAAyB;AACrG,WAAK,uBAAuB,OAAO,gBAAgB,WAAW,cAAc,yBAAyB;AACrG,WAAK,uBAAuB,OAAO,gBAAgB,WAAW,YAAY,yBAAyB;AACnG,WAAK,4BAA4B,OAAO,cAAc,WAAW,WAAW,CAAC,UAAyB,KAAK,sBAAsB,KAAK,CAAC;AAEvI,WAAK,YAAY,SAAS,cAAc,MAAM;AAE9C,WAAK,YAAY,IAAI,iBAAiB,UAAQ,KAAK,iBAAiB,IAAI,CAAC;AACzE,YAAM,iBAAiB,EAAE,YAAY,MAAM,SAAS,KAAK;AACzD,WAAK,UAAU,QAAQ,UAAU,cAAc;AAC/C,WAAK,4BAA4B;AAAA,IACnC;AAAA,IAEQ,8BAA8B;AACpC,WAAK,kBAAkB;AAEvB,YAAM,kBAAkB;AAExB,UAAI,YAAY;AAChB,YAAM,oBAAoB,MAAM,YAAY;AAC5C,aAAO,iBAAiB,iBAAiB,iBAAiB;AAE1D,YAAM,WAAW,IAAI,iBAAiB,aAAW;AAE/C,cAAM,qBAAqB,QAAQ,KAAK,WAAS,MAAM,KAAK,MAAM,UAAU,EAAE,SAAS,SAAS,eAAe,CAAC;AAChH,YAAI,oBAAoB;AAEtB,sBAAY;AACZ,iBAAO,cAAc,IAAI,YAAY,eAAe,CAAC;AACrD,cAAI,CAAC,WAAW;AAEd,mBAAO,iBAAiB,iBAAiB,iBAAiB;AAC1D,iBAAK,kBAAkB;AAAA,UACzB;AAAA,QACF;AAAA,MACF,CAAC;AACD,eAAS,QAAQ,UAAU,EAAE,WAAW,KAAK,CAAC;AAAA,IAChD;AAAA,IAEQ,oBAAoB;AAC1B,MAAC,SAAiB,iBAAiB,8BAA8B,CAAC,UAAuB;AACvF,YAAI,CAAC,MAAM;AACT;AACF,cAAM,SAAS,MAAM;AACrB,QAAC,MAAM,aAAa,EAAE,CAAC,EAAU,wBAAwB;AAAA,MAC3D,CAAC;AACD,MAAC,SAAiB,iBAAiB,gCAAgC,CAAC,UAAuB;AACzF,YAAI,CAAC,MAAM;AACT;AACF,cAAM,SAAS,MAAM;AACrB,YAAK,MAAM,aAAa,EAAE,CAAC,EAAU,0BAA0B;AAC7D,iBAAQ,MAAM,aAAa,EAAE,CAAC,EAAU;AAAA,MAC5C,CAAC;AAAA,IACH;AAAA,IAEQ,uBAAuB,KAAU,QAAgB,IAAyC;AAChG,YAAM,SAAS,IAAI,MAAM;AACzB,UAAI,CAAC;AACH;AACF,UAAI,MAAM,IAAI,YAAY,MAAa;AACrC,cAAM,SAAS,OAAO,KAAK,MAAM,GAAG,IAAI;AACxC,WAAG,MAAM,MAAM;AACf,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IAEQ,4BAA4B,KAAU,QAAgB,IAAyC;AACrG,YAAM,SAAS,IAAI,MAAM;AACzB,UAAI,CAAC;AACH;AACF,UAAI,MAAM,IAAI,kBAAkB,MAAa;AAC3C,cAAM,SAAS,MAAM,OAAO,KAAK,MAAM,GAAG,IAAI;AAC9C,WAAG,MAAM,MAAM;AACf,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IAEQ,uBAAuB,KAAU,MAAc,IAAyC;AAC9F,YAAM,aAAa,OAAO,yBAAyB,KAAK,IAAI;AAC5D,aAAO,eAAe,KAAK,MAAM;AAAA,QAC/B,GAAG;AAAA,QACH,KAAK,WAAW;AACd,gBAAM,SAAS,WAAW,IAAK,KAAK,IAAI;AACxC,aAAG,MAAM,MAAM;AACf,iBAAO;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAAA,IAEQ,iBAAiB,MAAwB;AAC/C,iBAAW,YAAY;AACrB,yBAAiB,SAAS,MAAM,EAAE,mBAAmB;AAAA,IACzD;AAAA,IAEQ,sBAAsB,OAAsB;AAClD,UAAI,KAAK;AACP;AACF,WAAK,kBAAkB,IAAI,KAAK;AAAA,IAClC;AAAA,IAEQ,0CAA0C,OAAsB,WAAyC;AAC/G,YAAM,OAAO,iBAAiB,KAAK;AACnC,UAAI,KAAK,kBAAkB,IAAI,KAAK,KAAM,aAAa,KAAK,YAAY,QAAY;AAClF,aAAK,kBAAkB,OAAO,KAAK;AACnC,YAAI;AACF,eAAK,UAAU,KAAK,cAAc,KAAK;AAAA,QACzC,SAAS,GAAG;AAEV,eAAK,UAAU;AAAA,QACjB;AAAA,MACF;AACA,aAAO,KAAK;AAAA,IACd;AAAA;AAAA,IAGQ,kCAAkC,OAAsB,gBAAqD;AACnH,YAAM,OAAO,iBAAiB,KAAK;AACnC,UAAI,KAAK,kBAAkB,IAAI,KAAK,GAAG;AACrC,aAAK,kBAAkB,OAAO,KAAK;AACnC,YAAI;AACF,eAAK,UAAU,KAAK,cAAc,KAAK;AACvC,eAAK,SAAS;AACd,iBAAO,KAAK;AAAA,QACd,SAAS,GAAG;AAAA,QAEZ;AAAA,MACF;AACA,aAAO,KAAK,WAAW,SAAY,SAAY,iBAAiB,KAAK;AAAA,IACvE;AAAA,IAEA,WAAW,eAAqD,SAAiB;AAC/E,MAAC,cAAsB,gBAAgB,IAAI;AAAA,IAC7C;AAAA,IAEA,QAAQ;AACN,WAAK,kBAAkB,MAAM;AAE7B,YAAM,YAAY,CAAC,SAA4B;AAC7C,wBAAgB,IAAI;AACpB,YAAI,KAAK,aAAa,KAAK,cAAc;AACvC,gBAAM,UAAU;AAChB,cAAI,QAAQ;AACV,sBAAU,QAAQ,UAAU;AAAA,QAChC;AACA,iBAAS,QAAQ,KAAK,YAAY,OAAO,QAAQ,MAAM;AACrD,oBAAU,KAAK;AAAA,MACnB;AACA,gBAAU,SAAS,eAAe;AAClC,gBAAU,KAAK,SAAS;AAAA,IAC1B;AAAA,IAEQ,wBAAwB,MAAc,OAAe,WAAmB;AAC9E,UAAI,SAAS;AACX,eAAO;AAET,UAAI,UAAU,YAAY,MAAM,kBAAkB,SAAS;AACzD,eAAO;AAET,YAAM,CAAC,MAAM,GAAG,MAAM,IAAI,MAAM,MAAM,GAAG;AACzC,UAAI,SAAS,eAAe,OAAO,UAAU;AAC3C,eAAO;AAET,YAAM,kBAAkB,OAAO,UAAU,WAAS,MAAM,KAAK,EAAE,WAAW,UAAU,CAAC;AACrF,UAAI,kBAAkB;AACpB,eAAO,eAAe,IAAI;AAE5B,aAAO,GAAG,IAAI,KAAK,OAAO,KAAK,IAAI,CAAC;AAAA,IACtC;AAAA,IAEQ,aAAa,KAAqB;AACxC,UAAI,IAAI,WAAW,aAAa,KAAK,IAAI,WAAW,WAAW;AAC7D,eAAO;AACT,aAAO;AAAA,IACT;AAAA,IAEQ,gBAAgB,QAAwB;AAC9C,aAAO,OAAO,MAAM,GAAG,EAAE,IAAI,SAAO;AAClC,cAAM,IAAI,KAAK;AACf,cAAM,aAAa,IAAI,YAAY,GAAG;AACtC,YAAI,eAAe;AACjB,iBAAO,KAAK,aAAa,GAAG;AAC9B,eAAO,KAAK,aAAa,IAAI,UAAU,GAAG,UAAU,EAAE,KAAK,CAAC,IAAI,IAAI,UAAU,UAAU;AAAA,MAC1F,CAAC,EAAE,KAAK,IAAI;AAAA,IACd;AAAA,IAEQ,YAAY,MAAc,KAAqB;AACrD,UAAI,QAAQ;AACV,eAAO;AACT,UAAI;AACF,eAAO,IAAI,IAAI,KAAK,IAAI,EAAE;AAAA,MAC5B,SAAS,GAAG;AACV,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IAEQ,cAAc,OAA8B;AAClD,UAAI,YAAY;AAChB,aAAO,UAAU;AACf,oBAAY,UAAU;AACxB,UAAI,UAAU;AACZ,eAAO,UAAU,UAAU;AAC7B,aAAO,SAAS;AAAA,IAClB;AAAA,IAEQ,cAAc,OAA8B;AAClD,WAAK,qBAAqB;AAC1B,UAAI;AACF,cAAM,QAAkB,CAAC;AACzB,mBAAW,QAAQ,MAAM;AACvB,gBAAM,KAAK,KAAK,OAAO;AACzB,eAAO,MAAM,KAAK,IAAI;AAAA,MACxB,UAAE;AACA,aAAK,qBAAqB;AAAA,MAC5B;AAAA,IACF;AAAA,IAEA,kBAA4C;AAC1C,YAAM,YAAY,YAAY,IAAI;AAClC,YAAM,iBAAiB,EAAE,KAAK;AAC9B,UAAI,cAAc;AAClB,UAAI,mBAAmB;AACvB,UAAI,cAAc;AAGlB,WAAK,iBAAiB,KAAK,UAAU,YAAY,CAAC;AAElD,YAAM,wBAAwB,oBAAI,IAAY;AAE9C,YAAM,YAAY,CAAC,SAA8E;AAC/F,cAAM,WAAW,KAAK;AACtB,cAAM,WAAW,aAAa,KAAK,yBAAyB,aAAa,KAAK;AAE9E,YAAI,aAAa,KAAK,gBAClB,aAAa,KAAK,0BAClB,aAAa,KAAK;AACpB;AACF,YAAI,aAAa;AACf;AAEF,YAAI,aAAa,UAAU,aAAa,KAAK,cAAc;AACzD,gBAAM,MAAO,KAAiB,aAAa,KAAK,GAAG,YAAY;AAC/D,cAAI,QAAQ,aAAa,QAAQ;AAC/B;AAAA,QACJ;AACA,YAAI,kBAAkB,aAAa;AACjC;AACF,YAAI,aAAa,UAAW,KAAyB,UAAU,YAAY,MAAM;AAC/E;AAGF,aAAK,aAAa,YAAY,aAAa,YAAY;AACrD;AAEF,cAAM,OAAO,iBAAiB,IAAI;AAClC,cAAM,SAAgB,CAAC;AACvB,YAAI,SAAS,CAAC,CAAC,KAAK;AACpB,YAAI,aAAa;AAEjB,cAAM,cAAc,CAAC,UAAe;AAClC,mBAAS,UAAU,KAAK,OAAQ,OAAO,MAAM,MAAM;AACnD,iBAAO,KAAK,KAAK;AAAA,QACnB;AAEA,cAAM,iBAAiB,CAAC,MAA0D;AAChF,eAAK,mBAAmB;AACxB,cAAI;AACF,mBAAO,EAAE,QAAQ,MAAM,GAAG,CAAC,CAAC,iBAAiB,KAAK,IAAK,CAAC,GAAG,KAAK,IAAK,CAAC,CAAC,CAAC,EAAE;AAC5E,yBAAe;AACf,eAAK,MAAM,CAAC,gBAAgB,aAAa;AACzC,eAAK,SAAS;AACd,iBAAO,EAAE,QAAQ,OAAO,EAAE;AAAA,QAC5B;AAEA,YAAI,aAAa,KAAK,WAAW;AAC/B,gBAAM,QAAQ,KAAK,aAAa;AAChC,sBAAY,KAAK;AACjB,iBAAO,eAAe,KAAK;AAAA,QAC7B;AAEA,YAAI,aAAa,SAAS;AACxB,gBAAM,QAAS,KAA0B;AACzC,cAAI;AACJ,cAAI;AACF,sBAAU,KAAK,0CAA0C,KAAK;AAChE,oBAAU,WAAW,KAAK,eAAe;AACzC,sBAAY,OAAO;AAEnB;AACA,iBAAO,eAAe,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC;AAAA,QAC/C;AAEA,cAAM,QAAoC,CAAC;AAC3C,cAAMA,UAAuB,CAAC,UAAU,KAAK;AAE7C,cAAM,aAAa,CAAC,UAAgB;AAClC,gBAAM,WAAW,UAAU,KAAK;AAChC,cAAI,UAAU;AACZ,YAAAA,QAAO,KAAK,SAAS,CAAC;AACtB,wBAAY,KAAK;AACjB,qBAAS,UAAU,SAAS;AAAA,UAC9B;AAAA,QACF;AAEA,cAAM,uBAAuB,CAAC,UAAyB;AACrD,gBAAM,WAAW,gBAAgB,KAAK;AACtC,cAAI,UAAU;AACZ,YAAAA,QAAO,KAAK,SAAS,CAAC;AACtB,wBAAY,KAAK;AACjB,qBAAS,UAAU,SAAS;AAAA,UAC9B;AAAA,QACF;AAEA,YAAI,aAAa,KAAK;AACpB,gBAAM,gBAAgB,IAAI;AAE5B,YAAI,aAAa,KAAK,cAAc;AAClC,gBAAM,UAAU;AAChB,cAAI,QAAQ,UAAU,SAAS,GAAG,KAAK,OAAO,gBAAgB,IAAI,QAAQ,SAAS;AACjF,kCAAsB,IAAI,QAAQ,SAAS;AAC7C,cAAI,aAAa,WAAW,aAAa,YAAY;AACnD,kBAAM,QAAS,QAA6B;AAC5C,wBAAY,eAAe;AAC3B,wBAAY,KAAK;AACjB,kBAAM,eAAe,IAAI;AAAA,UAC3B;AACA,cAAI,aAAa,WAAW,CAAC,YAAY,OAAO,EAAE,SAAU,QAA6B,IAAI,GAAG;AAC9F,kBAAM,QAAS,QAA6B,UAAU,SAAS;AAC/D,wBAAY,iBAAiB;AAC7B,wBAAY,KAAK;AACjB,kBAAM,iBAAiB,IAAI;AAAA,UAC7B;AACA,cAAI,aAAa,UAAU;AACzB,kBAAM,QAAS,QAA8B,WAAW,SAAS;AACjE,wBAAY,kBAAkB;AAC9B,wBAAY,KAAK;AACjB,kBAAM,kBAAkB,IAAI;AAAA,UAC9B;AACA,cAAI,aAAa,YAAY,aAAa,YAAY,aAAa,SAAS;AAC1E,kBAAM,eAAgB,QAAwB,sBAAsB;AACpE,kBAAM,QAAQ,KAAK,UAAU;AAAA,cAC3B,MAAM,aAAa;AAAA,cACnB,KAAK,aAAa;AAAA,cAClB,OAAO,aAAa;AAAA,cACpB,QAAQ,aAAa;AAAA,YACvB,CAAC;AACD,wBAAY,sBAAsB;AAClC,wBAAY,KAAK;AACjB,kBAAM,sBAAsB,IAAI;AAAA,UAClC;AACA,cAAK,QAAwB,WAAY,QAAwB,WAAY,QAAwB,QAAQ,eAAe,GAAG;AAC7H,kBAAM,QAAQ;AACd,wBAAY,qBAAqB;AACjC,wBAAY,KAAK;AACjB,kBAAM,qBAAqB,IAAI;AAAA,UACjC;AACA,cAAI,aAAa,YAAa,QAA8B,MAAM;AAChE,kBAAM,QAAS,QAA8B,QAAQ,QAAQ,IAAI,UAAU;AAC3E,wBAAY,oBAAoB;AAChC,wBAAY,KAAK;AACjB,kBAAM,oBAAoB,IAAI;AAAA,UAChC;AACA,cAAI,QAAQ,WAAW;AACrB,wBAAY,mBAAmB;AAC/B,wBAAY,QAAQ,SAAS;AAC7B,kBAAM,mBAAmB,IAAI,KAAK,QAAQ;AAAA,UAC5C;AACA,cAAI,QAAQ,YAAY;AACtB,wBAAY,oBAAoB;AAChC,wBAAY,QAAQ,UAAU;AAC9B,kBAAM,oBAAoB,IAAI,KAAK,QAAQ;AAAA,UAC7C;AACA,cAAI,QAAQ,YAAY;AACtB,cAAE;AACF,uBAAW,QAAQ,UAAU;AAC7B,cAAE;AAAA,UACJ;AACA,cAAI,2BAA2B,SAAS;AACtC,wBAAY,gBAAgB;AAC5B,wBAAY,QAAQ,uBAAuB,CAAC;AAC5C,kBAAM,gBAAgB,IAAI,QAAQ,uBAAuB;AAAA,UAC3D;AAAA,QACF;AAEA,YAAI,aAAa,QAAQ;AACvB,YAAE;AAEF,eAAK,UAAU,aAAa,QAAQ,SAAS,OAAO;AACpD,qBAAW,KAAK,SAAS;AAAA,QAC3B;AACA,iBAAS,QAAQ,KAAK,YAAY,OAAO,QAAQ,MAAM;AACrD,qBAAW,KAAK;AAClB,YAAI,aAAa;AACf,YAAE;AACJ,oBAAY,UAAU;AACtB,YAAI,uBAAuB;AAC3B,YAAI,KAAK,cAAe,oBAAoB;AAC1C,iCAAuB,KAAK;AAAA,iBACrB,KAAK,aAAa,KAAK;AAC9B,iCAAuB;AACzB,YAAI,sBAAsB;AACxB,qBAAW,SAAU,qBAA6B,sBAAsB,CAAC;AACvE,iCAAqB,KAAK;AAC5B,sBAAY,UAAU;AAAA,QACxB;AAGA,YAAI,aAAa,YAAY,aAAa,SAAS;AACjD,gBAAM,UAAU;AAChB,gBAAM,UAAW,QAAgB,gBAAgB;AACjD,gBAAM,OAAO;AACb,gBAAM,QAAQ,UAAU,aAAa,OAAO,KAAK;AACjD,sBAAY,IAAI;AAChB,sBAAY,KAAK;AACjB,gBAAM,IAAI,IAAI;AAAA,QAChB;AAGA,YAAI,aAAa,UAAU,sBAAsB,MAAM;AACrD,gBAAM,QAAQ,CAAC,GAAG,qBAAqB,EAAE,KAAK,GAAG;AACjD,sBAAY,wBAAwB;AACpC,sBAAY,KAAK;AACjB,gBAAM,wBAAwB,IAAI;AAAA,QACpC;AAGA,YAAI,aAAa,SAAS,aAAa,WAAW;AAChD,gBAAM,QAAQ,aAAa,YAAY,KAAK,KAAK,aAAc,KAA0B,UAAU;AACnG,sBAAY,oBAAoB;AAChC,sBAAY,KAAK;AACjB,gBAAM,oBAAoB,IAAI;AAAA,QAChC;AAIA,YAAI,UAAU,KAAK,oBAAoB,CAAC;AACtC,iBAAO,eAAeA,OAAM;AAE9B,YAAI,aAAa,KAAK,cAAc;AAClC,gBAAM,UAAU;AAChB,mBAAS,IAAI,GAAG,IAAI,QAAQ,WAAW,QAAQ,KAAK;AAClD,kBAAM,OAAO,QAAQ,WAAW,CAAC,EAAE;AACnC,gBAAI,aAAa,UAAU,SAAS;AAClC;AACF,gBAAI,aAAa,aAAa,SAAS,SAAS,SAAS,YAAY,SAAS;AAC5E;AACF,gBAAI,aAAa,WAAW,SAAS;AACnC;AACF,gBAAI,aAAa,YAAY,SAAS;AACpC;AACF,gBAAI,QAAQ,QAAQ,WAAW,CAAC,EAAE;AAClC,gBAAI,aAAa;AACf,sBAAQ,KAAK,wBAAwB,MAAM,OAAQ,KAAyB,SAAS;AAAA,qBAC9E,SAAS,SAAU,aAAa;AACvC,sBAAQ,KAAK,aAAa,KAAK;AAAA,qBACxB,SAAS,YAAa,aAAa;AAC1C,sBAAQ,KAAK,gBAAgB,KAAK;AAAA,qBAC3B,SAAS,YAAa,aAAa;AAC1C,sBAAQ,KAAK,gBAAgB,KAAK;AAAA,qBAC3B,SAAS,UAAW,aAAa;AACxC,sBAAQ,KAAK,aAAa,KAAK;AAAA,qBACxB,KAAK,WAAW,IAAI;AAC3B,sBAAQ;AACV,wBAAY,IAAI;AAChB,wBAAY,KAAK;AACjB,kBAAM,IAAI,IAAI;AAAA,UAChB;AACA,sBAAY,UAAU;AAAA,QACxB;AAEA,YAAIA,QAAO,WAAW,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE;AAC7C,UAAAA,QAAO,IAAI;AACb,eAAO,eAAeA,OAAM;AAAA,MAC9B;AAEA,YAAM,kBAAkB,CAAC,UAA+D;AACtF,cAAM,OAAO,iBAAiB,KAAK;AACnC,cAAM,aAAa,KAAK;AACxB,cAAM,UAAU,KAAK;AAAA,UAA0C;AAAA,UAAO;AAAA;AAAA,QAAoB;AAC1F,YAAI,YAAY;AACd,iBAAO,EAAE,QAAQ,MAAM,GAAG,CAAC,CAAC,iBAAiB,KAAK,IAAK,CAAC,GAAG,KAAK,IAAK,CAAC,CAAC,CAAC,EAAE;AAC5E,aAAK,MAAM,CAAC,gBAAgB,aAAa;AACzC,eAAO;AAAA,UACL,QAAQ;AAAA,UACR,GAAG,CAAC,YAAY;AAAA,YACd,CAAC,oBAAoB,GAAG;AAAA,UAC1B,CAAC;AAAA,QACH;AAAA,MACF;AAEA,UAAI;AACJ,UAAI,SAAS,iBAAiB;AAC5B,cAAM,EAAE,EAAE,IAAI,UAAU,SAAS,eAAe;AAChD,eAAO;AAAA,MACT,OAAO;AACL,eAAO,CAAC,MAAM;AAAA,MAChB;AAEA,YAAM,SAAuB;AAAA,QAC3B;AAAA,QACA,SAAS,SAAS,UAAU,SAAS,QAAQ,OAAO;AAAA,QACpD,mBAAmB,CAAC;AAAA,QACpB,UAAU;AAAA,UACR,OAAO,OAAO;AAAA,UACd,QAAQ,OAAO;AAAA,QACjB;AAAA,QACA,KAAK,SAAS;AAAA,QACd,UAAU,KAAK,IAAI;AAAA,QACnB,gBAAgB;AAAA,MAClB;AAEA,iBAAW,SAAS,KAAK,mBAAmB;AAC1C,YAAI,MAAM,SAAS;AACjB;AACF,cAAM,UAAU,KAAK,kCAAkC,OAAO,cAAc;AAC5E,YAAI,YAAY,QAAW;AAEzB;AAAA,QACF;AACA,cAAM,OAAO,KAAK,cAAc,KAAK;AACrC,cAAM,MAAM,WAAW,KAAK,YAAY,MAAM,MAAM,IAAK,CAAC;AAC1D,eAAO,kBAAkB,KAAK,EAAE,KAAK,SAAS,aAAa,WAAW,CAAE;AAAA,MAC1E;AAEA,aAAO,iBAAiB,YAAY,IAAI,IAAI;AAC5C,aAAO;AAAA,IACT;AAAA,EACF;AAEA,EAAC,OAAe,gBAAgB,IAAI,IAAI,SAAS;AACnD;",
  "names": ["result"]
}
