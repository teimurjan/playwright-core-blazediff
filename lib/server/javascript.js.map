{
  "version": 3,
  "sources": ["../../src/server/javascript.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SdkObject } from './instrumentation';\nimport * as rawUtilityScriptSource from '../generated/utilityScriptSource';\nimport { isUnderTest } from '../utils';\nimport { serializeAsCallArgument } from '../utils/isomorphic/utilityScriptSerializers';\nimport { LongStandingScope } from '../utils/isomorphic/manualPromise';\n\nimport type * as dom from './dom';\nimport type { UtilityScript } from '@injected/utilityScript';\n\ninterface TaggedAsJSHandle<T> {\n  __jshandle: T;\n}\ninterface TaggedAsElementHandle<T> {\n  __elementhandle: T;\n}\ntype NoHandles<Arg> = Arg extends TaggedAsJSHandle<any> ? never : (Arg extends object ? { [Key in keyof Arg]: NoHandles<Arg[Key]> } : Arg);\ntype Unboxed<Arg> =\n  Arg extends TaggedAsElementHandle<infer T> ? T :\n    Arg extends TaggedAsJSHandle<infer T> ? T :\n      Arg extends NoHandles<Arg> ? Arg :\n        Arg extends [infer A0] ? [Unboxed<A0>] :\n          Arg extends [infer A0, infer A1] ? [Unboxed<A0>, Unboxed<A1>] :\n            Arg extends [infer A0, infer A1, infer A2] ? [Unboxed<A0>, Unboxed<A1>, Unboxed<A2>] :\n              Arg extends Array<infer T> ? Array<Unboxed<T>> :\n                Arg extends object ? { [Key in keyof Arg]: Unboxed<Arg[Key]> } :\n                  Arg;\nexport type Func0<R> = string | (() => R | Promise<R>);\nexport type Func1<Arg, R> = string | ((arg: Unboxed<Arg>) => R | Promise<R>);\nexport type FuncOn<On, Arg2, R> = string | ((on: On, arg2: Unboxed<Arg2>) => R | Promise<R>);\nexport type SmartHandle<T> = T extends Node ? dom.ElementHandle<T> : JSHandle<T>;\n\nexport interface ExecutionContextDelegate {\n  rawEvaluateJSON(expression: string): Promise<any>;\n  rawEvaluateHandle(context: ExecutionContext, expression: string): Promise<JSHandle>;\n  evaluateWithArguments(expression: string, returnByValue: boolean, utilityScript: JSHandle, values: any[], handles: JSHandle[]): Promise<any>;\n  getProperties(object: JSHandle): Promise<Map<string, JSHandle>>;\n  releaseHandle(handle: JSHandle): Promise<void>;\n}\n\nexport class ExecutionContext extends SdkObject {\n  readonly delegate: ExecutionContextDelegate;\n  private _utilityScriptPromise: Promise<JSHandle> | undefined;\n  private _contextDestroyedScope = new LongStandingScope();\n  readonly worldNameForTest: string;\n\n  constructor(parent: SdkObject, delegate: ExecutionContextDelegate, worldNameForTest: string) {\n    super(parent, 'execution-context');\n    this.worldNameForTest = worldNameForTest;\n    this.delegate = delegate;\n  }\n\n  contextDestroyed(reason: string) {\n    this._contextDestroyedScope.close(new Error(reason));\n  }\n\n  async _raceAgainstContextDestroyed<T>(promise: Promise<T>): Promise<T> {\n    return this._contextDestroyedScope.race(promise);\n  }\n\n  rawEvaluateJSON(expression: string): Promise<any> {\n    return this._raceAgainstContextDestroyed(this.delegate.rawEvaluateJSON(expression));\n  }\n\n  rawEvaluateHandle(expression: string): Promise<JSHandle> {\n    return this._raceAgainstContextDestroyed(this.delegate.rawEvaluateHandle(this, expression));\n  }\n\n  async evaluateWithArguments(expression: string, returnByValue: boolean, values: any[], handles: JSHandle[]): Promise<any> {\n    const utilityScript = await this.utilityScript();\n    return this._raceAgainstContextDestroyed(this.delegate.evaluateWithArguments(expression, returnByValue, utilityScript, values, handles));\n  }\n\n  getProperties(object: JSHandle): Promise<Map<string, JSHandle>> {\n    return this._raceAgainstContextDestroyed(this.delegate.getProperties(object));\n  }\n\n  releaseHandle(handle: JSHandle): Promise<void> {\n    return this.delegate.releaseHandle(handle);\n  }\n\n  adoptIfNeeded(handle: JSHandle): Promise<JSHandle> | null {\n    return null;\n  }\n\n  utilityScript(): Promise<JSHandle<UtilityScript>> {\n    if (!this._utilityScriptPromise) {\n      const source = `\n      (() => {\n        const module = {};\n        ${rawUtilityScriptSource.source}\n        return new (module.exports.UtilityScript())(globalThis, ${isUnderTest()});\n      })();`;\n      this._utilityScriptPromise = this._raceAgainstContextDestroyed(this.delegate.rawEvaluateHandle(this, source))\n          .then(handle => {\n            handle._setPreview('UtilityScript');\n            return handle;\n          });\n    }\n    return this._utilityScriptPromise;\n  }\n\n  async doSlowMo() {\n    // overridden in FrameExecutionContext\n  }\n}\n\nexport class JSHandle<T = any> extends SdkObject {\n  __jshandle: T = true as any;\n  readonly _context: ExecutionContext;\n  _disposed = false;\n  readonly _objectId: string | undefined;\n  readonly _value: any;\n  private _objectType: string;\n  protected _preview: string;\n  private _previewCallback: ((preview: string) => void) | undefined;\n\n  constructor(context: ExecutionContext, type: string, preview: string | undefined, objectId?: string, value?: any) {\n    super(context, 'handle');\n    this._context = context;\n    this._objectId = objectId;\n    this._value = value;\n    this._objectType = type;\n    this._preview = this._objectId ? preview || `JSHandle@${this._objectType}` : String(value);\n    if (this._objectId && (globalThis as any).leakedJSHandles)\n      (globalThis as any).leakedJSHandles.set(this, new Error('Leaked JSHandle'));\n  }\n\n  async evaluate<R, Arg>(pageFunction: FuncOn<T, Arg, R>, arg?: Arg): Promise<R> {\n    return evaluate(this._context, true /* returnByValue */, pageFunction, this, arg);\n  }\n\n  async evaluateHandle<R, Arg>(pageFunction: FuncOn<T, Arg, R>, arg?: Arg): Promise<SmartHandle<R>> {\n    return evaluate(this._context, false /* returnByValue */, pageFunction, this, arg);\n  }\n\n  async evaluateExpression(expression: string, options: { isFunction?: boolean }, arg: any) {\n    const value = await evaluateExpression(this._context, expression, { ...options, returnByValue: true }, this, arg);\n    await this._context.doSlowMo();\n    return value;\n  }\n\n  async evaluateExpressionHandle(expression: string, options: { isFunction?: boolean }, arg: any): Promise<JSHandle<any>> {\n    const value = await evaluateExpression(this._context, expression, { ...options, returnByValue: false }, this, arg);\n    await this._context.doSlowMo();\n    return value;\n  }\n\n  async getProperty(propertyName: string): Promise<JSHandle> {\n    const objectHandle = await this.evaluateHandle((object: any, propertyName) => {\n      const result: any = { __proto__: null };\n      result[propertyName] = object[propertyName];\n      return result;\n    }, propertyName);\n    const properties = await objectHandle.getProperties();\n    const result = properties.get(propertyName)!;\n    objectHandle.dispose();\n    return result;\n  }\n\n  async getProperties(): Promise<Map<string, JSHandle>> {\n    if (!this._objectId)\n      return new Map();\n    return this._context.getProperties(this);\n  }\n\n  rawValue() {\n    return this._value;\n  }\n\n  async jsonValue(): Promise<T> {\n    if (!this._objectId)\n      return this._value;\n    const script = `(utilityScript, ...args) => utilityScript.jsonValue(...args)`;\n    return this._context.evaluateWithArguments(script, true, [true], [this]);\n  }\n\n  asElement(): dom.ElementHandle | null {\n    return null;\n  }\n\n  dispose() {\n    if (this._disposed)\n      return;\n    this._disposed = true;\n    if (this._objectId) {\n      this._context.releaseHandle(this).catch(e => {});\n      if ((globalThis as any).leakedJSHandles)\n        (globalThis as any).leakedJSHandles.delete(this);\n    }\n  }\n\n  override toString(): string {\n    return this._preview;\n  }\n\n  _setPreviewCallback(callback: (preview: string) => void) {\n    this._previewCallback = callback;\n  }\n\n  preview(): string {\n    return this._preview;\n  }\n\n  worldNameForTest(): string {\n    return this._context.worldNameForTest;\n  }\n\n  _setPreview(preview: string) {\n    this._preview = preview;\n    if (this._previewCallback)\n      this._previewCallback(preview);\n  }\n}\n\nexport async function evaluate(context: ExecutionContext, returnByValue: boolean, pageFunction: Function | string, ...args: any[]): Promise<any> {\n  return evaluateExpression(context, String(pageFunction), { returnByValue, isFunction: typeof pageFunction === 'function' }, ...args);\n}\n\nexport async function evaluateExpression(context: ExecutionContext, expression: string, options: { returnByValue?: boolean, isFunction?: boolean }, ...args: any[]): Promise<any> {\n  expression = normalizeEvaluationExpression(expression, options.isFunction);\n  const handles: (Promise<JSHandle>)[] = [];\n  const toDispose: Promise<JSHandle>[] = [];\n  const pushHandle = (handle: Promise<JSHandle>): number => {\n    handles.push(handle);\n    return handles.length - 1;\n  };\n\n  args = args.map(arg => serializeAsCallArgument(arg, handle => {\n    if (handle instanceof JSHandle) {\n      if (!handle._objectId)\n        return { fallThrough: handle._value };\n      if (handle._disposed)\n        throw new JavaScriptErrorInEvaluate('JSHandle is disposed!');\n      const adopted = context.adoptIfNeeded(handle);\n      if (adopted === null)\n        return { h: pushHandle(Promise.resolve(handle)) };\n      toDispose.push(adopted);\n      return { h: pushHandle(adopted) };\n    }\n    return { fallThrough: handle };\n  }));\n\n  const utilityScriptObjects: JSHandle[] = [];\n  for (const handle of await Promise.all(handles)) {\n    if (handle._context !== context)\n      throw new JavaScriptErrorInEvaluate('JSHandles can be evaluated only in the context they were created!');\n    utilityScriptObjects.push(handle);\n  }\n\n  // See UtilityScript for arguments.\n  const utilityScriptValues = [options.isFunction, options.returnByValue, expression, args.length, ...args];\n\n  const script = `(utilityScript, ...args) => utilityScript.evaluate(...args)`;\n  try {\n    return await context.evaluateWithArguments(script, options.returnByValue || false, utilityScriptValues, utilityScriptObjects);\n  } finally {\n    toDispose.map(handlePromise => handlePromise.then(handle => handle.dispose()));\n  }\n}\n\nexport function parseUnserializableValue(unserializableValue: string): any {\n  if (unserializableValue === 'NaN')\n    return NaN;\n  if (unserializableValue === 'Infinity')\n    return Infinity;\n  if (unserializableValue === '-Infinity')\n    return -Infinity;\n  if (unserializableValue === '-0')\n    return -0;\n}\n\nexport function normalizeEvaluationExpression(expression: string, isFunction: boolean | undefined): string {\n  expression = expression.trim();\n\n  if (isFunction) {\n    try {\n      new Function('(' + expression + ')');\n    } catch (e1) {\n      // This means we might have a function shorthand. Try another\n      // time prefixing 'function '.\n      if (expression.startsWith('async '))\n        expression = 'async function ' + expression.substring('async '.length);\n      else\n        expression = 'function ' + expression;\n      try {\n        new Function('(' + expression  + ')');\n      } catch (e2) {\n        // We tried hard to serialize, but there's a weird beast here.\n        throw new Error('Passed function is not well-serializable!');\n      }\n    }\n  }\n\n  if (/^(async)?\\s*function(\\s|\\()/.test(expression))\n    expression = '(' + expression + ')';\n  return expression;\n}\n\n// Error inside the expression evaluation as opposed to a protocol error.\nexport class JavaScriptErrorInEvaluate extends Error {\n}\n\nexport function isJavaScriptErrorInEvaluate(error: Error) {\n  return error instanceof JavaScriptErrorInEvaluate;\n}\n\nexport function sparseArrayToString(entries: { name: string, value?: any }[]): string {\n  const arrayEntries = [];\n  for (const { name, value } of entries) {\n    const index = +name;\n    if (isNaN(index) || index < 0)\n      continue;\n    arrayEntries.push({ index, value });\n  }\n  arrayEntries.sort((a, b) => a.index - b.index);\n  let lastIndex = -1;\n  const tokens = [];\n  for (const { index, value } of arrayEntries) {\n    const emptyItems = index - lastIndex - 1;\n    if (emptyItems === 1)\n      tokens.push(`empty`);\n    else if (emptyItems > 1)\n      tokens.push(`empty x ${emptyItems}`);\n    tokens.push(String(value));\n    lastIndex = index;\n  }\n\n  return '[' + tokens.join(', ') + ']';\n}\n"],
  "mappings": "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",
  "names": ["propertyName", "result"]
}
