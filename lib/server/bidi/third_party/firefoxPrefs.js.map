{
  "version": 3,
  "sources": ["../../../../src/server/bidi/third_party/firefoxPrefs.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Copied from upstream: https://github.com/puppeteer/puppeteer/blob/main/packages/browsers/src/browser-data/firefox.ts\n\nimport fs from 'fs';\nimport path from 'path';\n\n/* eslint-disable curly */\n\ninterface ProfileOptions {\n  preferences: Record<string, unknown>;\n  path: string;\n}\n\nexport async function createProfile(options: ProfileOptions): Promise<void> {\n  if (!fs.existsSync(options.path)) {\n    await fs.promises.mkdir(options.path, {\n      recursive: true,\n    });\n  }\n  await writePreferences({\n    preferences: {\n      ...defaultProfilePreferences(options.preferences),\n      ...options.preferences,\n    },\n    path: options.path,\n  });\n}\n\nfunction defaultProfilePreferences(\n  extraPrefs: Record<string, unknown>\n): Record<string, unknown> {\n  const server = 'dummy.test';\n\n  const defaultPrefs = {\n    // Make sure Shield doesn't hit the network.\n    'app.normandy.api_url': '',\n    // Disable Firefox old build background check\n    'app.update.checkInstallTime': false,\n    // Disable automatically upgrading Firefox\n    'app.update.disabledForTesting': true,\n\n    // Increase the APZ content response timeout to 1 minute\n    'apz.content_response_timeout': 60000,\n\n    // Prevent various error message on the console\n    // jest-puppeteer asserts that no error message is emitted by the console\n    'browser.contentblocking.features.standard':\n      '-tp,tpPrivate,cookieBehavior0,-cm,-fp',\n\n    // Enable the dump function: which sends messages to the system\n    // console\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115\n    'browser.dom.window.dump.enabled': true,\n\n    // Make sure newtab weather doesn't hit the network to retrieve weather data.\n    'browser.newtabpage.activity-stream.discoverystream.region-weather-config': '',\n\n    // Make sure newtab wallpapers don't hit the network to retrieve wallpaper data.\n    'browser.newtabpage.activity-stream.newtabWallpapers.enabled': false,\n    'browser.newtabpage.activity-stream.newtabWallpapers.v2.enabled': false,\n\n    // Make sure Topsites doesn't hit the network to retrieve sponsored tiles.\n    'browser.newtabpage.activity-stream.showSponsoredTopSites': false,\n\n    // Disable topstories\n    'browser.newtabpage.activity-stream.feeds.system.topstories': false,\n\n    // Always display a blank page\n    'browser.newtabpage.enabled': false,\n\n    // Background thumbnails in particular cause grief: and disabling\n    // thumbnails in general cannot hurt\n    'browser.pagethumbnails.capturing_disabled': true,\n\n    // Disable safebrowsing components.\n    'browser.safebrowsing.blockedURIs.enabled': false,\n    'browser.safebrowsing.downloads.enabled': false,\n    'browser.safebrowsing.malware.enabled': false,\n    'browser.safebrowsing.phishing.enabled': false,\n\n    // Disable updates to search engines.\n    'browser.search.update': false,\n    // Do not restore the last open set of tabs if the browser has crashed\n    'browser.sessionstore.resume_from_crash': false,\n    // Skip check for default browser on startup\n    'browser.shell.checkDefaultBrowser': false,\n\n    // Disable newtabpage\n    'browser.startup.homepage': 'about:blank',\n    // Do not redirect user when a milstone upgrade of Firefox is detected\n    'browser.startup.homepage_override.mstone': 'ignore',\n    // Start with a blank page about:blank\n    'browser.startup.page': 0,\n\n    // Do not allow background tabs to be zombified on Android: otherwise for\n    // tests that open additional tabs: the test harness tab itself might get\n    // unloaded\n    'browser.tabs.disableBackgroundZombification': false,\n    // Do not warn when closing all other open tabs\n    'browser.tabs.warnOnCloseOtherTabs': false,\n    // Do not warn when multiple tabs will be opened\n    'browser.tabs.warnOnOpen': false,\n\n    // Do not automatically offer translations, as tests do not expect this.\n    'browser.translations.automaticallyPopup': false,\n\n    // Disable the UI tour.\n    'browser.uitour.enabled': false,\n    // Turn off search suggestions in the location bar so as not to trigger\n    // network connections.\n    'browser.urlbar.suggest.searches': false,\n    // Disable first run splash page on Windows 10\n    'browser.usedOnWindows10.introURL': '',\n    // Do not warn on quitting Firefox\n    'browser.warnOnQuit': false,\n\n    // Defensively disable data reporting systems\n    'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,\n    'datareporting.healthreport.logging.consoleEnabled': false,\n    'datareporting.healthreport.service.enabled': false,\n    'datareporting.healthreport.service.firstRun': false,\n    'datareporting.healthreport.uploadEnabled': false,\n\n    // Do not show datareporting policy notifications which can interfere with tests\n    'datareporting.policy.dataSubmissionEnabled': false,\n    'datareporting.policy.dataSubmissionPolicyBypassNotification': true,\n\n    // DevTools JSONViewer sometimes fails to load dependencies with its require.js.\n    // This doesn't affect Puppeteer but spams console (Bug 1424372)\n    'devtools.jsonview.enabled': false,\n\n    // Disable popup-blocker\n    'dom.disable_open_during_load': false,\n\n    // Enable the support for File object creation in the content process\n    // Required for |Page.setFileInputFiles| protocol method.\n    'dom.file.createInChild': true,\n\n    // Disable the ProcessHangMonitor\n    'dom.ipc.reportProcessHangs': false,\n\n    // Disable slow script dialogues\n    'dom.max_chrome_script_run_time': 0,\n    'dom.max_script_run_time': 0,\n\n    // Disable background timer throttling to allow tests to run in parallel\n    // without a decrease in performance.\n    'dom.min_background_timeout_value': 0,\n    'dom.min_background_timeout_value_without_budget_throttling': 0,\n    'dom.timeout.enable_budget_timer_throttling': false,\n\n    // Disable HTTPS-First upgrades\n    'dom.security.https_first': false,\n\n    // Only load extensions from the application and user profile\n    // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION\n    'extensions.autoDisableScopes': 0,\n    'extensions.enabledScopes': 5,\n\n    // Disable metadata caching for installed add-ons by default\n    'extensions.getAddons.cache.enabled': false,\n\n    // Disable installing any distribution extensions or add-ons.\n    'extensions.installDistroAddons': false,\n\n    // Disabled screenshots extension\n    'extensions.screenshots.disabled': true,\n\n    // Turn off extension updates so they do not bother tests\n    'extensions.update.enabled': false,\n\n    // Turn off extension updates so they do not bother tests\n    'extensions.update.notifyUser': false,\n\n    // Make sure opening about:addons will not hit the network\n    'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,\n\n    // Allow the application to have focus even it runs in the background\n    'focusmanager.testmode': true,\n\n    // Disable useragent updates\n    'general.useragent.updates.enabled': false,\n\n    // Always use network provider for geolocation tests so we bypass the\n    // macOS dialog raised by the corelocation provider\n    'geo.provider.testing': true,\n\n    // Do not scan Wifi\n    'geo.wifi.scan': false,\n\n    // No hang monitor\n    'hangmonitor.timeout': 0,\n\n    // Show chrome errors and warnings in the error console\n    'javascript.options.showInConsole': true,\n\n    // Do not throttle rendering (requestAnimationFrame) in background tabs\n    'layout.testing.top-level-always-active': true,\n\n    // Disable download and usage of OpenH264: and Widevine plugins\n    'media.gmp-manager.updateEnabled': false,\n\n    // Disable the GFX sanity window\n    'media.sanity-test.disabled': true,\n\n    // Disable connectivity service pings\n    'network.connectivity-service.enabled': false,\n\n    // Disable experimental feature that is only available in Nightly\n    'network.cookie.sameSite.laxByDefault': false,\n\n    // Do not prompt for temporary redirects\n    'network.http.prompt-temp-redirect': false,\n\n    // Disable speculative connections so they are not reported as leaking\n    // when they are hanging around\n    'network.http.speculative-parallel-limit': 0,\n\n    // Do not automatically switch between offline and online\n    'network.manage-offline-status': false,\n\n    // Make sure SNTP requests do not hit the network\n    'network.sntp.pools': server,\n\n    // Disable Flash.\n    'plugin.state.flash': 0,\n\n    'privacy.trackingprotection.enabled': false,\n\n    // Can be removed once Firefox 89 is no longer supported\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1710839\n    'remote.enabled': true,\n\n    // Don't do network connections for mitm priming\n    'security.certerrors.mitm.priming.enabled': false,\n\n    // Local documents have access to all other local documents,\n    // including directory listings\n    'security.fileuri.strict_origin_policy': false,\n\n    // Do not wait for the notification button security delay\n    'security.notification_enable_delay': 0,\n\n    // Do not automatically fill sign-in forms with known usernames and\n    // passwords\n    'signon.autofillForms': false,\n\n    // Disable password capture, so that tests that include forms are not\n    // influenced by the presence of the persistent doorhanger notification\n    'signon.rememberSignons': false,\n\n    // Disable first-run welcome page\n    'startup.homepage_welcome_url': 'about:blank',\n\n    // Disable first-run welcome page\n    'startup.homepage_welcome_url.additional': '',\n\n    // Disable browser animations (tabs, fullscreen, sliding alerts)\n    'toolkit.cosmeticAnimations.enabled': false,\n\n    // Prevent starting into safe mode after application crashes\n    'toolkit.startup.max_resumed_crashes': -1,\n  };\n\n  return Object.assign(defaultPrefs, extraPrefs);\n}\n\n/**\n * Populates the user.js file with custom preferences as needed to allow\n * Firefox's CDP support to properly function. These preferences will be\n * automatically copied over to prefs.js during startup of Firefox. To be\n * able to restore the original values of preferences a backup of prefs.js\n * will be created.\n *\n * @param prefs - List of preferences to add.\n * @param profilePath - Firefox profile to write the preferences to.\n */\nasync function writePreferences(options: ProfileOptions): Promise<void> {\n  const prefsPath = path.join(options.path, 'prefs.js');\n  const lines = Object.entries(options.preferences).map(([key, value]) => {\n    return `user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n  });\n\n  // Use allSettled to prevent corruption\n  const result = await Promise.allSettled([\n    fs.promises.writeFile(path.join(options.path, 'user.js'), lines.join('\\n')),\n    // Create a backup of the preferences file if it already exitsts.\n    fs.promises.access(prefsPath, fs.constants.F_OK).then(\n        async () => {\n          await fs.promises.copyFile(\n              prefsPath,\n              path.join(options.path, 'prefs.js.playwright')\n          );\n        },\n        // Swallow only if file does not exist\n        () => {}\n    ),\n  ]);\n  for (const command of result) {\n    if (command.status === 'rejected') {\n      throw command.reason;\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["fs", "path"]
}
