{
  "version": 3,
  "sources": ["../../../../src/server/bidi/third_party/bidiKeyboard.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2024 Google Inc.\n * Modifications copyright (c) Microsoft Corporation.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Copied from upstream: https://github.com/puppeteer/puppeteer/blob/main/packages/puppeteer-core/src/bidi/Input.ts\n\n/* eslint-disable curly */\n\nexport const getBidiKeyValue = (keyName: string) => {\n  switch (keyName) {\n    case '\\r':\n    case '\\n':\n      keyName = 'Enter';\n      break;\n  }\n  // Measures the number of code points rather than UTF-16 code units.\n  if ([...keyName].length === 1) {\n    return keyName;\n  }\n  switch (keyName) {\n    case 'Cancel':\n      return '\\uE001';\n    case 'Help':\n      return '\\uE002';\n    case 'Backspace':\n      return '\\uE003';\n    case 'Tab':\n      return '\\uE004';\n    case 'Clear':\n      return '\\uE005';\n    case 'Enter':\n      return '\\uE007';\n    case 'Shift':\n    case 'ShiftLeft':\n      return '\\uE008';\n    case 'Control':\n    case 'ControlLeft':\n      return '\\uE009';\n    case 'Alt':\n    case 'AltLeft':\n      return '\\uE00A';\n    case 'Pause':\n      return '\\uE00B';\n    case 'Escape':\n      return '\\uE00C';\n    case 'PageUp':\n      return '\\uE00E';\n    case 'PageDown':\n      return '\\uE00F';\n    case 'End':\n      return '\\uE010';\n    case 'Home':\n      return '\\uE011';\n    case 'ArrowLeft':\n      return '\\uE012';\n    case 'ArrowUp':\n      return '\\uE013';\n    case 'ArrowRight':\n      return '\\uE014';\n    case 'ArrowDown':\n      return '\\uE015';\n    case 'Insert':\n      return '\\uE016';\n    case 'Delete':\n      return '\\uE017';\n    case 'NumpadEqual':\n      return '\\uE019';\n    case 'Numpad0':\n      return '\\uE01A';\n    case 'Numpad1':\n      return '\\uE01B';\n    case 'Numpad2':\n      return '\\uE01C';\n    case 'Numpad3':\n      return '\\uE01D';\n    case 'Numpad4':\n      return '\\uE01E';\n    case 'Numpad5':\n      return '\\uE01F';\n    case 'Numpad6':\n      return '\\uE020';\n    case 'Numpad7':\n      return '\\uE021';\n    case 'Numpad8':\n      return '\\uE022';\n    case 'Numpad9':\n      return '\\uE023';\n    case 'NumpadMultiply':\n      return '\\uE024';\n    case 'NumpadAdd':\n      return '\\uE025';\n    case 'NumpadSubtract':\n      return '\\uE027';\n    case 'NumpadDecimal':\n      return '\\uE028';\n    case 'NumpadDivide':\n      return '\\uE029';\n    case 'F1':\n      return '\\uE031';\n    case 'F2':\n      return '\\uE032';\n    case 'F3':\n      return '\\uE033';\n    case 'F4':\n      return '\\uE034';\n    case 'F5':\n      return '\\uE035';\n    case 'F6':\n      return '\\uE036';\n    case 'F7':\n      return '\\uE037';\n    case 'F8':\n      return '\\uE038';\n    case 'F9':\n      return '\\uE039';\n    case 'F10':\n      return '\\uE03A';\n    case 'F11':\n      return '\\uE03B';\n    case 'F12':\n      return '\\uE03C';\n    case 'Meta':\n    case 'MetaLeft':\n      return '\\uE03D';\n    case 'ShiftRight':\n      return '\\uE050';\n    case 'ControlRight':\n      return '\\uE051';\n    case 'AltRight':\n      return '\\uE052';\n    case 'MetaRight':\n      return '\\uE053';\n    case 'Space':\n      return ' ';\n    case 'Digit0':\n      return '0';\n    case 'Digit1':\n      return '1';\n    case 'Digit2':\n      return '2';\n    case 'Digit3':\n      return '3';\n    case 'Digit4':\n      return '4';\n    case 'Digit5':\n      return '5';\n    case 'Digit6':\n      return '6';\n    case 'Digit7':\n      return '7';\n    case 'Digit8':\n      return '8';\n    case 'Digit9':\n      return '9';\n    case 'KeyA':\n      return 'a';\n    case 'KeyB':\n      return 'b';\n    case 'KeyC':\n      return 'c';\n    case 'KeyD':\n      return 'd';\n    case 'KeyE':\n      return 'e';\n    case 'KeyF':\n      return 'f';\n    case 'KeyG':\n      return 'g';\n    case 'KeyH':\n      return 'h';\n    case 'KeyI':\n      return 'i';\n    case 'KeyJ':\n      return 'j';\n    case 'KeyK':\n      return 'k';\n    case 'KeyL':\n      return 'l';\n    case 'KeyM':\n      return 'm';\n    case 'KeyN':\n      return 'n';\n    case 'KeyO':\n      return 'o';\n    case 'KeyP':\n      return 'p';\n    case 'KeyQ':\n      return 'q';\n    case 'KeyR':\n      return 'r';\n    case 'KeyS':\n      return 's';\n    case 'KeyT':\n      return 't';\n    case 'KeyU':\n      return 'u';\n    case 'KeyV':\n      return 'v';\n    case 'KeyW':\n      return 'w';\n    case 'KeyX':\n      return 'x';\n    case 'KeyY':\n      return 'y';\n    case 'KeyZ':\n      return 'z';\n    case 'Semicolon':\n      return ';';\n    case 'Equal':\n      return '=';\n    case 'Comma':\n      return ',';\n    case 'Minus':\n      return '-';\n    case 'Period':\n      return '.';\n    case 'Slash':\n      return '/';\n    case 'Backquote':\n      return '`';\n    case 'BracketLeft':\n      return '[';\n    case 'Backslash':\n      return '\\\\';\n    case 'BracketRight':\n      return ']';\n    case 'Quote':\n      return '\"';\n    default:\n      throw new Error(`Unknown key: \"${keyName}\"`);\n  }\n};\n"],
  "mappings": "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",
  "names": []
}
