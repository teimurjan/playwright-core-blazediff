{
  "version": 3,
  "sources": ["../../../src/server/bidi/bidiOverCdp.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as bidiMapper from 'chromium-bidi/lib/cjs/bidiMapper/BidiMapper';\nimport * as bidiCdpConnection from 'chromium-bidi/lib/cjs/cdp/CdpConnection';\n\nimport { debugLogger } from '../utils/debugLogger';\n\nimport type { ConnectionTransport, ProtocolRequest, ProtocolResponse } from '../transport';\nimport type { ChromiumBidi } from 'chromium-bidi/lib/cjs/protocol/protocol';\nimport type * as bidiTransport from 'chromium-bidi/lib/cjs/utils/transport';\n\nconst bidiServerLogger = (prefix: string, ...args: unknown[]): void => {\n  debugLogger.log(prefix as any, args);\n};\n\nexport async function connectBidiOverCdp(cdp: ConnectionTransport): Promise<ConnectionTransport> {\n  let server: bidiMapper.BidiServer | undefined = undefined;\n  const bidiTransport = new BidiTransportImpl();\n  const bidiConnection = new BidiConnection(bidiTransport, () => server?.close());\n  const cdpTransportImpl = new CdpTransportImpl(cdp);\n  const cdpConnection = new bidiCdpConnection.MapperCdpConnection(cdpTransportImpl, bidiServerLogger);\n  // Make sure onclose event is propagated.\n  cdp.onclose = () => bidiConnection.onclose?.();\n  server = await bidiMapper.BidiServer.createAndStart(\n      bidiTransport,\n      cdpConnection,\n      await cdpConnection.createBrowserSession(),\n      /* selfTargetId= */ '',\n      undefined,\n      bidiServerLogger);\n  return bidiConnection;\n}\n\nclass BidiTransportImpl implements bidiMapper.BidiTransport {\n  _handler?: (message: ChromiumBidi.Command) => Promise<void> | void;\n  _bidiConnection!: BidiConnection;\n\n  setOnMessage(handler: (message: ChromiumBidi.Command) => Promise<void> | void) {\n    this._handler = handler;\n  }\n  sendMessage(message: ChromiumBidi.Message): Promise<void> | void {\n    return this._bidiConnection.onmessage?.(message as any);\n  }\n  close() {\n    this._bidiConnection.onclose?.();\n  }\n}\n\nclass BidiConnection implements ConnectionTransport {\n  private _bidiTransport: BidiTransportImpl;\n  private _closeCallback: () => void;\n\n  constructor(bidiTransport: BidiTransportImpl, closeCallback: () => void) {\n    this._bidiTransport = bidiTransport;\n    this._bidiTransport._bidiConnection = this;\n    this._closeCallback = closeCallback;\n  }\n  send(s: ProtocolRequest): void {\n    this._bidiTransport._handler?.(s as any);\n  }\n  close(): void {\n    this._closeCallback();\n  }\n  onmessage?: ((message: ProtocolResponse) => void) | undefined;\n  onclose?: ((reason?: string) => void) | undefined;\n}\n\nclass CdpTransportImpl implements bidiTransport.Transport {\n  private _connection: ConnectionTransport;\n  private _handler?: (message: string) => Promise<void> | void;\n  _bidiConnection!: BidiConnection;\n\n  constructor(connection: ConnectionTransport) {\n    this._connection = connection;\n    this._connection.onmessage = message => {\n      this._handler?.(JSON.stringify(message));\n    };\n  }\n  setOnMessage(handler: (message: string) => Promise<void> | void) {\n    this._handler = handler;\n  }\n  sendMessage(message: string): Promise<void> | void {\n    return this._connection.send(JSON.parse(message));\n  }\n  close(): void {\n    this._connection.close();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,iBAA4B;AAC5B,wBAAmC;AAEnC,yBAA4B;AAM5B,MAAM,mBAAmB,CAAC,WAAmB,SAA0B;AACrE,iCAAY,IAAI,QAAe,IAAI;AACrC;AAEA,eAAsB,mBAAmB,KAAwD;AAC/F,MAAI,SAA4C;AAChD,QAAM,gBAAgB,IAAI,kBAAkB;AAC5C,QAAM,iBAAiB,IAAI,eAAe,eAAe,MAAM,QAAQ,MAAM,CAAC;AAC9E,QAAM,mBAAmB,IAAI,iBAAiB,GAAG;AACjD,QAAM,gBAAgB,IAAI,kBAAkB,oBAAoB,kBAAkB,gBAAgB;AAElG,MAAI,UAAU,MAAM,eAAe,UAAU;AAC7C,WAAS,MAAM,WAAW,WAAW;AAAA,IACjC;AAAA,IACA;AAAA,IACA,MAAM,cAAc,qBAAqB;AAAA;AAAA,IACrB;AAAA,IACpB;AAAA,IACA;AAAA,EAAgB;AACpB,SAAO;AACT;AAEA,MAAM,kBAAsD;AAAA,EAI1D,aAAa,SAAkE;AAC7E,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,YAAY,SAAqD;AAC/D,WAAO,KAAK,gBAAgB,YAAY,OAAc;AAAA,EACxD;AAAA,EACA,QAAQ;AACN,SAAK,gBAAgB,UAAU;AAAA,EACjC;AACF;AAEA,MAAM,eAA8C;AAAA,EAIlD,YAAY,eAAkC,eAA2B;AACvE,SAAK,iBAAiB;AACtB,SAAK,eAAe,kBAAkB;AACtC,SAAK,iBAAiB;AAAA,EACxB;AAAA,EACA,KAAK,GAA0B;AAC7B,SAAK,eAAe,WAAW,CAAQ;AAAA,EACzC;AAAA,EACA,QAAc;AACZ,SAAK,eAAe;AAAA,EACtB;AAGF;AAEA,MAAM,iBAAoD;AAAA,EAKxD,YAAY,YAAiC;AAC3C,SAAK,cAAc;AACnB,SAAK,YAAY,YAAY,aAAW;AACtC,WAAK,WAAW,KAAK,UAAU,OAAO,CAAC;AAAA,IACzC;AAAA,EACF;AAAA,EACA,aAAa,SAAoD;AAC/D,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,YAAY,SAAuC;AACjD,WAAO,KAAK,YAAY,KAAK,KAAK,MAAM,OAAO,CAAC;AAAA,EAClD;AAAA,EACA,QAAc;AACZ,SAAK,YAAY,MAAM;AAAA,EACzB;AACF;",
  "names": []
}
