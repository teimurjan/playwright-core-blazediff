{
  "version": 3,
  "sources": ["../../../src/server/bidi/bidiChromium.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport os from 'os';\n\nimport { wrapInASCIIBox } from '../utils/ascii';\nimport { BrowserType, kNoXServerRunningError } from '../browserType';\nimport { BidiBrowser } from './bidiBrowser';\nimport { kBrowserCloseMessageId } from './bidiConnection';\nimport { chromiumSwitches } from '../chromium/chromiumSwitches';\nimport { RecentLogsCollector } from '../utils/debugLogger';\nimport { waitForReadyState } from '../chromium/chromium';\n\nimport type { BrowserOptions } from '../browser';\nimport type { SdkObject } from '../instrumentation';\nimport type { Env } from '../utils/processLauncher';\nimport type { ProtocolError } from '../protocolError';\nimport type { ConnectionTransport } from '../transport';\nimport type * as types from '../types';\n\n\nexport class BidiChromium extends BrowserType {\n  constructor(parent: SdkObject) {\n    super(parent, '_bidiChromium');\n  }\n\n  override async connectToTransport(transport: ConnectionTransport, options: BrowserOptions, browserLogsCollector: RecentLogsCollector): Promise<BidiBrowser> {\n    // Chrome doesn't support Bidi, we create Bidi over CDP which is used by Chrome driver.\n    // bidiOverCdp depends on chromium-bidi which we only have in devDependencies, so\n    // we load bidiOverCdp dynamically.\n    const bidiTransport = await require('./bidiOverCdp').connectBidiOverCdp(transport);\n    (transport as any)[kBidiOverCdpWrapper] = bidiTransport;\n    try {\n      return BidiBrowser.connect(this.attribution.playwright, bidiTransport, options);\n    } catch (e) {\n      if (browserLogsCollector.recentLogs().some(log => log.includes('Failed to create a ProcessSingleton for your profile directory.'))) {\n        throw new Error(\n            'Failed to create a ProcessSingleton for your profile directory. ' +\n            'This usually means that the profile is already in use by another instance of Chromium.'\n        );\n      }\n      throw e;\n    }\n  }\n\n  override doRewriteStartupLog(error: ProtocolError): ProtocolError {\n    if (!error.logs)\n      return error;\n    if (error.logs.includes('Missing X server'))\n      error.logs = '\\n' + wrapInASCIIBox(kNoXServerRunningError, 1);\n    // These error messages are taken from Chromium source code as of July, 2020:\n    // https://github.com/chromium/chromium/blob/70565f67e79f79e17663ad1337dc6e63ee207ce9/content/browser/zygote_host/zygote_host_impl_linux.cc\n    if (!error.logs.includes('crbug.com/357670') && !error.logs.includes('No usable sandbox!') && !error.logs.includes('crbug.com/638180'))\n      return error;\n    error.logs = [\n      `Chromium sandboxing failed!`,\n      `================================`,\n      `To avoid the sandboxing issue, do either of the following:`,\n      `  - (preferred): Configure your environment to support sandboxing`,\n      `  - (alternative): Launch Chromium without sandbox using 'chromiumSandbox: false' option`,\n      `================================`,\n      ``,\n    ].join('\\n');\n    return error;\n  }\n\n  override amendEnvironment(env: Env): Env {\n    return env;\n  }\n\n  override attemptToGracefullyCloseBrowser(transport: ConnectionTransport): void {\n    // Note that it's fine to reuse the transport, since our connection ignores kBrowserCloseMessageId.\n    const bidiTransport = (transport as any)[kBidiOverCdpWrapper];\n    if (bidiTransport)\n      transport = bidiTransport;\n    transport.send({ method: 'browser.close', params: {}, id: kBrowserCloseMessageId });\n  }\n\n  override supportsPipeTransport(): boolean {\n    return false;\n  }\n\n  override defaultArgs(options: types.LaunchOptions, isPersistent: boolean, userDataDir: string): string[] {\n    const chromeArguments = this._innerDefaultArgs(options);\n    chromeArguments.push(`--user-data-dir=${userDataDir}`);\n    chromeArguments.push('--remote-debugging-port=0');\n    if (isPersistent)\n      chromeArguments.push('about:blank');\n    else\n      chromeArguments.push('--no-startup-window');\n    return chromeArguments;\n  }\n\n  override async waitForReadyState(options: types.LaunchOptions, browserLogsCollector: RecentLogsCollector): Promise<{ wsEndpoint?: string }> {\n    return waitForReadyState({ ...options, cdpPort: 0 }, browserLogsCollector);\n  }\n\n  private _innerDefaultArgs(options: types.LaunchOptions): string[] {\n    const { args = [] } = options;\n    const userDataDirArg = args.find(arg => arg.startsWith('--user-data-dir'));\n    if (userDataDirArg)\n      throw this._createUserDataDirArgMisuseError('--user-data-dir');\n    if (args.find(arg => arg.startsWith('--remote-debugging-pipe')))\n      throw new Error('Playwright manages remote debugging connection itself.');\n    if (args.find(arg => !arg.startsWith('-')))\n      throw new Error('Arguments can not specify page to be opened');\n    const chromeArguments = [...chromiumSwitches(options.assistantMode)];\n\n    if (os.platform() === 'darwin') {\n      // See https://issues.chromium.org/issues/40277080\n      chromeArguments.push('--enable-unsafe-swiftshader');\n    }\n\n    if (options.devtools)\n      chromeArguments.push('--auto-open-devtools-for-tabs');\n    if (options.headless) {\n      chromeArguments.push('--headless');\n\n      chromeArguments.push(\n          '--hide-scrollbars',\n          '--mute-audio',\n          '--blink-settings=primaryHoverType=2,availableHoverTypes=2,primaryPointerType=4,availablePointerTypes=4',\n      );\n    }\n    if (options.chromiumSandbox !== true)\n      chromeArguments.push('--no-sandbox');\n    const proxy = options.proxyOverride || options.proxy;\n    if (proxy) {\n      const proxyURL = new URL(proxy.server);\n      const isSocks = proxyURL.protocol === 'socks5:';\n      // https://www.chromium.org/developers/design-documents/network-settings\n      if (isSocks && !options.socksProxyPort) {\n        // https://www.chromium.org/developers/design-documents/network-stack/socks-proxy\n        chromeArguments.push(`--host-resolver-rules=\"MAP * ~NOTFOUND , EXCLUDE ${proxyURL.hostname}\"`);\n      }\n      chromeArguments.push(`--proxy-server=${proxy.server}`);\n      const proxyBypassRules = [];\n      // https://source.chromium.org/chromium/chromium/src/+/master:net/docs/proxy.md;l=548;drc=71698e610121078e0d1a811054dcf9fd89b49578\n      if (options.socksProxyPort)\n        proxyBypassRules.push('<-loopback>');\n      if (proxy.bypass)\n        proxyBypassRules.push(...proxy.bypass.split(',').map(t => t.trim()).map(t => t.startsWith('.') ? '*' + t : t));\n      if (!process.env.PLAYWRIGHT_DISABLE_FORCED_CHROMIUM_PROXIED_LOOPBACK && !proxyBypassRules.includes('<-loopback>'))\n        proxyBypassRules.push('<-loopback>');\n      if (proxyBypassRules.length > 0)\n        chromeArguments.push(`--proxy-bypass-list=${proxyBypassRules.join(';')}`);\n    }\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n}\n\nconst kBidiOverCdpWrapper = Symbol('kBidiConnectionWrapper');\n"],
  "mappings": "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",
  "names": ["os"]
}
