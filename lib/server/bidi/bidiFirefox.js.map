{
  "version": 3,
  "sources": ["../../../src/server/bidi/bidiFirefox.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport os from 'os';\nimport path from 'path';\n\nimport { wrapInASCIIBox } from '../utils/ascii';\nimport { BrowserType, kNoXServerRunningError } from '../browserType';\nimport { BidiBrowser } from './bidiBrowser';\nimport { kBrowserCloseMessageId } from './bidiConnection';\nimport { createProfile } from './third_party/firefoxPrefs';\nimport { ManualPromise } from '../../utils/isomorphic/manualPromise';\n\nimport type { BrowserOptions } from '../browser';\nimport type { SdkObject } from '../instrumentation';\nimport type { Env } from '../utils/processLauncher';\nimport type { ProtocolError } from '../protocolError';\nimport type { ConnectionTransport } from '../transport';\nimport type * as types from '../types';\nimport type { RecentLogsCollector } from '../utils/debugLogger';\n\n\nexport class BidiFirefox extends BrowserType {\n  constructor(parent: SdkObject) {\n    super(parent, '_bidiFirefox');\n  }\n\n  override executablePath(): string {\n    return '';\n  }\n\n  override async connectToTransport(transport: ConnectionTransport, options: BrowserOptions): Promise<BidiBrowser> {\n    return BidiBrowser.connect(this.attribution.playwright, transport, options);\n  }\n\n  override doRewriteStartupLog(error: ProtocolError): ProtocolError {\n    if (!error.logs)\n      return error;\n    // https://github.com/microsoft/playwright/issues/6500\n    if (error.logs.includes(`as root in a regular user's session is not supported.`))\n      error.logs = '\\n' + wrapInASCIIBox(`Firefox is unable to launch if the $HOME folder isn't owned by the current user.\\nWorkaround: Set the HOME=/root environment variable${process.env.GITHUB_ACTION ? ' in your GitHub Actions workflow file' : ''} when running Playwright.`, 1);\n    if (error.logs.includes('no DISPLAY environment variable specified'))\n      error.logs = '\\n' + wrapInASCIIBox(kNoXServerRunningError, 1);\n    return error;\n  }\n\n  override amendEnvironment(env: Env): Env {\n    if (!path.isAbsolute(os.homedir()))\n      throw new Error(`Cannot launch Firefox with relative home directory. Did you set ${os.platform() === 'win32' ? 'USERPROFILE' : 'HOME'} to a relative path?`);\n\n    env = {\n      ...env,\n      'MOZ_CRASHREPORTER': '1',\n      'MOZ_CRASHREPORTER_NO_REPORT': '1',\n      'MOZ_CRASHREPORTER_SHUTDOWN': '1',\n    };\n\n    if (os.platform() === 'linux') {\n      // Always remove SNAP_NAME and SNAP_INSTANCE_NAME env variables since they\n      // confuse Firefox: in our case, builds never come from SNAP.\n      // See https://github.com/microsoft/playwright/issues/20555\n      return { ...env, SNAP_NAME: undefined, SNAP_INSTANCE_NAME: undefined };\n    }\n    return env;\n  }\n\n  override attemptToGracefullyCloseBrowser(transport: ConnectionTransport): void {\n    // Note that it's fine to reuse the transport, since our connection ignores kBrowserCloseMessageId.\n    transport.send({ method: 'browser.close', params: {}, id: kBrowserCloseMessageId });\n  }\n\n  override supportsPipeTransport(): boolean {\n    return false;\n  }\n\n  override async prepareUserDataDir(options: types.LaunchOptions, userDataDir: string): Promise<void> {\n    await createProfile({\n      path: userDataDir,\n      preferences: options.firefoxUserPrefs || {},\n    });\n  }\n\n  override defaultArgs(options: types.LaunchOptions, isPersistent: boolean, userDataDir: string): string[] {\n    const { args = [], headless } = options;\n    const userDataDirArg = args.find(arg => arg.startsWith('-profile') || arg.startsWith('--profile'));\n    if (userDataDirArg)\n      throw this._createUserDataDirArgMisuseError('--profile');\n    const firefoxArguments = ['--remote-debugging-port=0'];\n    if (headless)\n      firefoxArguments.push('--headless');\n    else\n      firefoxArguments.push('--foreground');\n    firefoxArguments.push(`--profile`, userDataDir);\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n\n  override async waitForReadyState(options: types.LaunchOptions, browserLogsCollector: RecentLogsCollector): Promise<{ wsEndpoint?: string }> {\n    const result = new ManualPromise<{ wsEndpoint?: string }>();\n    browserLogsCollector.onMessage(message => {\n      const match = message.match(/WebDriver BiDi listening on (ws:\\/\\/.*)$/);\n      if (match)\n        result.resolve({ wsEndpoint: match[1] + '/session' });\n    });\n    return result;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,gBAAe;AACf,kBAAiB;AAEjB,mBAA+B;AAC/B,yBAAoD;AACpD,yBAA4B;AAC5B,4BAAuC;AACvC,0BAA8B;AAC9B,2BAA8B;AAWvB,MAAM,oBAAoB,+BAAY;AAAA,EAC3C,YAAY,QAAmB;AAC7B,UAAM,QAAQ,cAAc;AAAA,EAC9B;AAAA,EAES,iBAAyB;AAChC,WAAO;AAAA,EACT;AAAA,EAEA,MAAe,mBAAmB,WAAgC,SAA+C;AAC/G,WAAO,+BAAY,QAAQ,KAAK,YAAY,YAAY,WAAW,OAAO;AAAA,EAC5E;AAAA,EAES,oBAAoB,OAAqC;AAChE,QAAI,CAAC,MAAM;AACT,aAAO;AAET,QAAI,MAAM,KAAK,SAAS,uDAAuD;AAC7E,YAAM,OAAO,WAAO,6BAAe;AAAA,qDAAwI,QAAQ,IAAI,gBAAgB,0CAA0C,EAAE,6BAA6B,CAAC;AACnR,QAAI,MAAM,KAAK,SAAS,2CAA2C;AACjE,YAAM,OAAO,WAAO,6BAAe,2CAAwB,CAAC;AAC9D,WAAO;AAAA,EACT;AAAA,EAES,iBAAiB,KAAe;AACvC,QAAI,CAAC,YAAAA,QAAK,WAAW,UAAAC,QAAG,QAAQ,CAAC;AAC/B,YAAM,IAAI,MAAM,mEAAmE,UAAAA,QAAG,SAAS,MAAM,UAAU,gBAAgB,MAAM,sBAAsB;AAE7J,UAAM;AAAA,MACJ,GAAG;AAAA,MACH,qBAAqB;AAAA,MACrB,+BAA+B;AAAA,MAC/B,8BAA8B;AAAA,IAChC;AAEA,QAAI,UAAAA,QAAG,SAAS,MAAM,SAAS;AAI7B,aAAO,EAAE,GAAG,KAAK,WAAW,QAAW,oBAAoB,OAAU;AAAA,IACvE;AACA,WAAO;AAAA,EACT;AAAA,EAES,gCAAgC,WAAsC;AAE7E,cAAU,KAAK,EAAE,QAAQ,iBAAiB,QAAQ,CAAC,GAAG,IAAI,6CAAuB,CAAC;AAAA,EACpF;AAAA,EAES,wBAAiC;AACxC,WAAO;AAAA,EACT;AAAA,EAEA,MAAe,mBAAmB,SAA8B,aAAoC;AAClG,cAAM,mCAAc;AAAA,MAClB,MAAM;AAAA,MACN,aAAa,QAAQ,oBAAoB,CAAC;AAAA,IAC5C,CAAC;AAAA,EACH;AAAA,EAES,YAAY,SAA8B,cAAuB,aAA+B;AACvG,UAAM,EAAE,OAAO,CAAC,GAAG,SAAS,IAAI;AAChC,UAAM,iBAAiB,KAAK,KAAK,SAAO,IAAI,WAAW,UAAU,KAAK,IAAI,WAAW,WAAW,CAAC;AACjG,QAAI;AACF,YAAM,KAAK,iCAAiC,WAAW;AACzD,UAAM,mBAAmB,CAAC,2BAA2B;AACrD,QAAI;AACF,uBAAiB,KAAK,YAAY;AAAA;AAElC,uBAAiB,KAAK,cAAc;AACtC,qBAAiB,KAAK,aAAa,WAAW;AAC9C,qBAAiB,KAAK,GAAG,IAAI;AAC7B,WAAO;AAAA,EACT;AAAA,EAEA,MAAe,kBAAkB,SAA8B,sBAA6E;AAC1I,UAAM,SAAS,IAAI,mCAAuC;AAC1D,yBAAqB,UAAU,aAAW;AACxC,YAAM,QAAQ,QAAQ,MAAM,0CAA0C;AACtE,UAAI;AACF,eAAO,QAAQ,EAAE,YAAY,MAAM,CAAC,IAAI,WAAW,CAAC;AAAA,IACxD,CAAC;AACD,WAAO;AAAA,EACT;AACF;",
  "names": ["path", "os"]
}
