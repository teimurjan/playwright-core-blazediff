{
  "version": 3,
  "sources": ["../../../src/server/bidi/bidiBrowser.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { eventsHelper } from '../utils/eventsHelper';\nimport { Browser } from '../browser';\nimport { BrowserContext, verifyGeolocation } from '../browserContext';\nimport * as network from '../network';\nimport { BidiConnection } from './bidiConnection';\nimport { bidiBytesValueToString } from './bidiNetworkManager';\nimport { BidiPage, kPlaywrightBindingChannel } from './bidiPage';\nimport { PageBinding } from '../page';\nimport * as bidi from './third_party/bidiProtocol';\n\nimport type { RegisteredListener } from '../utils/eventsHelper';\nimport type { BrowserOptions } from '../browser';\nimport type { SdkObject } from '../instrumentation';\nimport type { InitScript, Page } from '../page';\nimport type { ConnectionTransport } from '../transport';\nimport type * as types from '../types';\nimport type { BidiSession } from './bidiConnection';\nimport type * as channels from '@protocol/channels';\n\n\nexport class BidiBrowser extends Browser {\n  private readonly _connection: BidiConnection;\n  readonly _browserSession: BidiSession;\n  private _bidiSessionInfo!: bidi.Session.NewResult;\n  readonly _contexts = new Map<string, BidiBrowserContext>();\n  readonly _bidiPages = new Map<bidi.BrowsingContext.BrowsingContext, BidiPage>();\n  private readonly _eventListeners: RegisteredListener[];\n\n  static async connect(parent: SdkObject, transport: ConnectionTransport, options: BrowserOptions): Promise<BidiBrowser> {\n    const browser = new BidiBrowser(parent, transport, options);\n    if ((options as any).__testHookOnConnectToBrowser)\n      await (options as any).__testHookOnConnectToBrowser();\n\n    browser._bidiSessionInfo = await browser._browserSession.send('session.new', {\n      capabilities: {\n        alwaysMatch: {\n          acceptInsecureCerts: options.persistent?.internalIgnoreHTTPSErrors || options.persistent?.ignoreHTTPSErrors,\n          proxy: getProxyConfiguration(options.originalLaunchOptions.proxyOverride ?? options.proxy),\n          unhandledPromptBehavior: {\n            default: bidi.Session.UserPromptHandlerType.Ignore,\n          },\n          webSocketUrl: true\n        },\n      }\n    });\n\n    await browser._browserSession.send('session.subscribe', {\n      events: [\n        'browsingContext',\n        'network',\n        'log',\n        'script',\n      ],\n    });\n\n    if (options.persistent) {\n      const context = new BidiBrowserContext(browser, undefined, options.persistent);\n      browser._defaultContext = context;\n      await context._initialize();\n      // Create default page as we cannot get access to the existing one.\n      const page = await browser._defaultContext.doCreateNewPage();\n      await page.waitForInitializedOrError();\n    }\n    return browser;\n  }\n\n  constructor(parent: SdkObject, transport: ConnectionTransport, options: BrowserOptions) {\n    super(parent, options);\n    this._connection = new BidiConnection(transport, this._onDisconnect.bind(this), options.protocolLogger, options.browserLogsCollector);\n    this._browserSession = this._connection.browserSession;\n    this._eventListeners = [\n      eventsHelper.addEventListener(this._browserSession, 'browsingContext.contextCreated', this._onBrowsingContextCreated.bind(this)),\n      eventsHelper.addEventListener(this._browserSession, 'script.realmDestroyed', this._onScriptRealmDestroyed.bind(this)),\n    ];\n  }\n\n  _onDisconnect() {\n    this._didClose();\n  }\n\n  async doCreateNewContext(options: types.BrowserContextOptions): Promise<BrowserContext> {\n    const proxy = options.proxyOverride || options.proxy;\n    const { userContext } = await this._browserSession.send('browser.createUserContext', {\n      acceptInsecureCerts: options.internalIgnoreHTTPSErrors || options.ignoreHTTPSErrors,\n      proxy: getProxyConfiguration(proxy),\n    });\n    const context = new BidiBrowserContext(this, userContext, options);\n    await context._initialize();\n    this._contexts.set(userContext, context);\n    return context;\n  }\n\n  contexts(): BrowserContext[] {\n    return Array.from(this._contexts.values());\n  }\n\n  version(): string {\n    return this._bidiSessionInfo.capabilities.browserVersion;\n  }\n\n  userAgent(): string {\n    return this._bidiSessionInfo.capabilities.userAgent;\n  }\n\n  isConnected(): boolean {\n    return !this._connection.isClosed();\n  }\n\n  private _onBrowsingContextCreated(event: bidi.BrowsingContext.Info) {\n    if (event.parent) {\n      const parentFrameId = event.parent;\n      for (const page of this._bidiPages.values()) {\n        const parentFrame = page._page.frameManager.frame(parentFrameId);\n        if (!parentFrame)\n          continue;\n        page._session.addFrameBrowsingContext(event.context);\n        page._page.frameManager.frameAttached(event.context, parentFrameId);\n        const frame = page._page.frameManager.frame(event.context);\n        if (frame)\n          frame._url = event.url;\n        return;\n      }\n      return;\n    }\n    let context = this._contexts.get(event.userContext);\n    if (!context)\n      context = this._defaultContext as BidiBrowserContext;\n    if (!context)\n      return;\n    const session = this._connection.createMainFrameBrowsingContextSession(event.context);\n    const opener = event.originalOpener && this._bidiPages.get(event.originalOpener);\n    const page = new BidiPage(context, session, opener || null);\n    page._page.mainFrame()._url = event.url;\n    this._bidiPages.set(event.context, page);\n  }\n\n  _onBrowsingContextDestroyed(event: bidi.BrowsingContext.Info) {\n    if (event.parent) {\n      this._browserSession.removeFrameBrowsingContext(event.context);\n      const parentFrameId = event.parent;\n      for (const page of this._bidiPages.values()) {\n        const parentFrame = page._page.frameManager.frame(parentFrameId);\n        if (!parentFrame)\n          continue;\n        page._page.frameManager.frameDetached(event.context);\n        return;\n      }\n      return;\n    }\n    const bidiPage = this._bidiPages.get(event.context);\n    if (!bidiPage)\n      return;\n    bidiPage.didClose();\n    this._bidiPages.delete(event.context);\n  }\n\n  private _onScriptRealmDestroyed(event: bidi.Script.RealmDestroyedParameters) {\n    for (const page of this._bidiPages.values()) {\n      if (page._onRealmDestroyed(event))\n        return;\n    }\n  }\n}\n\nexport class BidiBrowserContext extends BrowserContext {\n  declare readonly _browser: BidiBrowser;\n  private _originToPermissions = new Map<string, string[]>();\n  private _initScriptIds = new Map<InitScript, string>();\n\n  constructor(browser: BidiBrowser, browserContextId: string | undefined, options: types.BrowserContextOptions) {\n    super(browser, options, browserContextId);\n    this._authenticateProxyViaHeader();\n  }\n\n  private _bidiPages() {\n    return [...this._browser._bidiPages.values()].filter(bidiPage => bidiPage._browserContext === this);\n  }\n\n  override async _initialize() {\n    const promises: Promise<any>[] = [\n      super._initialize(),\n    ];\n    promises.push(this.doUpdateDefaultViewport());\n    if (this._options.geolocation)\n      promises.push(this.setGeolocation(this._options.geolocation));\n    if (this._options.locale) {\n      promises.push(this._browser._browserSession.send('emulation.setLocaleOverride', {\n        locale: this._options.locale,\n        userContexts: [this._userContextId()],\n      }));\n    }\n    await Promise.all(promises);\n  }\n\n  override possiblyUninitializedPages(): Page[] {\n    return this._bidiPages().map(bidiPage => bidiPage._page);\n  }\n\n  override async doCreateNewPage(): Promise<Page> {\n    const { context } = await this._browser._browserSession.send('browsingContext.create', {\n      type: bidi.BrowsingContext.CreateType.Window,\n      userContext: this._browserContextId,\n    });\n    return this._browser._bidiPages.get(context)!._page;\n  }\n\n  async doGetCookies(urls: string[]): Promise<channels.NetworkCookie[]> {\n    const { cookies } = await this._browser._browserSession.send('storage.getCookies',\n        { partition: { type: 'storageKey', userContext: this._browserContextId } });\n    return network.filterCookies(cookies.map((c: bidi.Network.Cookie) => {\n      const copy: channels.NetworkCookie = {\n        name: c.name,\n        value: bidiBytesValueToString(c.value),\n        domain: c.domain,\n        path: c.path,\n        httpOnly: c.httpOnly,\n        secure: c.secure,\n        expires: c.expiry ?? -1,\n        sameSite: c.sameSite ? fromBidiSameSite(c.sameSite) : 'None',\n      };\n      return copy;\n    }), urls);\n  }\n\n  async addCookies(cookies: channels.SetNetworkCookie[]) {\n    cookies = network.rewriteCookies(cookies);\n    const promises = cookies.map((c: channels.SetNetworkCookie) => {\n      const cookie: bidi.Storage.PartialCookie = {\n        name: c.name,\n        value: { type: 'string', value: c.value },\n        domain: c.domain!,\n        path: c.path,\n        httpOnly: c.httpOnly,\n        secure: c.secure,\n        sameSite: c.sameSite && toBidiSameSite(c.sameSite),\n        expiry: (c.expires === -1 || c.expires === undefined) ? undefined : Math.round(c.expires),\n      };\n      return this._browser._browserSession.send('storage.setCookie',\n          { cookie, partition: { type: 'storageKey', userContext: this._browserContextId } });\n    });\n    await Promise.all(promises);\n  }\n\n  async doClearCookies() {\n    await this._browser._browserSession.send('storage.deleteCookies',\n        { partition: { type: 'storageKey', userContext: this._browserContextId } });\n  }\n\n  async doGrantPermissions(origin: string, permissions: string[]) {\n    const currentPermissions = this._originToPermissions.get(origin) || [];\n    const toGrant = permissions.filter(permission => !currentPermissions.includes(permission));\n    this._originToPermissions.set(origin, [...currentPermissions, ...toGrant]);\n    await Promise.all(toGrant.map(permission => this._setPermission(origin, permission, bidi.Permissions.PermissionState.Granted)));\n  }\n\n  async doClearPermissions() {\n    const currentPermissions = [...this._originToPermissions.entries()];\n    this._originToPermissions = new Map();\n    await Promise.all(currentPermissions.map(([origin, permissions]) => permissions.map(\n        p => this._setPermission(origin, p, bidi.Permissions.PermissionState.Prompt))));\n  }\n\n  private async _setPermission(origin: string, permission: string, state: bidi.Permissions.PermissionState) {\n    await this._browser._browserSession.send('permissions.setPermission', {\n      descriptor: {\n        name: permission,\n      },\n      state,\n      origin,\n      userContext: this._userContextId(),\n    });\n  }\n\n  async setGeolocation(geolocation?: types.Geolocation): Promise<void> {\n    verifyGeolocation(geolocation);\n    this._options.geolocation = geolocation;\n    // Setting geolocation on the user context automatically applies it to all existing\n    // pages in the context in Bidi.\n    await this._browser._browserSession.send('emulation.setGeolocationOverride', {\n      coordinates: geolocation ? {\n        latitude: geolocation.latitude,\n        longitude: geolocation.longitude,\n        accuracy: geolocation.accuracy,\n      } : null,\n      userContexts: [this._userContextId()],\n    });\n  }\n\n  async doUpdateExtraHTTPHeaders(): Promise<void> {\n  }\n\n  async setUserAgent(userAgent: string | undefined): Promise<void> {\n  }\n\n  async doUpdateOffline(): Promise<void> {\n  }\n\n  async doSetHTTPCredentials(httpCredentials?: types.Credentials): Promise<void> {\n    this._options.httpCredentials = httpCredentials;\n    for (const page of this.pages())\n      await (page.delegate as BidiPage).updateHttpCredentials();\n  }\n\n  async doAddInitScript(initScript: InitScript) {\n    const { script } = await this._browser._browserSession.send('script.addPreloadScript', {\n      // TODO: remove function call from the source.\n      functionDeclaration: `() => { return ${initScript.source} }`,\n      userContexts: [this._userContextId()],\n    });\n    this._initScriptIds.set(initScript, script);\n  }\n\n  async doRemoveInitScripts(initScripts: InitScript[]) {\n    const ids: string[] = [];\n    for (const script of initScripts) {\n      const id = this._initScriptIds.get(script);\n      if (id)\n        ids.push(id);\n      this._initScriptIds.delete(script);\n    }\n    await Promise.all(ids.map(script => this._browser._browserSession.send('script.removePreloadScript', { script })));\n  }\n\n  async doUpdateRequestInterception(): Promise<void> {\n  }\n\n  override async doUpdateDefaultViewport() {\n    if (!this._options.viewport)\n      return;\n    await this._browser._browserSession.send('browsingContext.setViewport', {\n      viewport: {\n        width: this._options.viewport.width,\n        height: this._options.viewport.height\n      },\n      devicePixelRatio: this._options.deviceScaleFactor || 1,\n      userContexts: [this._userContextId()],\n    });\n  }\n\n  override async doUpdateDefaultEmulatedMedia() {\n  }\n\n  override async doExposePlaywrightBinding() {\n    const args: bidi.Script.ChannelValue[] = [{\n      type: 'channel',\n      value: {\n        channel: kPlaywrightBindingChannel,\n        ownership: bidi.Script.ResultOwnership.Root,\n      }\n    }];\n    const functionDeclaration = `function addMainBinding(callback) { globalThis['${PageBinding.kBindingName}'] = callback; }`;\n    const promises = [];\n    promises.push(this._browser._browserSession.send('script.addPreloadScript', {\n      functionDeclaration,\n      arguments: args,\n      userContexts: [this._userContextId()],\n    }));\n    promises.push(...this._bidiPages().map(page => {\n      const realms = [...page._realmToContext].filter(([realm, context]) => context.world === 'main').map(([realm, context]) => realm);\n      return Promise.all(realms.map(realm => {\n        return page._session.send('script.callFunction', {\n          functionDeclaration,\n          arguments: args,\n          target: { realm },\n          awaitPromise: false,\n          userActivation: false,\n        });\n      }));\n    }));\n    await Promise.all(promises);\n  }\n\n  onClosePersistent() {}\n\n  override async clearCache(): Promise<void> {\n  }\n\n  async doClose(reason: string | undefined) {\n    if (!this._browserContextId) {\n      // Closing persistent context should close the browser.\n      await this._browser.close({ reason });\n      return;\n    }\n    await this._browser._browserSession.send('browser.removeUserContext', {\n      userContext: this._browserContextId\n    });\n    this._browser._contexts.delete(this._browserContextId);\n  }\n\n  async cancelDownload(uuid: string) {\n  }\n\n  private _userContextId(): bidi.Browser.UserContext {\n    if (this._browserContextId)\n      return this._browserContextId;\n    // Default context always has same id, see\n    // https://w3c.github.io/webdriver-bidi/#default-user-context\n    return 'default';\n  }\n}\n\nfunction fromBidiSameSite(sameSite: bidi.Network.SameSite): channels.NetworkCookie['sameSite'] {\n  switch (sameSite) {\n    case 'strict': return 'Strict';\n    case 'lax': return 'Lax';\n    case 'none': return 'None';\n    case 'default': return 'Lax';\n  }\n  return 'None';\n}\n\nfunction toBidiSameSite(sameSite: channels.SetNetworkCookie['sameSite']): bidi.Network.SameSite {\n  switch (sameSite) {\n    case 'Strict': return bidi.Network.SameSite.Strict;\n    case 'Lax': return bidi.Network.SameSite.Lax;\n    case 'None': return bidi.Network.SameSite.None;\n  }\n  return bidi.Network.SameSite.None;\n}\n\nfunction getProxyConfiguration(proxySettings?: types.ProxySettings): bidi.Session.ManualProxyConfiguration | undefined {\n  if (!proxySettings)\n    return undefined;\n\n  const proxy: bidi.Session.ManualProxyConfiguration = {\n    proxyType: 'manual',\n  };\n  const url = new URL(proxySettings.server);  // Validate proxy server.\n  switch (url.protocol) {\n    case 'http:':\n      proxy.httpProxy = url.host;\n      break;\n    case 'https:':\n      proxy.sslProxy = url.host;\n      break;\n    case 'socks4:':\n      proxy.socksProxy = url.host;\n      proxy.socksVersion = 4;\n      break;\n    case 'socks5:':\n      proxy.socksProxy = url.host;\n      proxy.socksVersion = 5;\n      break;\n    default:\n      throw new Error('Invalid proxy server protocol: ' + proxySettings.server);\n  }\n  const bypass = proxySettings.bypass ?? process.env.PLAYWRIGHT_PROXY_BYPASS_FOR_TESTING;\n  if (bypass)\n    proxy.noProxy = bypass.split(',');\n  // TODO: support authentication.\n\n  return proxy;\n}\n\nexport namespace Network {\n  export const enum SameSite {\n    Strict = 'strict',\n    Lax = 'lax',\n    None = 'none',\n  }\n}\n"],
  "mappings": "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",
  "names": ["page", "Network", "SameSite"]
}
