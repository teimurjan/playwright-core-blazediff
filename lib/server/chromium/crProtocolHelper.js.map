{
  "version": 3,
  "sources": ["../../../src/server/chromium/crProtocolHelper.ts"],
  "sourcesContent": ["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\n\nimport { splitErrorMessage } from '../../utils/isomorphic/stackTrace';\nimport { mkdirIfNeeded } from '../utils/fileUtils';\n\nimport type { CRSession } from './crConnection';\nimport type { Protocol } from './protocol';\nimport type * as types from '../types';\n\n\nexport function getExceptionMessage(exceptionDetails: Protocol.Runtime.ExceptionDetails): string {\n  if (exceptionDetails.exception)\n    return exceptionDetails.exception.description || String(exceptionDetails.exception.value);\n  let message = exceptionDetails.text;\n  if (exceptionDetails.stackTrace) {\n    for (const callframe of exceptionDetails.stackTrace.callFrames) {\n      const location = callframe.url + ':' + callframe.lineNumber + ':' + callframe.columnNumber;\n      const functionName = callframe.functionName || '<anonymous>';\n      message += `\\n    at ${functionName} (${location})`;\n    }\n  }\n  return message;\n}\n\nexport async function releaseObject(client: CRSession, objectId: string) {\n  await client.send('Runtime.releaseObject', { objectId }).catch(error => { });\n}\n\nexport async function saveProtocolStream(client: CRSession, handle: string, path: string) {\n  let eof = false;\n  await mkdirIfNeeded(path);\n  const fd = await fs.promises.open(path, 'w');\n  while (!eof) {\n    const response = await client.send('IO.read', { handle });\n    eof = response.eof;\n    const buf = Buffer.from(response.data, response.base64Encoded ? 'base64' : undefined);\n    await fd.write(buf);\n  }\n  await fd.close();\n  await client.send('IO.close', { handle });\n}\n\nexport async function readProtocolStream(client: CRSession, handle: string): Promise<Buffer> {\n  let eof = false;\n  const chunks = [];\n  while (!eof) {\n    const response = await client.send('IO.read', { handle });\n    eof = response.eof;\n    const buf = Buffer.from(response.data, response.base64Encoded ? 'base64' : undefined);\n    chunks.push(buf);\n  }\n  await client.send('IO.close', { handle });\n  return Buffer.concat(chunks);\n}\n\nexport function toConsoleMessageLocation(stackTrace: Protocol.Runtime.StackTrace | undefined): types.ConsoleMessageLocation {\n  return stackTrace && stackTrace.callFrames.length ? {\n    url: stackTrace.callFrames[0].url,\n    lineNumber: stackTrace.callFrames[0].lineNumber,\n    columnNumber: stackTrace.callFrames[0].columnNumber,\n  } : { url: '', lineNumber: 0, columnNumber: 0 };\n}\n\nexport function exceptionToError(exceptionDetails: Protocol.Runtime.ExceptionDetails): Error {\n  const messageWithStack = getExceptionMessage(exceptionDetails);\n  const lines = messageWithStack.split('\\n');\n  const firstStackTraceLine = lines.findIndex(line => line.startsWith('    at'));\n  let messageWithName = '';\n  let stack = '';\n  if (firstStackTraceLine === -1) {\n    messageWithName = messageWithStack;\n  } else {\n    messageWithName = lines.slice(0, firstStackTraceLine).join('\\n');\n    stack = messageWithStack;\n  }\n  const { name, message } = splitErrorMessage(messageWithName);\n\n  const err = new Error(message);\n  err.stack = stack;\n  const nameOverride = exceptionDetails.exception?.preview?.properties.find(o => o.name === 'name');\n  err.name = nameOverride ? nameOverride.value ?? 'Error' : name;\n  return err;\n}\n\nexport function toModifiersMask(modifiers: Set<types.KeyboardModifier>): number {\n  let mask = 0;\n  if (modifiers.has('Alt'))\n    mask |= 1;\n  if (modifiers.has('Control'))\n    mask |= 2;\n  if (modifiers.has('Meta'))\n    mask |= 4;\n  if (modifiers.has('Shift'))\n    mask |= 8;\n  return mask;\n}\n\nexport function toButtonsMask(buttons: Set<types.MouseButton>): number {\n  let mask = 0;\n  if (buttons.has('left'))\n    mask |= 1;\n  if (buttons.has('right'))\n    mask |= 2;\n  if (buttons.has('middle'))\n    mask |= 4;\n  return mask;\n}\n"],
  "mappings": "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",
  "names": ["fs"]
}
