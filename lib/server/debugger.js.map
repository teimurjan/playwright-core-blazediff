{
  "version": 3,
  "sources": ["../../src/server/debugger.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from 'events';\n\nimport { debugMode, isUnderTest, monotonicTime } from '../utils';\nimport { BrowserContext } from './browserContext';\nimport { methodMetainfo } from '../utils/isomorphic/protocolMetainfo';\n\nimport type { CallMetadata, InstrumentationListener, SdkObject } from './instrumentation';\n\nconst symbol = Symbol('Debugger');\n\nexport class Debugger extends EventEmitter implements InstrumentationListener {\n  private _pauseOnNextStatement = false;\n  private _pausedCallsMetadata = new Map<CallMetadata, { resolve: () => void, sdkObject: SdkObject }>();\n  private _enabled: boolean;\n  private _context: BrowserContext;\n\n  static Events = {\n    PausedStateChanged: 'pausedstatechanged'\n  };\n  private _muted = false;\n\n  constructor(context: BrowserContext) {\n    super();\n    this._context = context;\n    (this._context as any)[symbol] = this;\n    this._enabled = debugMode() === 'inspector';\n    if (this._enabled)\n      this.pauseOnNextStatement();\n    context.instrumentation.addListener(this, context);\n    this._context.once(BrowserContext.Events.Close, () => {\n      this._context.instrumentation.removeListener(this);\n    });\n  }\n\n  async setMuted(muted: boolean) {\n    this._muted = muted;\n  }\n\n  async onBeforeCall(sdkObject: SdkObject, metadata: CallMetadata): Promise<void> {\n    if (this._muted)\n      return;\n    if (shouldPauseOnCall(sdkObject, metadata) || (this._pauseOnNextStatement && shouldPauseBeforeStep(metadata)))\n      await this.pause(sdkObject, metadata);\n  }\n\n  async onBeforeInputAction(sdkObject: SdkObject, metadata: CallMetadata): Promise<void> {\n    if (this._muted)\n      return;\n    if (this._enabled && this._pauseOnNextStatement)\n      await this.pause(sdkObject, metadata);\n  }\n\n  async pause(sdkObject: SdkObject, metadata: CallMetadata) {\n    if (this._muted)\n      return;\n    this._enabled = true;\n    metadata.pauseStartTime = monotonicTime();\n    const result = new Promise<void>(resolve => {\n      this._pausedCallsMetadata.set(metadata, { resolve, sdkObject });\n    });\n    this.emit(Debugger.Events.PausedStateChanged);\n    return result;\n  }\n\n  resume(step: boolean) {\n    if (!this.isPaused())\n      return;\n\n    this._pauseOnNextStatement = step;\n    const endTime = monotonicTime();\n    for (const [metadata, { resolve }] of this._pausedCallsMetadata) {\n      metadata.pauseEndTime = endTime;\n      resolve();\n    }\n    this._pausedCallsMetadata.clear();\n    this.emit(Debugger.Events.PausedStateChanged);\n  }\n\n  pauseOnNextStatement() {\n    this._pauseOnNextStatement = true;\n  }\n\n  isPaused(metadata?: CallMetadata): boolean {\n    if (metadata)\n      return this._pausedCallsMetadata.has(metadata);\n    return !!this._pausedCallsMetadata.size;\n  }\n\n  pausedDetails(): { metadata: CallMetadata, sdkObject: SdkObject }[] {\n    const result: { metadata: CallMetadata, sdkObject: SdkObject }[] = [];\n    for (const [metadata, { sdkObject }] of this._pausedCallsMetadata)\n      result.push({ metadata, sdkObject });\n    return result;\n  }\n}\n\nfunction shouldPauseOnCall(sdkObject: SdkObject, metadata: CallMetadata): boolean {\n  if (sdkObject.attribution.playwright.options.isServer)\n    return false;\n  if (!sdkObject.attribution.browser?.options.headful && !isUnderTest())\n    return false;\n  return metadata.method === 'pause';\n}\n\nfunction shouldPauseBeforeStep(metadata: CallMetadata): boolean {\n  if (metadata.internal)\n    return false;\n  const metainfo = methodMetainfo.get(metadata.type + '.' + metadata.method);\n  return !!metainfo?.pausesBeforeAction;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,oBAA6B;AAE7B,mBAAsD;AACtD,4BAA+B;AAC/B,8BAA+B;AAI/B,MAAM,SAAS,OAAO,UAAU;AAEzB,MAAM,iBAAiB,2BAAgD;AAAA,EAW5E,YAAY,SAAyB;AACnC,UAAM;AAXR,SAAQ,wBAAwB;AAChC,SAAQ,uBAAuB,oBAAI,IAAiE;AAOpG,SAAQ,SAAS;AAIf,SAAK,WAAW;AAChB,IAAC,KAAK,SAAiB,MAAM,IAAI;AACjC,SAAK,eAAW,wBAAU,MAAM;AAChC,QAAI,KAAK;AACP,WAAK,qBAAqB;AAC5B,YAAQ,gBAAgB,YAAY,MAAM,OAAO;AACjD,SAAK,SAAS,KAAK,qCAAe,OAAO,OAAO,MAAM;AACpD,WAAK,SAAS,gBAAgB,eAAe,IAAI;AAAA,IACnD,CAAC;AAAA,EACH;AAAA,EAhBA;AAAA,SAAO,SAAS;AAAA,MACd,oBAAoB;AAAA,IACtB;AAAA;AAAA,EAgBA,MAAM,SAAS,OAAgB;AAC7B,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,MAAM,aAAa,WAAsB,UAAuC;AAC9E,QAAI,KAAK;AACP;AACF,QAAI,kBAAkB,WAAW,QAAQ,KAAM,KAAK,yBAAyB,sBAAsB,QAAQ;AACzG,YAAM,KAAK,MAAM,WAAW,QAAQ;AAAA,EACxC;AAAA,EAEA,MAAM,oBAAoB,WAAsB,UAAuC;AACrF,QAAI,KAAK;AACP;AACF,QAAI,KAAK,YAAY,KAAK;AACxB,YAAM,KAAK,MAAM,WAAW,QAAQ;AAAA,EACxC;AAAA,EAEA,MAAM,MAAM,WAAsB,UAAwB;AACxD,QAAI,KAAK;AACP;AACF,SAAK,WAAW;AAChB,aAAS,qBAAiB,4BAAc;AACxC,UAAM,SAAS,IAAI,QAAc,aAAW;AAC1C,WAAK,qBAAqB,IAAI,UAAU,EAAE,SAAS,UAAU,CAAC;AAAA,IAChE,CAAC;AACD,SAAK,KAAK,SAAS,OAAO,kBAAkB;AAC5C,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,MAAe;AACpB,QAAI,CAAC,KAAK,SAAS;AACjB;AAEF,SAAK,wBAAwB;AAC7B,UAAM,cAAU,4BAAc;AAC9B,eAAW,CAAC,UAAU,EAAE,QAAQ,CAAC,KAAK,KAAK,sBAAsB;AAC/D,eAAS,eAAe;AACxB,cAAQ;AAAA,IACV;AACA,SAAK,qBAAqB,MAAM;AAChC,SAAK,KAAK,SAAS,OAAO,kBAAkB;AAAA,EAC9C;AAAA,EAEA,uBAAuB;AACrB,SAAK,wBAAwB;AAAA,EAC/B;AAAA,EAEA,SAAS,UAAkC;AACzC,QAAI;AACF,aAAO,KAAK,qBAAqB,IAAI,QAAQ;AAC/C,WAAO,CAAC,CAAC,KAAK,qBAAqB;AAAA,EACrC;AAAA,EAEA,gBAAoE;AAClE,UAAM,SAA6D,CAAC;AACpE,eAAW,CAAC,UAAU,EAAE,UAAU,CAAC,KAAK,KAAK;AAC3C,aAAO,KAAK,EAAE,UAAU,UAAU,CAAC;AACrC,WAAO;AAAA,EACT;AACF;AAEA,SAAS,kBAAkB,WAAsB,UAAiC;AAChF,MAAI,UAAU,YAAY,WAAW,QAAQ;AAC3C,WAAO;AACT,MAAI,CAAC,UAAU,YAAY,SAAS,QAAQ,WAAW,KAAC,0BAAY;AAClE,WAAO;AACT,SAAO,SAAS,WAAW;AAC7B;AAEA,SAAS,sBAAsB,UAAiC;AAC9D,MAAI,SAAS;AACX,WAAO;AACT,QAAM,WAAW,uCAAe,IAAI,SAAS,OAAO,MAAM,SAAS,MAAM;AACzE,SAAO,CAAC,CAAC,UAAU;AACrB;",
  "names": []
}
