{
  "version": 3,
  "sources": ["../../../src/server/firefox/ffAccessibility.ts"],
  "sourcesContent": ["/**\n * Copyright 2018 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as accessibility from '../accessibility';\nimport type { FFSession } from './ffConnection';\nimport type { Protocol } from './protocol';\nimport type * as dom from '../dom';\nimport type * as channels from '@protocol/channels';\n\nexport async function getAccessibilityTree(session: FFSession, needle?: dom.ElementHandle): Promise<{tree: accessibility.AXNode, needle: accessibility.AXNode | null}> {\n  const objectId = needle ? needle._objectId : undefined;\n  const { tree } = await session.send('Accessibility.getFullAXTree', { objectId });\n  const axNode = new FFAXNode(tree);\n  return {\n    tree: axNode,\n    needle: needle ? axNode._findNeedle() : null\n  };\n}\n\nconst FFRoleToARIARole = new Map(Object.entries({\n  'pushbutton': 'button',\n  'checkbutton': 'checkbox',\n  'editcombobox': 'combobox',\n  'content deletion': 'deletion',\n  'footnote': 'doc-footnote',\n  'non-native document': 'document',\n  'grouping': 'group',\n  'graphic': 'img',\n  'content insertion': 'insertion',\n  'animation': 'marquee',\n  'flat equation': 'math',\n  'menupopup': 'menu',\n  'check menu item': 'menuitemcheckbox',\n  'radio menu item': 'menuitemradio',\n  'listbox option': 'option',\n  'radiobutton': 'radio',\n  'statusbar': 'status',\n  'pagetab': 'tab',\n  'pagetablist': 'tablist',\n  'propertypage': 'tabpanel',\n  'entry': 'textbox',\n  'outline': 'tree',\n  'tree table': 'treegrid',\n  'outlineitem': 'treeitem',\n}));\n\nclass FFAXNode implements accessibility.AXNode {\n  _children: FFAXNode[];\n  private _payload: Protocol.Accessibility.AXTree;\n  private _editable: boolean;\n  private _richlyEditable: boolean;\n  private _focusable: boolean;\n  private _expanded: boolean;\n  private _name: string;\n  private _role: string;\n  private _cachedHasFocusableChild: boolean|undefined;\n\n  constructor(payload: Protocol.Accessibility.AXTree) {\n    this._payload = payload;\n    this._children = (payload.children || []).map(x => new FFAXNode(x));\n    this._editable = !!payload.editable;\n    this._richlyEditable = this._editable && (payload.tag !== 'textarea' && payload.tag !== 'input');\n    this._focusable = !!payload.focusable;\n    this._expanded = !!payload.expanded;\n    this._name = this._payload.name;\n    this._role = this._payload.role;\n  }\n\n  _isPlainTextField(): boolean {\n    if (this._richlyEditable)\n      return false;\n    if (this._editable)\n      return true;\n    return this._role === 'entry';\n  }\n\n  _isTextOnlyObject(): boolean {\n    const role = this._role;\n    return (role === 'text leaf' || role === 'text' || role === 'statictext');\n  }\n\n  _hasFocusableChild(): boolean {\n    if (this._cachedHasFocusableChild === undefined) {\n      this._cachedHasFocusableChild = false;\n      for (const child of this._children) {\n        if (child._focusable || child._hasFocusableChild()) {\n          this._cachedHasFocusableChild = true;\n          break;\n        }\n      }\n    }\n    return this._cachedHasFocusableChild;\n  }\n\n  children() {\n    return this._children;\n  }\n\n  _findNeedle(): FFAXNode | null {\n    if (this._payload.foundObject)\n      return this;\n    for (const child of this._children) {\n      const found = child._findNeedle();\n      if (found)\n        return found;\n    }\n    return null;\n  }\n\n  isLeafNode(): boolean {\n    if (!this._children.length)\n      return true;\n      // These types of objects may have children that we use as internal\n      // implementation details, but we want to expose them as leaves to platform\n      // accessibility APIs because screen readers might be confused if they find\n      // any children.\n    if (this._isPlainTextField() || this._isTextOnlyObject())\n      return true;\n      // Roles whose children are only presentational according to the ARIA and\n      // HTML5 Specs should be hidden from screen readers.\n      // (Note that whilst ARIA buttons can have only presentational children, HTML5\n      // buttons are allowed to have content.)\n    switch (this._role) {\n      case 'graphic':\n      case 'scrollbar':\n      case 'slider':\n      case 'separator':\n      case 'progressbar':\n        return true;\n      default:\n        break;\n    }\n    // Here and below: Android heuristics\n    if (this._hasFocusableChild())\n      return false;\n    if (this._focusable && this._role !== 'document' && this._name)\n      return true;\n    if (this._role === 'heading' && this._name)\n      return true;\n    return false;\n  }\n\n  isControl(): boolean {\n    switch (this._role) {\n      case 'checkbutton':\n      case 'check menu item':\n      case 'check rich option':\n      case 'combobox':\n      case 'combobox option':\n      case 'color chooser':\n      case 'listbox':\n      case 'listbox option':\n      case 'listbox rich option':\n      case 'popup menu':\n      case 'menupopup':\n      case 'menuitem':\n      case 'menubar':\n      case 'button':\n      case 'pushbutton':\n      case 'radiobutton':\n      case 'radio menuitem':\n      case 'scrollbar':\n      case 'slider':\n      case 'spinbutton':\n      case 'switch':\n      case 'pagetab':\n      case 'entry':\n      case 'tree table':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  isInteresting(insideControl: boolean): boolean {\n    if (this._focusable || this._richlyEditable)\n      return true;\n      // If it's not focusable but has a control role, then it's interesting.\n    if (this.isControl())\n      return true;\n      // A non focusable child of a control is not interesting\n    if (insideControl)\n      return false;\n    return this.isLeafNode() && !!this._name.trim();\n  }\n\n  serialize(): channels.AXNode {\n    const node: {[x in keyof channels.AXNode]: any} = {\n      role: FFRoleToARIARole.get(this._role) || this._role,\n      name: this._name || '',\n    };\n    const userStringProperties: Array<keyof channels.AXNode & keyof Protocol.Accessibility.AXTree> = [\n      'name',\n      'description',\n      'roledescription',\n      'valuetext',\n      'keyshortcuts',\n    ];\n    for (const userStringProperty of userStringProperties) {\n      if (!(userStringProperty in this._payload))\n        continue;\n      node[userStringProperty] = this._payload[userStringProperty];\n    }\n    const booleanProperties: Array<keyof channels.AXNode & keyof Protocol.Accessibility.AXTree> = [\n      'disabled',\n      'expanded',\n      'focused',\n      'modal',\n      'multiline',\n      'multiselectable',\n      'readonly',\n      'required',\n      'selected',\n    ];\n    for (const booleanProperty of booleanProperties) {\n      if (this._role === 'document' && booleanProperty === 'focused')\n        continue; // document focusing is strange\n      const value = this._payload[booleanProperty];\n      if (!value)\n        continue;\n      node[booleanProperty] = value;\n    }\n    const numericalProperties: Array<keyof channels.AXNode & keyof Protocol.Accessibility.AXTree> = [\n      'level'\n    ];\n    for (const numericalProperty of numericalProperties) {\n      if (!(numericalProperty in this._payload))\n        continue;\n      node[numericalProperty] = this._payload[numericalProperty];\n    }\n    const tokenProperties: Array<keyof channels.AXNode & keyof Protocol.Accessibility.AXTree> = [\n      'autocomplete',\n      'haspopup',\n      'orientation',\n    ];\n    for (const tokenProperty of tokenProperties) {\n      const value = this._payload[tokenProperty];\n      if (!value || value === 'false')\n        continue;\n      node[tokenProperty] = value;\n    }\n\n    const axNode = node as channels.AXNode;\n    axNode.valueString = this._payload.value;\n    if ('checked' in this._payload)\n      axNode.checked = this._payload.checked === true ? 'checked' : this._payload.checked === 'mixed' ? 'mixed' : 'unchecked';\n    if ('pressed' in this._payload)\n      axNode.pressed = this._payload.pressed === true ? 'pressed' : 'released';\n    if ('invalid' in this._payload)\n      axNode.invalid = this._payload.invalid === true ? 'true' : 'false';\n    return axNode;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
