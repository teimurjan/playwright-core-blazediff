{
  "version": 3,
  "sources": ["../../../src/server/firefox/ffInput.ts"],
  "sourcesContent": ["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as input from '../input';\nimport type { Page } from '../page';\nimport type { Progress } from '../progress';\nimport type * as types from '../types';\nimport type { FFSession } from './ffConnection';\n\nfunction toModifiersMask(modifiers: Set<types.KeyboardModifier>): number {\n  let mask = 0;\n  if (modifiers.has('Alt'))\n    mask |= 1;\n  if (modifiers.has('Control'))\n    mask |= 2;\n  if (modifiers.has('Shift'))\n    mask |= 4;\n  if (modifiers.has('Meta'))\n    mask |= 8;\n  return mask;\n}\n\nfunction toButtonNumber(button: types.MouseButton): number {\n  if (button === 'left')\n    return 0;\n  if (button === 'middle')\n    return 1;\n  if (button === 'right')\n    return 2;\n  return 0;\n}\n\nfunction toButtonsMask(buttons: Set<types.MouseButton>): number {\n  let mask = 0;\n  if (buttons.has('left'))\n    mask |= 1;\n  if (buttons.has('right'))\n    mask |= 2;\n  if (buttons.has('middle'))\n    mask |= 4;\n  return mask;\n}\n\nexport class RawKeyboardImpl implements input.RawKeyboard {\n  private _client: FFSession;\n\n  constructor(client: FFSession) {\n    this._client = client;\n  }\n\n  async keydown(progress: Progress, modifiers: Set<types.KeyboardModifier>, keyName: string, description: input.KeyDescription, autoRepeat: boolean): Promise<void> {\n    let text = description.text;\n    // Firefox will figure out Enter by itself\n    if (text === '\\r')\n      text = '';\n    const { code, key, location } = description;\n    await progress.race(this._client.send('Page.dispatchKeyEvent', {\n      type: 'keydown',\n      keyCode: description.keyCodeWithoutLocation,\n      code,\n      key,\n      repeat: autoRepeat,\n      location,\n      text,\n    }));\n  }\n\n  async keyup(progress: Progress, modifiers: Set<types.KeyboardModifier>, keyName: string, description: input.KeyDescription): Promise<void> {\n    const { code, key, location } = description;\n    await progress.race(this._client.send('Page.dispatchKeyEvent', {\n      type: 'keyup',\n      key,\n      keyCode: description.keyCodeWithoutLocation,\n      code,\n      location,\n      repeat: false\n    }));\n  }\n\n  async sendText(progress: Progress, text: string): Promise<void> {\n    await progress.race(this._client.send('Page.insertText', { text }));\n  }\n}\n\nexport class RawMouseImpl implements input.RawMouse {\n  private _client: FFSession;\n  private _page?: Page;\n\n  constructor(client: FFSession) {\n    this._client = client;\n  }\n\n  async move(progress: Progress, x: number, y: number, button: types.MouseButton | 'none', buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, forClick: boolean): Promise<void> {\n    await progress.race(this._client.send('Page.dispatchMouseEvent', {\n      type: 'mousemove',\n      button: 0,\n      buttons: toButtonsMask(buttons),\n      x: Math.floor(x),\n      y: Math.floor(y),\n      modifiers: toModifiersMask(modifiers)\n    }));\n  }\n\n  async down(progress: Progress, x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void> {\n    await progress.race(this._client.send('Page.dispatchMouseEvent', {\n      type: 'mousedown',\n      button: toButtonNumber(button),\n      buttons: toButtonsMask(buttons),\n      x: Math.floor(x),\n      y: Math.floor(y),\n      modifiers: toModifiersMask(modifiers),\n      clickCount\n    }));\n  }\n\n  async up(progress: Progress, x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void> {\n    await progress.race(this._client.send('Page.dispatchMouseEvent', {\n      type: 'mouseup',\n      button: toButtonNumber(button),\n      buttons: toButtonsMask(buttons),\n      x: Math.floor(x),\n      y: Math.floor(y),\n      modifiers: toModifiersMask(modifiers),\n      clickCount\n    }));\n  }\n\n  async wheel(progress: Progress, x: number, y: number, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, deltaX: number, deltaY: number): Promise<void> {\n    // Wheel events hit the compositor first, so wait one frame for it to be synced.\n    await this._page!.mainFrame().evaluateExpression(`new Promise(requestAnimationFrame)`, { world: 'utility' });\n    await progress.race(this._client.send('Page.dispatchWheelEvent', {\n      deltaX,\n      deltaY,\n      x: Math.floor(x),\n      y: Math.floor(y),\n      deltaZ: 0,\n      modifiers: toModifiersMask(modifiers)\n    }));\n  }\n\n  setPage(page: Page) {\n    this._page = page;\n  }\n}\n\nexport class RawTouchscreenImpl implements input.RawTouchscreen {\n  private _client: FFSession;\n\n  constructor(client: FFSession) {\n    this._client = client;\n  }\n  async tap(progress: Progress, x: number, y: number, modifiers: Set<types.KeyboardModifier>) {\n    await progress.race(this._client.send('Page.dispatchTapEvent', {\n      x,\n      y,\n      modifiers: toModifiersMask(modifiers),\n    }));\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
