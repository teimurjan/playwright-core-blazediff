{
  "version": 3,
  "sources": ["../../../src/server/firefox/ffBrowser.ts"],
  "sourcesContent": ["/**\n * Copyright 2018 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../utils';\nimport { Browser } from '../browser';\nimport { BrowserContext, verifyGeolocation } from '../browserContext';\nimport { TargetClosedError } from '../errors';\nimport * as network from '../network';\nimport { ConnectionEvents, FFConnection  } from './ffConnection';\nimport { FFPage } from './ffPage';\nimport { PageBinding } from '../page';\n\nimport type { BrowserOptions } from '../browser';\nimport type { SdkObject } from '../instrumentation';\nimport type { InitScript, Page } from '../page';\nimport type { ConnectionTransport } from '../transport';\nimport type * as types from '../types';\nimport type { FFSession } from './ffConnection';\nimport type { Protocol } from './protocol';\nimport type * as channels from '@protocol/channels';\n\nexport class FFBrowser extends Browser {\n  private _connection: FFConnection;\n  readonly session: FFSession;\n  readonly _ffPages: Map<string, FFPage>;\n  readonly _contexts: Map<string, FFBrowserContext>;\n  private _version = '';\n  private _userAgent: string = '';\n\n  static async connect(parent: SdkObject, transport: ConnectionTransport, options: BrowserOptions): Promise<FFBrowser> {\n    const connection = new FFConnection(transport, options.protocolLogger, options.browserLogsCollector);\n    const browser = new FFBrowser(parent, connection, options);\n    if ((options as any).__testHookOnConnectToBrowser)\n      await (options as any).__testHookOnConnectToBrowser();\n    let firefoxUserPrefs = options.originalLaunchOptions.firefoxUserPrefs ?? {};\n    if (Object.keys(kBandaidFirefoxUserPrefs).length)\n      firefoxUserPrefs = { ...kBandaidFirefoxUserPrefs, ...firefoxUserPrefs };\n    const promises: Promise<any>[] = [\n      browser.session.send('Browser.enable', {\n        attachToDefaultContext: !!options.persistent,\n        userPrefs: Object.entries(firefoxUserPrefs).map(([name, value]) => ({ name, value })),\n      }),\n      browser._initVersion(),\n    ];\n    if (options.persistent) {\n      browser._defaultContext = new FFBrowserContext(browser, undefined, options.persistent);\n      promises.push((browser._defaultContext as FFBrowserContext)._initialize());\n    }\n    const proxy = options.originalLaunchOptions.proxyOverride || options.proxy;\n    if (proxy)\n      promises.push(browser.session.send('Browser.setBrowserProxy', toJugglerProxyOptions(proxy)));\n    await Promise.all(promises);\n    return browser;\n  }\n\n  constructor(parent: SdkObject, connection: FFConnection, options: BrowserOptions) {\n    super(parent, options);\n    this._connection = connection;\n    this.session = connection.rootSession;\n    this._ffPages = new Map();\n    this._contexts = new Map();\n    this._connection.on(ConnectionEvents.Disconnected, () => this._onDisconnect());\n    this.session.on('Browser.attachedToTarget', this._onAttachedToTarget.bind(this));\n    this.session.on('Browser.detachedFromTarget', this._onDetachedFromTarget.bind(this));\n    this.session.on('Browser.downloadCreated', this._onDownloadCreated.bind(this));\n    this.session.on('Browser.downloadFinished', this._onDownloadFinished.bind(this));\n    this.session.on('Browser.videoRecordingFinished', this._onVideoRecordingFinished.bind(this));\n  }\n\n  async _initVersion() {\n    const result = await this.session.send('Browser.getInfo');\n    this._version = result.version.substring(result.version.indexOf('/') + 1);\n    this._userAgent = result.userAgent;\n  }\n\n  isConnected(): boolean {\n    return !this._connection._closed;\n  }\n\n  async doCreateNewContext(options: types.BrowserContextOptions): Promise<BrowserContext> {\n    if (options.isMobile)\n      throw new Error('options.isMobile is not supported in Firefox');\n    const { browserContextId } = await this.session.send('Browser.createBrowserContext', { removeOnDetach: true });\n    const context = new FFBrowserContext(this, browserContextId, options);\n    await context._initialize();\n    this._contexts.set(browserContextId, context);\n    return context;\n  }\n\n  contexts(): BrowserContext[] {\n    return Array.from(this._contexts.values());\n  }\n\n  version(): string {\n    return this._version;\n  }\n\n  userAgent(): string {\n    return this._userAgent;\n  }\n\n  _onDetachedFromTarget(payload: Protocol.Browser.detachedFromTargetPayload) {\n    const ffPage = this._ffPages.get(payload.targetId)!;\n    this._ffPages.delete(payload.targetId);\n    ffPage.didClose();\n  }\n\n  _onAttachedToTarget(payload: Protocol.Browser.attachedToTargetPayload) {\n    const { targetId, browserContextId, openerId, type } = payload.targetInfo;\n    assert(type === 'page');\n    const context = browserContextId ? this._contexts.get(browserContextId)! : this._defaultContext as FFBrowserContext;\n    assert(context, `Unknown context id:${browserContextId}, _defaultContext: ${this._defaultContext}`);\n    const session = this._connection.createSession(payload.sessionId);\n    const opener = openerId ? this._ffPages.get(openerId)! : null;\n    const ffPage = new FFPage(session, context, opener);\n    this._ffPages.set(targetId, ffPage);\n  }\n\n  _onDownloadCreated(payload: Protocol.Browser.downloadCreatedPayload) {\n    const ffPage = this._ffPages.get(payload.pageTargetId);\n    if (!ffPage)\n      return;\n\n    // Abort the navigation that turned into download.\n    ffPage._page.frameManager.frameAbortedNavigation(payload.frameId, 'Download is starting');\n\n    let originPage = ffPage._page.initializedOrUndefined();\n    // If it's a new window download, report it on the opener page.\n    if (!originPage) {\n      // Resume the page creation with an error. The page will automatically close right\n      // after the download begins.\n      ffPage._markAsError(new Error('Starting new page download'));\n      if (ffPage._opener)\n        originPage = ffPage._opener._page.initializedOrUndefined();\n    }\n    if (!originPage)\n      return;\n    this._downloadCreated(originPage, payload.uuid, payload.url, payload.suggestedFileName);\n  }\n\n  _onDownloadFinished(payload: Protocol.Browser.downloadFinishedPayload) {\n    const error = payload.canceled ? 'canceled' : payload.error;\n    this._downloadFinished(payload.uuid, error);\n  }\n\n  _onVideoRecordingFinished(payload: Protocol.Browser.videoRecordingFinishedPayload) {\n    this._takeVideo(payload.screencastId)?.reportFinished();\n  }\n\n  _onDisconnect() {\n    for (const video of this._idToVideo.values())\n      video.artifact.reportFinished(new TargetClosedError());\n    this._idToVideo.clear();\n    for (const ffPage of this._ffPages.values())\n      ffPage.didClose();\n    this._ffPages.clear();\n    this._didClose();\n  }\n}\n\nexport class FFBrowserContext extends BrowserContext {\n  declare readonly _browser: FFBrowser;\n\n  constructor(browser: FFBrowser, browserContextId: string | undefined, options: types.BrowserContextOptions) {\n    super(browser, options, browserContextId);\n  }\n\n  override async _initialize() {\n    assert(!this._ffPages().length);\n    const browserContextId = this._browserContextId;\n    const promises: Promise<any>[] = [\n      super._initialize(),\n      this._updateInitScripts(),\n    ];\n    if (this._options.acceptDownloads !== 'internal-browser-default') {\n      promises.push(this._browser.session.send('Browser.setDownloadOptions', {\n        browserContextId,\n        downloadOptions: {\n          behavior: this._options.acceptDownloads === 'accept' ? 'saveToDisk' : 'cancel',\n          downloadsDir: this._browser.options.downloadsPath,\n        },\n      }));\n    }\n    promises.push(this.doUpdateDefaultViewport());\n    if (this._options.hasTouch)\n      promises.push(this._browser.session.send('Browser.setTouchOverride', { browserContextId, hasTouch: true }));\n    if (this._options.userAgent)\n      promises.push(this._browser.session.send('Browser.setUserAgentOverride', { browserContextId, userAgent: this._options.userAgent }));\n    if (this._options.bypassCSP)\n      promises.push(this._browser.session.send('Browser.setBypassCSP', { browserContextId, bypassCSP: true }));\n    if (this._options.ignoreHTTPSErrors || this._options.internalIgnoreHTTPSErrors)\n      promises.push(this._browser.session.send('Browser.setIgnoreHTTPSErrors', { browserContextId, ignoreHTTPSErrors: true }));\n    if (this._options.javaScriptEnabled === false)\n      promises.push(this._browser.session.send('Browser.setJavaScriptDisabled', { browserContextId, javaScriptDisabled: true }));\n    if (this._options.locale)\n      promises.push(this._browser.session.send('Browser.setLocaleOverride', { browserContextId, locale: this._options.locale }));\n    if (this._options.timezoneId)\n      promises.push(this._browser.session.send('Browser.setTimezoneOverride', { browserContextId, timezoneId: this._options.timezoneId }));\n    if (this._options.extraHTTPHeaders || this._options.locale)\n      promises.push(this.doUpdateExtraHTTPHeaders());\n    if (this._options.httpCredentials)\n      promises.push(this.setHTTPCredentials(this._options.httpCredentials));\n    if (this._options.geolocation)\n      promises.push(this.setGeolocation(this._options.geolocation));\n    if (this._options.offline)\n      promises.push(this.doUpdateOffline());\n    promises.push(this.doUpdateDefaultEmulatedMedia());\n    if (this._options.recordVideo) {\n      promises.push(this._ensureVideosPath().then(() => {\n        return this._browser.session.send('Browser.setVideoRecordingOptions', {\n          // validateBrowserContextOptions ensures correct video size.\n          options: {\n            ...this._options.recordVideo!.size!,\n            dir: this._options.recordVideo!.dir,\n          },\n          browserContextId: this._browserContextId\n        });\n      }));\n    }\n    const proxy = this._options.proxyOverride || this._options.proxy;\n    if (proxy) {\n      promises.push(this._browser.session.send('Browser.setContextProxy', {\n        browserContextId: this._browserContextId,\n        ...toJugglerProxyOptions(proxy)\n      }));\n    }\n\n    await Promise.all(promises);\n  }\n\n  _ffPages(): FFPage[] {\n    return Array.from(this._browser._ffPages.values()).filter(ffPage => ffPage._browserContext === this);\n  }\n\n  override possiblyUninitializedPages(): Page[] {\n    return this._ffPages().map(ffPage => ffPage._page);\n  }\n\n  override async doCreateNewPage(): Promise<Page> {\n    const { targetId } = await this._browser.session.send('Browser.newPage', {\n      browserContextId: this._browserContextId\n    }).catch(e =>  {\n      if (e.message.includes('Failed to override timezone'))\n        throw new Error(`Invalid timezone ID: ${this._options.timezoneId}`);\n      throw e;\n    });\n    return this._browser._ffPages.get(targetId)!._page;\n  }\n\n  async doGetCookies(urls: string[]): Promise<channels.NetworkCookie[]> {\n    const { cookies } = await this._browser.session.send('Browser.getCookies', { browserContextId: this._browserContextId });\n    return network.filterCookies(cookies.map(c => {\n      const { name, value, domain, path, expires, httpOnly, secure, sameSite } = c;\n      return {\n        name,\n        value,\n        domain,\n        path,\n        expires,\n        httpOnly,\n        secure,\n        sameSite,\n      };\n    }), urls);\n  }\n\n  async addCookies(cookies: channels.SetNetworkCookie[]) {\n    const cc = network.rewriteCookies(cookies).map(c => {\n      const { name, value, url, domain, path, expires, httpOnly, secure, sameSite } = c;\n      return {\n        name,\n        value,\n        url,\n        domain,\n        path,\n        expires: expires === -1 ? undefined : expires,\n        httpOnly,\n        secure,\n        sameSite\n      };\n    });\n    await this._browser.session.send('Browser.setCookies', { browserContextId: this._browserContextId, cookies: cc });\n  }\n\n  async doClearCookies() {\n    await this._browser.session.send('Browser.clearCookies', { browserContextId: this._browserContextId });\n  }\n\n  async doGrantPermissions(origin: string, permissions: string[]) {\n    const webPermissionToProtocol = new Map<string, 'geo' | 'desktop-notification' | 'persistent-storage' | 'push'>([\n      ['geolocation', 'geo'],\n      ['persistent-storage', 'persistent-storage'],\n      ['push', 'push'],\n      ['notifications', 'desktop-notification'],\n    ]);\n    const filtered = permissions.map(permission => {\n      const protocolPermission = webPermissionToProtocol.get(permission);\n      if (!protocolPermission)\n        throw new Error('Unknown permission: ' + permission);\n      return protocolPermission;\n    });\n    await this._browser.session.send('Browser.grantPermissions', { origin: origin, browserContextId: this._browserContextId, permissions: filtered });\n  }\n\n  async doClearPermissions() {\n    await this._browser.session.send('Browser.resetPermissions', { browserContextId: this._browserContextId });\n  }\n\n  async setGeolocation(geolocation?: types.Geolocation): Promise<void> {\n    verifyGeolocation(geolocation);\n    this._options.geolocation = geolocation;\n    await this._browser.session.send('Browser.setGeolocationOverride', { browserContextId: this._browserContextId, geolocation: geolocation || null });\n  }\n\n  async doUpdateExtraHTTPHeaders(): Promise<void> {\n    let allHeaders = this._options.extraHTTPHeaders || [];\n    if (this._options.locale)\n      allHeaders = network.mergeHeaders([allHeaders, network.singleHeader('Accept-Language', this._options.locale)]);\n    await this._browser.session.send('Browser.setExtraHTTPHeaders', { browserContextId: this._browserContextId, headers: allHeaders });\n  }\n\n  async setUserAgent(userAgent: string | undefined): Promise<void> {\n    await this._browser.session.send('Browser.setUserAgentOverride', { browserContextId: this._browserContextId, userAgent: userAgent || null });\n  }\n\n  async doUpdateOffline(): Promise<void> {\n    await this._browser.session.send('Browser.setOnlineOverride', { browserContextId: this._browserContextId, override: this._options.offline ? 'offline' : 'online' });\n  }\n\n  async doSetHTTPCredentials(httpCredentials?: types.Credentials): Promise<void> {\n    this._options.httpCredentials = httpCredentials;\n    let credentials = null;\n    if (httpCredentials) {\n      const { username, password, origin } = httpCredentials;\n      credentials = { username, password, origin };\n    }\n    await this._browser.session.send('Browser.setHTTPCredentials', { browserContextId: this._browserContextId, credentials });\n  }\n\n  async doAddInitScript(initScript: InitScript) {\n    await this._updateInitScripts();\n  }\n\n  async doRemoveInitScripts(initScripts: InitScript[]) {\n    await this._updateInitScripts();\n  }\n\n  private async _updateInitScripts() {\n    const bindingScripts = [...this._pageBindings.values()].map(binding => binding.initScript.source);\n    if (this.bindingsInitScript)\n      bindingScripts.unshift(this.bindingsInitScript.source);\n    const initScripts = this.initScripts.map(script => script.source);\n    await this._browser.session.send('Browser.setInitScripts', { browserContextId: this._browserContextId, scripts: [...bindingScripts, ...initScripts].map(script => ({ script })) });\n  }\n\n  async doUpdateRequestInterception(): Promise<void> {\n    await Promise.all([\n      this._browser.session.send('Browser.setRequestInterception', { browserContextId: this._browserContextId, enabled: this.requestInterceptors.length > 0 }),\n      this._browser.session.send('Browser.setCacheDisabled', { browserContextId: this._browserContextId, cacheDisabled: this.requestInterceptors.length > 0 }),\n    ]);\n  }\n\n  override async doUpdateDefaultViewport() {\n    if (!this._options.viewport)\n      return;\n    const viewport = {\n      viewportSize: { width: this._options.viewport.width, height: this._options.viewport.height },\n      deviceScaleFactor: this._options.deviceScaleFactor || 1,\n    };\n    await this._browser.session.send('Browser.setDefaultViewport', { browserContextId: this._browserContextId, viewport });\n  }\n\n  override async doUpdateDefaultEmulatedMedia() {\n    if (this._options.colorScheme !== 'no-override') {\n      await this._browser.session.send('Browser.setColorScheme', {\n        browserContextId: this._browserContextId,\n        colorScheme: this._options.colorScheme !== undefined  ? this._options.colorScheme : 'light',\n      });\n    }\n    if (this._options.reducedMotion !== 'no-override') {\n      await this._browser.session.send('Browser.setReducedMotion', {\n        browserContextId: this._browserContextId,\n        reducedMotion: this._options.reducedMotion !== undefined  ? this._options.reducedMotion : 'no-preference',\n      });\n    }\n    if (this._options.forcedColors !== 'no-override') {\n      await this._browser.session.send('Browser.setForcedColors', {\n        browserContextId: this._browserContextId,\n        forcedColors: this._options.forcedColors !== undefined  ? this._options.forcedColors : 'none',\n      });\n    }\n    if (this._options.contrast !== 'no-override') {\n      await this._browser.session.send('Browser.setContrast', {\n        browserContextId: this._browserContextId,\n        contrast: this._options.contrast !== undefined  ? this._options.contrast : 'no-preference',\n      });\n    }\n  }\n\n  override async doExposePlaywrightBinding() {\n    this._browser.session.send('Browser.addBinding', { browserContextId: this._browserContextId, name: PageBinding.kBindingName, script: '' });\n  }\n\n  onClosePersistent() {}\n\n  override async clearCache(): Promise<void> {\n    // Clearing only the context cache does not work: https://bugzilla.mozilla.org/show_bug.cgi?id=1819147\n    await this._browser.session.send('Browser.clearCache');\n  }\n\n  async doClose(reason: string | undefined) {\n    if (!this._browserContextId) {\n      if (this._options.recordVideo) {\n        await this._browser.session.send('Browser.setVideoRecordingOptions', {\n          options: undefined,\n          browserContextId: this._browserContextId\n        });\n      }\n      // Closing persistent context should close the browser.\n      await this._browser.close({ reason });\n    } else {\n      await this._browser.session.send('Browser.removeBrowserContext', { browserContextId: this._browserContextId });\n      this._browser._contexts.delete(this._browserContextId);\n    }\n  }\n\n  async cancelDownload(uuid: string) {\n    await this._browser.session.send('Browser.cancelDownload', { uuid });\n  }\n}\n\nfunction toJugglerProxyOptions(proxy: types.ProxySettings) {\n  const proxyServer = new URL(proxy.server);\n  let port = parseInt(proxyServer.port, 10);\n  let type: 'http' | 'https' | 'socks' | 'socks4' = 'http';\n  if (proxyServer.protocol === 'socks5:')\n    type = 'socks';\n  else if (proxyServer.protocol === 'socks4:')\n    type = 'socks4';\n  else if (proxyServer.protocol === 'https:')\n    type = 'https';\n  if (proxyServer.port === '') {\n    if (proxyServer.protocol === 'http:')\n      port = 80;\n    else if (proxyServer.protocol === 'https:')\n      port = 443;\n  }\n  return {\n    type,\n    bypass: proxy.bypass ? proxy.bypass.split(',').map(domain => domain.trim()) : [],\n    host: proxyServer.hostname,\n    port,\n    username: proxy.username,\n    password: proxy.password\n  };\n}\n\n// Prefs for quick fixes that didn't make it to the build.\n// Should all be moved to `playwright.cfg`.\nconst kBandaidFirefoxUserPrefs = {\n};\n"],
  "mappings": "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",
  "names": []
}
