{
  "version": 3,
  "sources": ["../../../src/server/firefox/ffPage.ts"],
  "sourcesContent": ["/**\n * Copyright 2019 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { eventsHelper } from '../utils/eventsHelper';\nimport * as dialog from '../dialog';\nimport * as dom from '../dom';\nimport { InitScript } from '../page';\nimport { Page, Worker } from '../page';\nimport { getAccessibilityTree } from './ffAccessibility';\nimport { FFSession } from './ffConnection';\nimport { createHandle, FFExecutionContext } from './ffExecutionContext';\nimport { RawKeyboardImpl, RawMouseImpl, RawTouchscreenImpl } from './ffInput';\nimport { FFNetworkManager } from './ffNetworkManager';\nimport { debugLogger } from '../utils/debugLogger';\nimport { splitErrorMessage } from '../../utils/isomorphic/stackTrace';\nimport { BrowserContext } from '../browserContext';\nimport { TargetClosedError } from '../errors';\n\nimport type { Progress } from '../progress';\nimport type { FFBrowserContext } from './ffBrowser';\nimport type { Protocol } from './protocol';\nimport type { RegisteredListener } from '../utils/eventsHelper';\nimport type * as frames from '../frames';\nimport type { PageDelegate } from '../page';\nimport type * as types from '../types';\n\nexport const UTILITY_WORLD_NAME = '__playwright_utility_world__';\n\nexport class FFPage implements PageDelegate {\n  readonly cspErrorsAsynchronousForInlineScripts = true;\n  readonly rawMouse: RawMouseImpl;\n  readonly rawKeyboard: RawKeyboardImpl;\n  readonly rawTouchscreen: RawTouchscreenImpl;\n  readonly _session: FFSession;\n  readonly _page: Page;\n  readonly _networkManager: FFNetworkManager;\n  readonly _browserContext: FFBrowserContext;\n  private _reportedAsNew = false;\n  readonly _opener: FFPage | null;\n  private readonly _contextIdToContext: Map<string, dom.FrameExecutionContext>;\n  private _eventListeners: RegisteredListener[];\n  private _workers = new Map<string, { frameId: string, session: FFSession }>();\n  private _screencastId: string | undefined;\n  private _initScripts: { initScript: InitScript, worldName?: string }[] = [];\n\n  constructor(session: FFSession, browserContext: FFBrowserContext, opener: FFPage | null) {\n    this._session = session;\n    this._opener = opener;\n    this.rawKeyboard = new RawKeyboardImpl(session);\n    this.rawMouse = new RawMouseImpl(session);\n    this.rawTouchscreen = new RawTouchscreenImpl(session);\n    this._contextIdToContext = new Map();\n    this._browserContext = browserContext;\n    this._page = new Page(this, browserContext);\n    this.rawMouse.setPage(this._page);\n    this._networkManager = new FFNetworkManager(session, this._page);\n    this._page.on(Page.Events.FrameDetached, frame => this._removeContextsForFrame(frame));\n    // TODO: remove Page.willOpenNewWindowAsynchronously from the protocol.\n    this._eventListeners = [\n      eventsHelper.addEventListener(this._session, 'Page.eventFired', this._onEventFired.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.frameAttached', this._onFrameAttached.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.frameDetached', this._onFrameDetached.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.navigationAborted', this._onNavigationAborted.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.navigationCommitted', this._onNavigationCommitted.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.navigationStarted', this._onNavigationStarted.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.sameDocumentNavigation', this._onSameDocumentNavigation.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Runtime.executionContextCreated', this._onExecutionContextCreated.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Runtime.executionContextDestroyed', this._onExecutionContextDestroyed.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Runtime.executionContextsCleared', this._onExecutionContextsCleared.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.linkClicked', event => this._onLinkClicked(event.phase)),\n      eventsHelper.addEventListener(this._session, 'Page.uncaughtError', this._onUncaughtError.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Runtime.console', this._onConsole.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.dialogOpened', this._onDialogOpened.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.bindingCalled', this._onBindingCalled.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.fileChooserOpened', this._onFileChooserOpened.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.workerCreated', this._onWorkerCreated.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.workerDestroyed', this._onWorkerDestroyed.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.dispatchMessageFromWorker', this._onDispatchMessageFromWorker.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.crashed', this._onCrashed.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.videoRecordingStarted', this._onVideoRecordingStarted.bind(this)),\n\n      eventsHelper.addEventListener(this._session, 'Page.webSocketCreated', this._onWebSocketCreated.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.webSocketClosed', this._onWebSocketClosed.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.webSocketFrameReceived', this._onWebSocketFrameReceived.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.webSocketFrameSent', this._onWebSocketFrameSent.bind(this)),\n      eventsHelper.addEventListener(this._session, 'Page.screencastFrame', this._onScreencastFrame.bind(this)),\n\n    ];\n    this._session.once('Page.ready', () => {\n      if (this._reportedAsNew)\n        return;\n      this._reportedAsNew = true;\n      this._page.reportAsNew(this._opener?._page);\n    });\n    // Ideally, we somehow ensure that utility world is created before Page.ready arrives, but currently it is racy.\n    // Therefore, we can end up with an initialized page without utility world, although very unlikely.\n    this.addInitScript(new InitScript(''), UTILITY_WORLD_NAME).catch(e => this._markAsError(e));\n  }\n\n  async _markAsError(error: Error) {\n    // Same error may be reported twice: channel disconnected and session.send fails.\n    if (this._reportedAsNew)\n      return;\n    this._reportedAsNew = true;\n    this._page.reportAsNew(this._opener?._page, error);\n  }\n\n  _onWebSocketCreated(event: Protocol.Page.webSocketCreatedPayload) {\n    this._page.frameManager.onWebSocketCreated(webSocketId(event.frameId, event.wsid), event.requestURL);\n    this._page.frameManager.onWebSocketRequest(webSocketId(event.frameId, event.wsid));\n  }\n\n  _onWebSocketClosed(event: Protocol.Page.webSocketClosedPayload) {\n    if (event.error)\n      this._page.frameManager.webSocketError(webSocketId(event.frameId, event.wsid), event.error);\n    this._page.frameManager.webSocketClosed(webSocketId(event.frameId, event.wsid));\n  }\n\n  _onWebSocketFrameReceived(event: Protocol.Page.webSocketFrameReceivedPayload) {\n    this._page.frameManager.webSocketFrameReceived(webSocketId(event.frameId, event.wsid), event.opcode, event.data);\n  }\n\n  _onWebSocketFrameSent(event: Protocol.Page.webSocketFrameSentPayload) {\n    this._page.frameManager.onWebSocketFrameSent(webSocketId(event.frameId, event.wsid), event.opcode, event.data);\n  }\n\n  _onExecutionContextCreated(payload: Protocol.Runtime.executionContextCreatedPayload) {\n    const { executionContextId, auxData } = payload;\n    const frame = this._page.frameManager.frame(auxData.frameId!);\n    if (!frame)\n      return;\n    const delegate = new FFExecutionContext(this._session, executionContextId);\n    let worldName: types.World|null = null;\n    if (auxData.name === UTILITY_WORLD_NAME)\n      worldName = 'utility';\n    else if (!auxData.name)\n      worldName = 'main';\n    const context = new dom.FrameExecutionContext(delegate, frame, worldName);\n    if (worldName)\n      frame._contextCreated(worldName, context);\n    this._contextIdToContext.set(executionContextId, context);\n  }\n\n  _onExecutionContextDestroyed(payload: Protocol.Runtime.executionContextDestroyedPayload) {\n    const { executionContextId } = payload;\n    const context = this._contextIdToContext.get(executionContextId);\n    if (!context)\n      return;\n    this._contextIdToContext.delete(executionContextId);\n    context.frame._contextDestroyed(context);\n  }\n\n  _onExecutionContextsCleared() {\n    for (const executionContextId of Array.from(this._contextIdToContext.keys()))\n      this._onExecutionContextDestroyed({ executionContextId });\n  }\n\n  private _removeContextsForFrame(frame: frames.Frame) {\n    for (const [contextId, context] of this._contextIdToContext) {\n      if (context.frame === frame)\n        this._contextIdToContext.delete(contextId);\n    }\n  }\n\n  _onLinkClicked(phase: 'before' | 'after') {\n    if (phase === 'before')\n      this._page.frameManager.frameWillPotentiallyRequestNavigation();\n    else\n      this._page.frameManager.frameDidPotentiallyRequestNavigation();\n  }\n\n  _onNavigationStarted(params: Protocol.Page.navigationStartedPayload) {\n    this._page.frameManager.frameRequestedNavigation(params.frameId, params.navigationId);\n  }\n\n  _onNavigationAborted(params: Protocol.Page.navigationAbortedPayload) {\n    this._page.frameManager.frameAbortedNavigation(params.frameId, params.errorText, params.navigationId);\n  }\n\n  _onNavigationCommitted(params: Protocol.Page.navigationCommittedPayload) {\n    for (const [workerId, worker] of this._workers) {\n      if (worker.frameId === params.frameId)\n        this._onWorkerDestroyed({ workerId });\n    }\n    this._page.frameManager.frameCommittedNewDocumentNavigation(params.frameId, params.url, params.name || '', params.navigationId || '', false);\n  }\n\n  _onSameDocumentNavigation(params: Protocol.Page.sameDocumentNavigationPayload) {\n    this._page.frameManager.frameCommittedSameDocumentNavigation(params.frameId, params.url);\n  }\n\n  _onFrameAttached(params: Protocol.Page.frameAttachedPayload) {\n    this._page.frameManager.frameAttached(params.frameId, params.parentFrameId);\n  }\n\n  _onFrameDetached(params: Protocol.Page.frameDetachedPayload) {\n    this._page.frameManager.frameDetached(params.frameId);\n  }\n\n  _onEventFired(payload: Protocol.Page.eventFiredPayload) {\n    const { frameId, name } = payload;\n    if (name === 'load')\n      this._page.frameManager.frameLifecycleEvent(frameId, 'load');\n    if (name === 'DOMContentLoaded')\n      this._page.frameManager.frameLifecycleEvent(frameId, 'domcontentloaded');\n  }\n\n  _onUncaughtError(params: Protocol.Page.uncaughtErrorPayload) {\n    const { name, message } = splitErrorMessage(params.message);\n    const error = new Error(message);\n    error.stack = params.message + '\\n' + params.stack.split('\\n').filter(Boolean).map(a => a.replace(/([^@]*)@(.*)/, '    at $1 ($2)')).join('\\n');\n    error.name = name;\n    this._page.emitOnContextOnceInitialized(BrowserContext.Events.PageError, error, this._page);\n  }\n\n  _onConsole(payload: Protocol.Runtime.consolePayload) {\n    const { type, args, executionContextId, location } = payload;\n    const context = this._contextIdToContext.get(executionContextId);\n    if (!context)\n      return;\n    // Juggler reports 'warn' for some internal messages generated by the browser.\n    this._page.addConsoleMessage(type === 'warn' ? 'warning' : type, args.map(arg => createHandle(context, arg)), location);\n  }\n\n  _onDialogOpened(params: Protocol.Page.dialogOpenedPayload) {\n    this._page.browserContext.dialogManager.dialogDidOpen(new dialog.Dialog(\n        this._page,\n        params.type,\n        params.message,\n        async (accept: boolean, promptText?: string) => {\n          await this._session.sendMayFail('Page.handleDialog', { dialogId: params.dialogId, accept, promptText });\n        },\n        params.defaultValue));\n  }\n\n  async _onBindingCalled(event: Protocol.Page.bindingCalledPayload) {\n    const pageOrError = await this._page.waitForInitializedOrError();\n    if (!(pageOrError instanceof Error)) {\n      const context = this._contextIdToContext.get(event.executionContextId);\n      if (context)\n        await this._page.onBindingCalled(event.payload, context);\n    }\n  }\n\n  async _onFileChooserOpened(payload: Protocol.Page.fileChooserOpenedPayload) {\n    const { executionContextId, element } = payload;\n    const context = this._contextIdToContext.get(executionContextId);\n    if (!context)\n      return;\n    const handle = createHandle(context, element).asElement()!;\n    await this._page._onFileChooserOpened(handle);\n  }\n\n  async _onWorkerCreated(event: Protocol.Page.workerCreatedPayload) {\n    const workerId = event.workerId;\n    const worker = new Worker(this._page, event.url);\n    const workerSession = new FFSession(this._session._connection, workerId, (message: any) => {\n      this._session.send('Page.sendMessageToWorker', {\n        frameId: event.frameId,\n        workerId: workerId,\n        message: JSON.stringify(message)\n      }).catch(e => {\n        workerSession.dispatchMessage({ id: message.id, method: '', params: {}, error: { message: e.message, data: undefined } });\n      });\n    });\n    this._workers.set(workerId, { session: workerSession, frameId: event.frameId });\n    this._page.addWorker(workerId, worker);\n    workerSession.once('Runtime.executionContextCreated', event => {\n      worker.createExecutionContext(new FFExecutionContext(workerSession, event.executionContextId));\n    });\n    workerSession.on('Runtime.console', event => {\n      const { type, args, location } = event;\n      const context = worker.existingExecutionContext!;\n      this._page.addConsoleMessage(type, args.map(arg => createHandle(context, arg)), location);\n    });\n    // Note: we receive worker exceptions directly from the page.\n  }\n\n  _onWorkerDestroyed(event: Protocol.Page.workerDestroyedPayload) {\n    const workerId = event.workerId;\n    const worker = this._workers.get(workerId);\n    if (!worker)\n      return;\n    worker.session.dispose();\n    this._workers.delete(workerId);\n    this._page.removeWorker(workerId);\n  }\n\n  async _onDispatchMessageFromWorker(event: Protocol.Page.dispatchMessageFromWorkerPayload) {\n    const worker = this._workers.get(event.workerId);\n    if (!worker)\n      return;\n    worker.session.dispatchMessage(JSON.parse(event.message));\n  }\n\n  async _onCrashed(event: Protocol.Page.crashedPayload) {\n    this._session.markAsCrashed();\n    this._page._didCrash();\n  }\n\n  _onVideoRecordingStarted(event: Protocol.Page.videoRecordingStartedPayload) {\n    this._browserContext._browser._videoStarted(this._browserContext, event.screencastId, event.file, this._page.waitForInitializedOrError());\n  }\n\n  didClose() {\n    this._markAsError(new TargetClosedError());\n    this._session.dispose();\n    eventsHelper.removeEventListeners(this._eventListeners);\n    this._networkManager.dispose();\n    this._page._didClose();\n  }\n\n  async navigateFrame(frame: frames.Frame, url: string, referer: string | undefined): Promise<frames.GotoResult> {\n    const response = await this._session.send('Page.navigate', { url, referer, frameId: frame._id });\n    return { newDocumentId: response.navigationId || undefined };\n  }\n\n  async updateExtraHTTPHeaders(): Promise<void> {\n    await this._session.send('Network.setExtraHTTPHeaders', { headers: this._page.extraHTTPHeaders() || [] });\n  }\n\n  async updateEmulatedViewportSize(): Promise<void> {\n    const viewportSize = this._page.emulatedSize()?.viewport ?? null;\n    await this._session.send('Page.setViewportSize', { viewportSize });\n  }\n\n  async bringToFront(): Promise<void> {\n    await this._session.send('Page.bringToFront', {});\n  }\n\n  async updateEmulateMedia(): Promise<void> {\n    const emulatedMedia = this._page.emulatedMedia();\n    const colorScheme = emulatedMedia.colorScheme === 'no-override' ? undefined : emulatedMedia.colorScheme;\n    const reducedMotion = emulatedMedia.reducedMotion === 'no-override' ? undefined : emulatedMedia.reducedMotion;\n    const forcedColors = emulatedMedia.forcedColors === 'no-override' ? undefined : emulatedMedia.forcedColors;\n    const contrast = emulatedMedia.contrast === 'no-override' ? undefined : emulatedMedia.contrast;\n    await this._session.send('Page.setEmulatedMedia', {\n      // Empty string means reset.\n      type: emulatedMedia.media === 'no-override' ? '' : emulatedMedia.media,\n      colorScheme,\n      reducedMotion,\n      forcedColors,\n      contrast,\n    });\n  }\n\n  async updateRequestInterception(): Promise<void> {\n    await this._networkManager.setRequestInterception(this._page.needsRequestInterception());\n  }\n\n  async updateFileChooserInterception() {\n    const enabled = this._page.fileChooserIntercepted();\n    await this._session.send('Page.setInterceptFileChooserDialog', { enabled }).catch(() => {}); // target can be closed.\n  }\n\n  async reload(): Promise<void> {\n    await this._session.send('Page.reload');\n  }\n\n  async goBack(): Promise<boolean> {\n    const { success } = await this._session.send('Page.goBack', { frameId: this._page.mainFrame()._id });\n    return success;\n  }\n\n  async goForward(): Promise<boolean> {\n    const { success } = await this._session.send('Page.goForward', { frameId: this._page.mainFrame()._id });\n    return success;\n  }\n\n  async requestGC(): Promise<void> {\n    await this._session.send('Heap.collectGarbage');\n  }\n\n  async addInitScript(initScript: InitScript, worldName?: string): Promise<void> {\n    this._initScripts.push({ initScript, worldName });\n    await this._updateInitScripts();\n  }\n\n  async removeInitScripts(initScripts: InitScript[]): Promise<void> {\n    const set = new Set(initScripts);\n    this._initScripts = this._initScripts.filter(s => !set.has(s.initScript));\n    await this._updateInitScripts();\n  }\n\n  private async _updateInitScripts() {\n    await this._session.send('Page.setInitScripts', { scripts: this._initScripts.map(s => ({ script: s.initScript.source, worldName: s.worldName })) });\n  }\n\n  async closePage(runBeforeUnload: boolean): Promise<void> {\n    await this._session.send('Page.close', { runBeforeUnload });\n  }\n\n  async setBackgroundColor(color?: { r: number; g: number; b: number; a: number; }): Promise<void> {\n    if (color)\n      throw new Error('Not implemented');\n  }\n\n  async takeScreenshot(progress: Progress, format: 'png' | 'jpeg', documentRect: types.Rect | undefined, viewportRect: types.Rect | undefined, quality: number | undefined, fitsViewport: boolean, scale: 'css' | 'device'): Promise<Buffer> {\n    if (!documentRect) {\n      const scrollOffset = await this._page.mainFrame().waitForFunctionValueInUtility(progress, () => ({ x: window.scrollX, y: window.scrollY }));\n      documentRect = {\n        x: viewportRect!.x + scrollOffset.x,\n        y: viewportRect!.y + scrollOffset.y,\n        width: viewportRect!.width,\n        height: viewportRect!.height,\n      };\n    }\n    const { data } = await progress.race(this._session.send('Page.screenshot', {\n      mimeType: ('image/' + format) as ('image/png' | 'image/jpeg'),\n      clip: documentRect,\n      quality,\n      omitDeviceScaleFactor: scale === 'css',\n    }));\n    return Buffer.from(data, 'base64');\n  }\n\n  async getContentFrame(handle: dom.ElementHandle): Promise<frames.Frame | null> {\n    const { contentFrameId } = await this._session.send('Page.describeNode', {\n      frameId: handle._context.frame._id,\n      objectId: handle._objectId,\n    });\n    if (!contentFrameId)\n      return null;\n    return this._page.frameManager.frame(contentFrameId);\n  }\n\n  async getOwnerFrame(handle: dom.ElementHandle): Promise<string | null> {\n    const { ownerFrameId } = await this._session.send('Page.describeNode', {\n      frameId: handle._context.frame._id,\n      objectId: handle._objectId\n    });\n    return ownerFrameId || null;\n  }\n\n  async getBoundingBox(handle: dom.ElementHandle): Promise<types.Rect | null> {\n    const quads = await this.getContentQuads(handle);\n    if (!quads || !quads.length)\n      return null;\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for (const quad of quads) {\n      for (const point of quad) {\n        minX = Math.min(minX, point.x);\n        maxX = Math.max(maxX, point.x);\n        minY = Math.min(minY, point.y);\n        maxY = Math.max(maxY, point.y);\n      }\n    }\n    return { x: minX, y: minY, width: maxX - minX, height: maxY - minY };\n  }\n\n  async scrollRectIntoViewIfNeeded(handle: dom.ElementHandle, rect?: types.Rect): Promise<'error:notvisible' | 'error:notconnected' | 'done'> {\n    return await this._session.send('Page.scrollIntoViewIfNeeded', {\n      frameId: handle._context.frame._id,\n      objectId: handle._objectId,\n      rect,\n    }).then(() => 'done' as const).catch(e => {\n      if (e instanceof Error && e.message.includes('Node is detached from document'))\n        return 'error:notconnected';\n      if (e instanceof Error && e.message.includes('Node does not have a layout object'))\n        return 'error:notvisible';\n      throw e;\n    });\n  }\n\n  async setScreencastOptions(options: { width: number, height: number, quality: number } | null): Promise<void> {\n    if (options) {\n      const { screencastId } = await this._session.send('Page.startScreencast', options);\n      this._screencastId = screencastId;\n    } else {\n      await this._session.send('Page.stopScreencast');\n    }\n  }\n\n  private _onScreencastFrame(event: Protocol.Page.screencastFramePayload) {\n    if (!this._screencastId)\n      return;\n    const screencastId = this._screencastId;\n    this._page.throttleScreencastFrameAck(() => {\n      this._session.send('Page.screencastFrameAck', { screencastId }).catch(e => debugLogger.log('error', e));\n    });\n\n    const buffer = Buffer.from(event.data, 'base64');\n    this._page.emit(Page.Events.ScreencastFrame, {\n      buffer,\n      width: event.deviceWidth,\n      height: event.deviceHeight,\n    });\n  }\n\n  rafCountForStablePosition(): number {\n    return 1;\n  }\n\n  async getContentQuads(handle: dom.ElementHandle): Promise<types.Quad[] | null> {\n    const result = await this._session.sendMayFail('Page.getContentQuads', {\n      frameId: handle._context.frame._id,\n      objectId: handle._objectId,\n    });\n    if (!result)\n      return null;\n    return result.quads.map(quad => [quad.p1, quad.p2, quad.p3, quad.p4]);\n  }\n\n  async setInputFilePaths(handle: dom.ElementHandle<HTMLInputElement>, files: string[]): Promise<void> {\n    await this._session.send('Page.setFileInputFiles', {\n      frameId: handle._context.frame._id,\n      objectId: handle._objectId,\n      files\n    });\n  }\n\n  async adoptElementHandle<T extends Node>(handle: dom.ElementHandle<T>, to: dom.FrameExecutionContext): Promise<dom.ElementHandle<T>> {\n    const result = await this._session.send('Page.adoptNode', {\n      frameId: handle._context.frame._id,\n      objectId: handle._objectId,\n      executionContextId: (to.delegate as FFExecutionContext)._executionContextId\n    });\n    if (!result.remoteObject)\n      throw new Error(dom.kUnableToAdoptErrorMessage);\n    return createHandle(to, result.remoteObject) as dom.ElementHandle<T>;\n  }\n\n  async getAccessibilityTree(needle?: dom.ElementHandle) {\n    return getAccessibilityTree(this._session, needle);\n  }\n\n  async inputActionEpilogue(): Promise<void> {\n  }\n\n  async resetForReuse(progress: Progress): Promise<void> {\n    // Firefox sometimes keeps the last mouse position in the page,\n    // which affects things like hovered state.\n    // See https://github.com/microsoft/playwright/issues/22432.\n    // Move mouse to (-1, -1) to avoid anything being hovered.\n    await this.rawMouse.move(progress, -1, -1, 'none', new Set(), new Set(), false);\n  }\n\n  async getFrameElement(frame: frames.Frame): Promise<dom.ElementHandle> {\n    const parent = frame.parentFrame();\n    if (!parent)\n      throw new Error('Frame has been detached.');\n    const context = await parent._mainContext();\n    const result = await this._session.send('Page.adoptNode', {\n      frameId: frame._id,\n      executionContextId: (context.delegate as FFExecutionContext)._executionContextId\n    });\n    if (!result.remoteObject)\n      throw new Error('Frame has been detached.');\n    return createHandle(context, result.remoteObject) as dom.ElementHandle;\n  }\n\n  shouldToggleStyleSheetToSyncAnimations(): boolean {\n    return false;\n  }\n}\n\nfunction webSocketId(frameId: string, wsid: string): string {\n  return `${frameId}---${wsid}`;\n}\n"],
  "mappings": "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",
  "names": ["import_page", "event"]
}
