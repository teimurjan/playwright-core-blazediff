{
  "version": 3,
  "sources": ["../../../src/server/codegen/javascript.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { sanitizeDeviceOptions, toClickOptionsForSourceCode, toKeyboardModifiers, toSignalMap } from './language';\nimport { asLocator, escapeWithQuotes } from '../../utils';\nimport { deviceDescriptors } from '../deviceDescriptors';\n\nimport type { Language, LanguageGenerator, LanguageGeneratorOptions } from './types';\nimport type { BrowserContextOptions } from '../../../types/types';\nimport type * as actions from '@recorder/actions';\n\nexport class JavaScriptLanguageGenerator implements LanguageGenerator {\n  id: string;\n  groupName = 'Node.js';\n  name: string;\n  highlighter = 'javascript' as Language;\n  private _isTest: boolean;\n\n  constructor(isTest: boolean) {\n    this.id = isTest ? 'playwright-test' : 'javascript';\n    this.name = isTest ? 'Test Runner' : 'Library';\n    this._isTest = isTest;\n  }\n\n  generateAction(actionInContext: actions.ActionInContext): string {\n    const action = actionInContext.action;\n    if (this._isTest && (action.name === 'openPage' || action.name === 'closePage'))\n      return '';\n\n    const pageAlias = actionInContext.frame.pageAlias;\n    const formatter = new JavaScriptFormatter(2);\n\n    if (action.name === 'openPage') {\n      formatter.add(`const ${pageAlias} = await context.newPage();`);\n      if (action.url && action.url !== 'about:blank' && action.url !== 'chrome://newtab/')\n        formatter.add(`await ${pageAlias}.goto(${quote(action.url)});`);\n      return formatter.format();\n    }\n\n    const locators = actionInContext.frame.framePath.map(selector => `.${this._asLocator(selector)}.contentFrame()`);\n    const subject = `${pageAlias}${locators.join('')}`;\n    const signals = toSignalMap(action);\n\n    if (signals.dialog) {\n      formatter.add(`  ${pageAlias}.once('dialog', dialog => {\n    console.log(\\`Dialog message: $\\{dialog.message()}\\`);\n    dialog.dismiss().catch(() => {});\n  });`);\n    }\n\n    if (signals.popup)\n      formatter.add(`const ${signals.popup.popupAlias}Promise = ${pageAlias}.waitForEvent('popup');`);\n    if (signals.download)\n      formatter.add(`const download${signals.download.downloadAlias}Promise = ${pageAlias}.waitForEvent('download');`);\n\n    formatter.add(wrapWithStep(actionInContext.description, this._generateActionCall(subject, actionInContext)));\n\n    if (signals.popup)\n      formatter.add(`const ${signals.popup.popupAlias} = await ${signals.popup.popupAlias}Promise;`);\n    if (signals.download)\n      formatter.add(`const download${signals.download.downloadAlias} = await download${signals.download.downloadAlias}Promise;`);\n\n    return formatter.format();\n  }\n\n  private _generateActionCall(subject: string, actionInContext: actions.ActionInContext): string {\n    const action = actionInContext.action;\n    switch (action.name) {\n      case 'openPage':\n        throw Error('Not reached');\n      case 'closePage':\n        return `await ${subject}.close();`;\n      case 'click': {\n        let method = 'click';\n        if (action.clickCount === 2)\n          method = 'dblclick';\n        const options = toClickOptionsForSourceCode(action);\n        const optionsString = formatOptions(options, false);\n        return `await ${subject}.${this._asLocator(action.selector)}.${method}(${optionsString});`;\n      }\n      case 'check':\n        return `await ${subject}.${this._asLocator(action.selector)}.check();`;\n      case 'uncheck':\n        return `await ${subject}.${this._asLocator(action.selector)}.uncheck();`;\n      case 'fill':\n        return `await ${subject}.${this._asLocator(action.selector)}.fill(${quote(action.text)});`;\n      case 'setInputFiles':\n        return `await ${subject}.${this._asLocator(action.selector)}.setInputFiles(${formatObject(action.files.length === 1 ? action.files[0] : action.files)});`;\n      case 'press': {\n        const modifiers = toKeyboardModifiers(action.modifiers);\n        const shortcut = [...modifiers, action.key].join('+');\n        return `await ${subject}.${this._asLocator(action.selector)}.press(${quote(shortcut)});`;\n      }\n      case 'navigate':\n        return `await ${subject}.goto(${quote(action.url)});`;\n      case 'select':\n        return `await ${subject}.${this._asLocator(action.selector)}.selectOption(${formatObject(action.options.length === 1 ? action.options[0] : action.options)});`;\n      case 'assertText':\n        return `${this._isTest ? '' : '// '}await expect(${subject}.${this._asLocator(action.selector)}).${action.substring ? 'toContainText' : 'toHaveText'}(${quote(action.text)});`;\n      case 'assertChecked':\n        return `${this._isTest ? '' : '// '}await expect(${subject}.${this._asLocator(action.selector)})${action.checked ? '' : '.not'}.toBeChecked();`;\n      case 'assertVisible':\n        return `${this._isTest ? '' : '// '}await expect(${subject}.${this._asLocator(action.selector)}).toBeVisible();`;\n      case 'assertValue': {\n        const assertion = action.value ? `toHaveValue(${quote(action.value)})` : `toBeEmpty()`;\n        return `${this._isTest ? '' : '// '}await expect(${subject}.${this._asLocator(action.selector)}).${assertion};`;\n      }\n      case 'assertSnapshot': {\n        const commentIfNeeded = this._isTest ? '' : '// ';\n        return `${commentIfNeeded}await expect(${subject}.${this._asLocator(action.selector)}).toMatchAriaSnapshot(${quoteMultiline(action.ariaSnapshot, `${commentIfNeeded}  `)});`;\n      }\n    }\n  }\n\n  private _asLocator(selector: string) {\n    return asLocator('javascript', selector);\n  }\n\n  generateHeader(options: LanguageGeneratorOptions): string {\n    if (this._isTest)\n      return this.generateTestHeader(options);\n    return this.generateStandaloneHeader(options);\n  }\n\n  generateFooter(saveStorage: string | undefined): string {\n    if (this._isTest)\n      return this.generateTestFooter(saveStorage);\n    return this.generateStandaloneFooter(saveStorage);\n  }\n\n  generateTestHeader(options: LanguageGeneratorOptions): string {\n    const formatter = new JavaScriptFormatter();\n    const useText = formatContextOptions(options.contextOptions, options.deviceName, this._isTest);\n    formatter.add(`\n      import { test, expect${options.deviceName ? ', devices' : ''} } from '@playwright/test';\n${useText ? '\\ntest.use(' + useText + ');\\n' : ''}\n      test('test', async ({ page }) => {`);\n    if (options.contextOptions.recordHar) {\n      const url = options.contextOptions.recordHar.urlFilter;\n      formatter.add(`  await page.routeFromHAR(${quote(options.contextOptions.recordHar.path)}${url ? `, ${formatOptions({ url }, false)}` : ''});`);\n    }\n    return formatter.format();\n  }\n\n  generateTestFooter(saveStorage: string | undefined): string {\n    return `});`;\n  }\n\n  generateStandaloneHeader(options: LanguageGeneratorOptions): string {\n    const formatter = new JavaScriptFormatter();\n    formatter.add(`\n      const { ${options.browserName}${options.deviceName ? ', devices' : ''} } = require('playwright');\n\n      (async () => {\n        const browser = await ${options.browserName}.launch(${formatObjectOrVoid(options.launchOptions)});\n        const context = await browser.newContext(${formatContextOptions(options.contextOptions, options.deviceName, false)});`);\n    if (options.contextOptions.recordHar)\n      formatter.add(`        await context.routeFromHAR(${quote(options.contextOptions.recordHar.path)});`);\n    return formatter.format();\n  }\n\n  generateStandaloneFooter(saveStorage: string | undefined): string {\n    const storageStateLine = saveStorage ? `\\n  await context.storageState({ path: ${quote(saveStorage)} });` : '';\n    return `\\n  // ---------------------${storageStateLine}\n  await context.close();\n  await browser.close();\n})();`;\n  }\n}\n\nfunction formatOptions(value: any, hasArguments: boolean): string {\n  const keys = Object.keys(value);\n  if (!keys.length)\n    return '';\n  return (hasArguments ? ', ' : '') + formatObject(value);\n}\n\nfunction formatObject(value: any, indent = '  '): string {\n  if (typeof value === 'string')\n    return quote(value);\n  if (Array.isArray(value))\n    return `[${value.map(o => formatObject(o)).join(', ')}]`;\n  if (typeof value === 'object') {\n    const keys = Object.keys(value).filter(key => value[key] !== undefined).sort();\n    if (!keys.length)\n      return '{}';\n    const tokens: string[] = [];\n    for (const key of keys)\n      tokens.push(`${key}: ${formatObject(value[key])}`);\n    return `{\\n${indent}${tokens.join(`,\\n${indent}`)}\\n}`;\n  }\n  return String(value);\n}\n\nfunction formatObjectOrVoid(value: any, indent = '  '): string {\n  const result = formatObject(value, indent);\n  return result === '{}' ? '' : result;\n}\n\nfunction formatContextOptions(options: BrowserContextOptions, deviceName: string | undefined, isTest: boolean): string {\n  const device = deviceName && deviceDescriptors[deviceName];\n  // recordHAR is replaced with routeFromHAR in the generated code.\n  options = { ...options, recordHar: undefined };\n  if (!device)\n    return formatObjectOrVoid(options);\n  // Filter out all the properties from the device descriptor.\n  let serializedObject = formatObjectOrVoid(sanitizeDeviceOptions(device, options));\n  // When there are no additional context options, we still want to spread the device inside.\n  if (!serializedObject)\n    serializedObject = '{\\n}';\n  const lines = serializedObject.split('\\n');\n  lines.splice(1, 0, `...devices[${quote(deviceName!)}],`);\n  return lines.join('\\n');\n}\n\nexport class JavaScriptFormatter {\n  private _baseIndent: string;\n  private _baseOffset: string;\n  private _lines: string[] = [];\n\n  constructor(offset = 0) {\n    this._baseIndent = ' '.repeat(2);\n    this._baseOffset = ' '.repeat(offset);\n  }\n\n  prepend(text: string) {\n    const trim = isMultilineString(text) ? (line: string) => line : (line: string) => line.trim();\n    this._lines = text.trim().split('\\n').map(trim).concat(this._lines);\n  }\n\n  add(text: string) {\n    const trim = isMultilineString(text) ? (line: string) => line : (line: string) => line.trim();\n    this._lines.push(...text.trim().split('\\n').map(trim));\n  }\n\n  newLine() {\n    this._lines.push('');\n  }\n\n  format(): string {\n    let spaces = '';\n    let previousLine = '';\n    return this._lines.map((line: string) => {\n      if (line === '')\n        return line;\n      if (line.startsWith('}') || line.startsWith(']'))\n        spaces = spaces.substring(this._baseIndent.length);\n\n      const extraSpaces = /^(for|while|if|try).*\\(.*\\)$/.test(previousLine) ? this._baseIndent : '';\n      previousLine = line;\n\n      const callCarryOver = line.startsWith('.set');\n      line = spaces + extraSpaces + (callCarryOver ? this._baseIndent : '') + line;\n      if (line.endsWith('{') || line.endsWith('['))\n        spaces += this._baseIndent;\n      return this._baseOffset + line;\n    }).join('\\n');\n  }\n}\n\nfunction quote(text: string) {\n  return escapeWithQuotes(text, '\\'');\n}\n\nfunction wrapWithStep(description: string | undefined, body: string) {\n  return description ? `await test.step(\\`${description}\\`, async () => {\n${body}\n});` : body;\n}\n\nexport function quoteMultiline(text: string, indent = '  ') {\n  const escape = (text: string) => text.replace(/\\\\/g, '\\\\\\\\')\n      .replace(/`/g, '\\\\`')\n      .replace(/\\$\\{/g, '\\\\${');\n  const lines = text.split('\\n');\n  if (lines.length === 1)\n    return '`' + escape(text) + '`';\n  return '`\\n' + lines.map(line => indent + escape(line).replace(/\\${/g, '\\\\${')).join('\\n') + `\\n${indent}\\``;\n}\n\nfunction isMultilineString(text: string) {\n  return text.match(/`[\\S\\s]*`/)?.[0].includes('\\n');\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,sBAAqG;AACrG,mBAA4C;AAC5C,+BAAkC;AAM3B,MAAM,4BAAyD;AAAA,EAOpE,YAAY,QAAiB;AAL7B,qBAAY;AAEZ,uBAAc;AAIZ,SAAK,KAAK,SAAS,oBAAoB;AACvC,SAAK,OAAO,SAAS,gBAAgB;AACrC,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,eAAe,iBAAkD;AAC/D,UAAM,SAAS,gBAAgB;AAC/B,QAAI,KAAK,YAAY,OAAO,SAAS,cAAc,OAAO,SAAS;AACjE,aAAO;AAET,UAAM,YAAY,gBAAgB,MAAM;AACxC,UAAM,YAAY,IAAI,oBAAoB,CAAC;AAE3C,QAAI,OAAO,SAAS,YAAY;AAC9B,gBAAU,IAAI,SAAS,SAAS,6BAA6B;AAC7D,UAAI,OAAO,OAAO,OAAO,QAAQ,iBAAiB,OAAO,QAAQ;AAC/D,kBAAU,IAAI,SAAS,SAAS,SAAS,MAAM,OAAO,GAAG,CAAC,IAAI;AAChE,aAAO,UAAU,OAAO;AAAA,IAC1B;AAEA,UAAM,WAAW,gBAAgB,MAAM,UAAU,IAAI,cAAY,IAAI,KAAK,WAAW,QAAQ,CAAC,iBAAiB;AAC/G,UAAM,UAAU,GAAG,SAAS,GAAG,SAAS,KAAK,EAAE,CAAC;AAChD,UAAM,cAAU,6BAAY,MAAM;AAElC,QAAI,QAAQ,QAAQ;AAClB,gBAAU,IAAI,KAAK,SAAS;AAAA;AAAA;AAAA,MAG5B;AAAA,IACF;AAEA,QAAI,QAAQ;AACV,gBAAU,IAAI,SAAS,QAAQ,MAAM,UAAU,aAAa,SAAS,yBAAyB;AAChG,QAAI,QAAQ;AACV,gBAAU,IAAI,iBAAiB,QAAQ,SAAS,aAAa,aAAa,SAAS,4BAA4B;AAEjH,cAAU,IAAI,aAAa,gBAAgB,aAAa,KAAK,oBAAoB,SAAS,eAAe,CAAC,CAAC;AAE3G,QAAI,QAAQ;AACV,gBAAU,IAAI,SAAS,QAAQ,MAAM,UAAU,YAAY,QAAQ,MAAM,UAAU,UAAU;AAC/F,QAAI,QAAQ;AACV,gBAAU,IAAI,iBAAiB,QAAQ,SAAS,aAAa,oBAAoB,QAAQ,SAAS,aAAa,UAAU;AAE3H,WAAO,UAAU,OAAO;AAAA,EAC1B;AAAA,EAEQ,oBAAoB,SAAiB,iBAAkD;AAC7F,UAAM,SAAS,gBAAgB;AAC/B,YAAQ,OAAO,MAAM;AAAA,MACnB,KAAK;AACH,cAAM,MAAM,aAAa;AAAA,MAC3B,KAAK;AACH,eAAO,SAAS,OAAO;AAAA,MACzB,KAAK,SAAS;AACZ,YAAI,SAAS;AACb,YAAI,OAAO,eAAe;AACxB,mBAAS;AACX,cAAM,cAAU,6CAA4B,MAAM;AAClD,cAAM,gBAAgB,cAAc,SAAS,KAAK;AAClD,eAAO,SAAS,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC,IAAI,MAAM,IAAI,aAAa;AAAA,MACxF;AAAA,MACA,KAAK;AACH,eAAO,SAAS,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC;AAAA,MAC7D,KAAK;AACH,eAAO,SAAS,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC;AAAA,MAC7D,KAAK;AACH,eAAO,SAAS,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC,SAAS,MAAM,OAAO,IAAI,CAAC;AAAA,MACxF,KAAK;AACH,eAAO,SAAS,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC,kBAAkB,aAAa,OAAO,MAAM,WAAW,IAAI,OAAO,MAAM,CAAC,IAAI,OAAO,KAAK,CAAC;AAAA,MACvJ,KAAK,SAAS;AACZ,cAAM,gBAAY,qCAAoB,OAAO,SAAS;AACtD,cAAM,WAAW,CAAC,GAAG,WAAW,OAAO,GAAG,EAAE,KAAK,GAAG;AACpD,eAAO,SAAS,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC,UAAU,MAAM,QAAQ,CAAC;AAAA,MACtF;AAAA,MACA,KAAK;AACH,eAAO,SAAS,OAAO,SAAS,MAAM,OAAO,GAAG,CAAC;AAAA,MACnD,KAAK;AACH,eAAO,SAAS,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC,iBAAiB,aAAa,OAAO,QAAQ,WAAW,IAAI,OAAO,QAAQ,CAAC,IAAI,OAAO,OAAO,CAAC;AAAA,MAC5J,KAAK;AACH,eAAO,GAAG,KAAK,UAAU,KAAK,KAAK,gBAAgB,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC,KAAK,OAAO,YAAY,kBAAkB,YAAY,IAAI,MAAM,OAAO,IAAI,CAAC;AAAA,MAC5K,KAAK;AACH,eAAO,GAAG,KAAK,UAAU,KAAK,KAAK,gBAAgB,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC,IAAI,OAAO,UAAU,KAAK,MAAM;AAAA,MAChI,KAAK;AACH,eAAO,GAAG,KAAK,UAAU,KAAK,KAAK,gBAAgB,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC;AAAA,MAChG,KAAK,eAAe;AAClB,cAAM,YAAY,OAAO,QAAQ,eAAe,MAAM,OAAO,KAAK,CAAC,MAAM;AACzE,eAAO,GAAG,KAAK,UAAU,KAAK,KAAK,gBAAgB,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC,KAAK,SAAS;AAAA,MAC9G;AAAA,MACA,KAAK,kBAAkB;AACrB,cAAM,kBAAkB,KAAK,UAAU,KAAK;AAC5C,eAAO,GAAG,eAAe,gBAAgB,OAAO,IAAI,KAAK,WAAW,OAAO,QAAQ,CAAC,yBAAyB,eAAe,OAAO,cAAc,GAAG,eAAe,IAAI,CAAC;AAAA,MAC1K;AAAA,IACF;AAAA,EACF;AAAA,EAEQ,WAAW,UAAkB;AACnC,eAAO,wBAAU,cAAc,QAAQ;AAAA,EACzC;AAAA,EAEA,eAAe,SAA2C;AACxD,QAAI,KAAK;AACP,aAAO,KAAK,mBAAmB,OAAO;AACxC,WAAO,KAAK,yBAAyB,OAAO;AAAA,EAC9C;AAAA,EAEA,eAAe,aAAyC;AACtD,QAAI,KAAK;AACP,aAAO,KAAK,mBAAmB,WAAW;AAC5C,WAAO,KAAK,yBAAyB,WAAW;AAAA,EAClD;AAAA,EAEA,mBAAmB,SAA2C;AAC5D,UAAM,YAAY,IAAI,oBAAoB;AAC1C,UAAM,UAAU,qBAAqB,QAAQ,gBAAgB,QAAQ,YAAY,KAAK,OAAO;AAC7F,cAAU,IAAI;AAAA,6BACW,QAAQ,aAAa,cAAc,EAAE;AAAA,EAChE,UAAU,gBAAgB,UAAU,SAAS,EAAE;AAAA,yCACR;AACrC,QAAI,QAAQ,eAAe,WAAW;AACpC,YAAM,MAAM,QAAQ,eAAe,UAAU;AAC7C,gBAAU,IAAI,6BAA6B,MAAM,QAAQ,eAAe,UAAU,IAAI,CAAC,GAAG,MAAM,KAAK,cAAc,EAAE,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,IAAI;AAAA,IAC/I;AACA,WAAO,UAAU,OAAO;AAAA,EAC1B;AAAA,EAEA,mBAAmB,aAAyC;AAC1D,WAAO;AAAA,EACT;AAAA,EAEA,yBAAyB,SAA2C;AAClE,UAAM,YAAY,IAAI,oBAAoB;AAC1C,cAAU,IAAI;AAAA,gBACF,QAAQ,WAAW,GAAG,QAAQ,aAAa,cAAc,EAAE;AAAA;AAAA;AAAA,gCAG3C,QAAQ,WAAW,WAAW,mBAAmB,QAAQ,aAAa,CAAC;AAAA,mDACpD,qBAAqB,QAAQ,gBAAgB,QAAQ,YAAY,KAAK,CAAC,IAAI;AAC1H,QAAI,QAAQ,eAAe;AACzB,gBAAU,IAAI,sCAAsC,MAAM,QAAQ,eAAe,UAAU,IAAI,CAAC,IAAI;AACtG,WAAO,UAAU,OAAO;AAAA,EAC1B;AAAA,EAEA,yBAAyB,aAAyC;AAChE,UAAM,mBAAmB,cAAc;AAAA,uCAA0C,MAAM,WAAW,CAAC,SAAS;AAC5G,WAAO;AAAA,4BAA+B,gBAAgB;AAAA;AAAA;AAAA;AAAA,EAIxD;AACF;AAEA,SAAS,cAAc,OAAY,cAA+B;AAChE,QAAM,OAAO,OAAO,KAAK,KAAK;AAC9B,MAAI,CAAC,KAAK;AACR,WAAO;AACT,UAAQ,eAAe,OAAO,MAAM,aAAa,KAAK;AACxD;AAEA,SAAS,aAAa,OAAY,SAAS,MAAc;AACvD,MAAI,OAAO,UAAU;AACnB,WAAO,MAAM,KAAK;AACpB,MAAI,MAAM,QAAQ,KAAK;AACrB,WAAO,IAAI,MAAM,IAAI,OAAK,aAAa,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC;AACvD,MAAI,OAAO,UAAU,UAAU;AAC7B,UAAM,OAAO,OAAO,KAAK,KAAK,EAAE,OAAO,SAAO,MAAM,GAAG,MAAM,MAAS,EAAE,KAAK;AAC7E,QAAI,CAAC,KAAK;AACR,aAAO;AACT,UAAM,SAAmB,CAAC;AAC1B,eAAW,OAAO;AAChB,aAAO,KAAK,GAAG,GAAG,KAAK,aAAa,MAAM,GAAG,CAAC,CAAC,EAAE;AACnD,WAAO;AAAA,EAAM,MAAM,GAAG,OAAO,KAAK;AAAA,EAAM,MAAM,EAAE,CAAC;AAAA;AAAA,EACnD;AACA,SAAO,OAAO,KAAK;AACrB;AAEA,SAAS,mBAAmB,OAAY,SAAS,MAAc;AAC7D,QAAM,SAAS,aAAa,OAAO,MAAM;AACzC,SAAO,WAAW,OAAO,KAAK;AAChC;AAEA,SAAS,qBAAqB,SAAgC,YAAgC,QAAyB;AACrH,QAAM,SAAS,cAAc,2CAAkB,UAAU;AAEzD,YAAU,EAAE,GAAG,SAAS,WAAW,OAAU;AAC7C,MAAI,CAAC;AACH,WAAO,mBAAmB,OAAO;AAEnC,MAAI,mBAAmB,uBAAmB,uCAAsB,QAAQ,OAAO,CAAC;AAEhF,MAAI,CAAC;AACH,uBAAmB;AACrB,QAAM,QAAQ,iBAAiB,MAAM,IAAI;AACzC,QAAM,OAAO,GAAG,GAAG,cAAc,MAAM,UAAW,CAAC,IAAI;AACvD,SAAO,MAAM,KAAK,IAAI;AACxB;AAEO,MAAM,oBAAoB;AAAA,EAK/B,YAAY,SAAS,GAAG;AAFxB,SAAQ,SAAmB,CAAC;AAG1B,SAAK,cAAc,IAAI,OAAO,CAAC;AAC/B,SAAK,cAAc,IAAI,OAAO,MAAM;AAAA,EACtC;AAAA,EAEA,QAAQ,MAAc;AACpB,UAAM,OAAO,kBAAkB,IAAI,IAAI,CAAC,SAAiB,OAAO,CAAC,SAAiB,KAAK,KAAK;AAC5F,SAAK,SAAS,KAAK,KAAK,EAAE,MAAM,IAAI,EAAE,IAAI,IAAI,EAAE,OAAO,KAAK,MAAM;AAAA,EACpE;AAAA,EAEA,IAAI,MAAc;AAChB,UAAM,OAAO,kBAAkB,IAAI,IAAI,CAAC,SAAiB,OAAO,CAAC,SAAiB,KAAK,KAAK;AAC5F,SAAK,OAAO,KAAK,GAAG,KAAK,KAAK,EAAE,MAAM,IAAI,EAAE,IAAI,IAAI,CAAC;AAAA,EACvD;AAAA,EAEA,UAAU;AACR,SAAK,OAAO,KAAK,EAAE;AAAA,EACrB;AAAA,EAEA,SAAiB;AACf,QAAI,SAAS;AACb,QAAI,eAAe;AACnB,WAAO,KAAK,OAAO,IAAI,CAAC,SAAiB;AACvC,UAAI,SAAS;AACX,eAAO;AACT,UAAI,KAAK,WAAW,GAAG,KAAK,KAAK,WAAW,GAAG;AAC7C,iBAAS,OAAO,UAAU,KAAK,YAAY,MAAM;AAEnD,YAAM,cAAc,+BAA+B,KAAK,YAAY,IAAI,KAAK,cAAc;AAC3F,qBAAe;AAEf,YAAM,gBAAgB,KAAK,WAAW,MAAM;AAC5C,aAAO,SAAS,eAAe,gBAAgB,KAAK,cAAc,MAAM;AACxE,UAAI,KAAK,SAAS,GAAG,KAAK,KAAK,SAAS,GAAG;AACzC,kBAAU,KAAK;AACjB,aAAO,KAAK,cAAc;AAAA,IAC5B,CAAC,EAAE,KAAK,IAAI;AAAA,EACd;AACF;AAEA,SAAS,MAAM,MAAc;AAC3B,aAAO,+BAAiB,MAAM,GAAI;AACpC;AAEA,SAAS,aAAa,aAAiC,MAAc;AACnE,SAAO,cAAc,qBAAqB,WAAW;AAAA,EACrD,IAAI;AAAA,OACC;AACP;AAEO,SAAS,eAAe,MAAc,SAAS,MAAM;AAC1D,QAAM,SAAS,CAACA,UAAiBA,MAAK,QAAQ,OAAO,MAAM,EACtD,QAAQ,MAAM,KAAK,EACnB,QAAQ,SAAS,MAAM;AAC5B,QAAM,QAAQ,KAAK,MAAM,IAAI;AAC7B,MAAI,MAAM,WAAW;AACnB,WAAO,MAAM,OAAO,IAAI,IAAI;AAC9B,SAAO,QAAQ,MAAM,IAAI,UAAQ,SAAS,OAAO,IAAI,EAAE,QAAQ,QAAQ,MAAM,CAAC,EAAE,KAAK,IAAI,IAAI;AAAA,EAAK,MAAM;AAC1G;AAEA,SAAS,kBAAkB,MAAc;AACvC,SAAO,KAAK,MAAM,WAAW,IAAI,CAAC,EAAE,SAAS,IAAI;AACnD;",
  "names": ["text"]
}
