{
  "version": 3,
  "sources": ["../../src/server/debugController.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SdkObject, createInstrumentation } from './instrumentation';\nimport { gracefullyProcessExitDoNotHang } from './utils/processLauncher';\nimport { Recorder, RecorderEvent } from './recorder';\nimport { asLocator  } from '../utils';\nimport { parseAriaSnapshotUnsafe } from '../utils/isomorphic/ariaSnapshot';\nimport { yaml } from '../utilsBundle';\nimport { unsafeLocatorOrSelectorAsSelector } from '../utils/isomorphic/locatorParser';\nimport { generateCode } from './codegen/language';\nimport { collapseActions } from './recorder/recorderUtils';\nimport { JavaScriptLanguageGenerator } from './codegen/javascript';\nimport { Frame } from './frames';\nimport { Page } from './page';\n\nimport type { Language } from '../utils';\nimport type { BrowserContext } from './browserContext';\nimport type { InstrumentationListener } from './instrumentation';\nimport type { Playwright } from './playwright';\nimport type { ElementInfo, Mode } from '@recorder/recorderTypes';\nimport type { Progress } from '@protocol/progress';\nimport type * as actions from '@recorder/actions';\n\nexport class DebugController extends SdkObject {\n  static Events = {\n    StateChanged: 'stateChanged',\n    InspectRequested: 'inspectRequested',\n    SourceChanged: 'sourceChanged',\n    Paused: 'paused',\n    SetModeRequested: 'setModeRequested',\n  };\n\n  private _reportState = false;\n  private _disposeListeners = new Set<() => void>();\n  private _playwright: Playwright;\n  _sdkLanguage: Language = 'javascript';\n  _generateAutoExpect = false;\n\n  constructor(playwright: Playwright) {\n    super({ attribution: { isInternalPlaywright: true }, instrumentation: createInstrumentation() } as any, undefined, 'DebugController');\n    this._playwright = playwright;\n  }\n\n  initialize(codegenId: string, sdkLanguage: Language) {\n    this._sdkLanguage = sdkLanguage;\n  }\n\n  dispose() {\n    this.setReportStateChanged(false);\n  }\n\n  setReportStateChanged(enabled: boolean) {\n    if (this._reportState === enabled)\n      return;\n    this._reportState = enabled;\n    if (enabled) {\n      const listener: InstrumentationListener = {\n        onPageOpen: page => {\n          this._emitSnapshot(false);\n          const handleNavigation = () => this._emitSnapshot(false);\n          page.mainFrame().on(Frame.Events.InternalNavigation, handleNavigation);\n          const dispose = () => page.mainFrame().off(Frame.Events.InternalNavigation, handleNavigation);\n          this._disposeListeners.add(dispose);\n          page.on(Page.Events.Close, () => this._disposeListeners.delete(dispose));\n        },\n        onPageClose: () => this._emitSnapshot(false),\n        onBrowserClose: () => {\n          this._emitSnapshot(false);\n        },\n      };\n      this._playwright.instrumentation.addListener(listener, null);\n      this._disposeListeners.add(() => this._playwright.instrumentation.removeListener(listener));\n      this._emitSnapshot(true);\n    } else {\n      for (const dispose of this._disposeListeners)\n        dispose();\n      this._disposeListeners.clear();\n    }\n  }\n\n  async setRecorderMode(progress: Progress, params: { mode: Mode, testIdAttributeName?: string, generateAutoExpect?: boolean, browserId?: string }) {\n    await progress.race(this._closeBrowsersWithoutPages());\n    this._generateAutoExpect = !!params.generateAutoExpect;\n\n    if (params.mode === 'none') {\n      for (const recorder of await progress.race(this._allRecorders(params.browserId))) {\n        recorder.hideHighlightedSelector();\n        recorder.setMode('none');\n      }\n      return;\n    }\n\n    if (!this._playwright.allBrowsers().length)\n      await this._playwright.chromium.launch(progress, { headless: !!process.env.PW_DEBUG_CONTROLLER_HEADLESS });\n    // Create page if none.\n    const pages = this._playwright.allPages();\n    if (!pages.length) {\n      const [browser] = this._playwright.allBrowsers();\n      const context = await browser.newContextForReuse(progress, {});\n      await context.newPage(progress);\n    }\n    // Update test id attribute.\n    if (params.testIdAttributeName) {\n      for (const page of this._playwright.allPages()) {\n        if (params.browserId && page.browserContext._browser.guid !== params.browserId)\n          continue;\n        page.browserContext.selectors().setTestIdAttributeName(params.testIdAttributeName);\n      }\n    }\n    // Toggle the mode.\n    for (const recorder of await progress.race(this._allRecorders(params.browserId))) {\n      recorder.hideHighlightedSelector();\n      recorder.setMode(params.mode);\n    }\n  }\n\n  async highlight(progress: Progress, params: { selector?: string, ariaTemplate?: string }) {\n    // Assert parameters validity.\n    if (params.selector)\n      unsafeLocatorOrSelectorAsSelector(this._sdkLanguage, params.selector, 'data-testid');\n    const ariaTemplate = params.ariaTemplate ? parseAriaSnapshotUnsafe(yaml, params.ariaTemplate) : undefined;\n    for (const recorder of await progress.race(this._allRecorders())) {\n      if (ariaTemplate)\n        recorder.setHighlightedAriaTemplate(ariaTemplate);\n      else if (params.selector)\n        recorder.setHighlightedSelector(params.selector);\n    }\n  }\n\n  async hideHighlight(progress: Progress) {\n    // Hide all active recorder highlights.\n    for (const recorder of await progress.race(this._allRecorders()))\n      recorder.hideHighlightedSelector();\n    // Hide all locator.highlight highlights.\n    await Promise.all(this._playwright.allPages().map(p => p.hideHighlight().catch(() => {})));\n  }\n\n  async resume(progress: Progress) {\n    for (const recorder of await progress.race(this._allRecorders()))\n      recorder.resume();\n  }\n\n  async closeBrowser(progress: Progress, id: string, reason?: string) {\n    const browser = this._playwright.allBrowsers().find(b => b.guid === id);\n    if (!browser)\n      return;\n    await progress.race(browser.close({ reason }));\n  }\n\n  kill() {\n    gracefullyProcessExitDoNotHang(0);\n  }\n\n  private _emitSnapshot(initial: boolean) {\n    const pageCount = this._playwright.allPages().length;\n    if (initial && !pageCount)\n      return;\n    this.emit(DebugController.Events.StateChanged, {\n      pageCount,\n      browsers: this._playwright.allBrowsers().map(browser => ({\n        id: browser.guid,\n        name: browser.options.name,\n        channel: browser.options.channel,\n        contexts: browser.contexts().map(context => ({\n          pages: context.pages().map(page => ({\n            url: page.mainFrame().url(),\n          }))\n        }))\n      }))\n    });\n  }\n\n  private async _allRecorders(browserId?: string): Promise<Recorder[]> {\n    const contexts = new Set<BrowserContext>();\n    for (const page of this._playwright.allPages()) {\n      if (browserId && page.browserContext._browser.guid !== browserId)\n        continue;\n      contexts.add(page.browserContext);\n    }\n    const recorders = await Promise.all([...contexts].map(c => Recorder.forContext(c, { omitCallTracking: true })));\n    const nonNullRecorders = recorders.filter(Boolean) as Recorder[];\n    for (const recorder of recorders)\n      wireListeners(recorder, this);\n    return nonNullRecorders;\n  }\n\n  private async _closeBrowsersWithoutPages() {\n    for (const browser of this._playwright.allBrowsers()) {\n      for (const context of browser.contexts()) {\n        if (!context.pages().length)\n          await context.close({ reason: 'Browser collected' });\n      }\n      if (!browser.contexts())\n        await browser.close({ reason: 'Browser collected' });\n    }\n  }\n}\n\nconst wiredSymbol = Symbol('wired');\n\nfunction wireListeners(recorder: Recorder, debugController: DebugController) {\n  if ((recorder as any)[wiredSymbol])\n    return;\n  (recorder as any)[wiredSymbol] = true;\n\n  const actions: actions.ActionInContext[] = [];\n  const languageGenerator = new JavaScriptLanguageGenerator(/* isPlaywrightTest */true);\n\n  const actionsChanged = () => {\n    const aa = collapseActions(actions);\n    const { header, footer, text, actionTexts } = generateCode(aa, languageGenerator, {\n      browserName: 'chromium',\n      launchOptions: {},\n      contextOptions: {},\n      generateAutoExpect: debugController._generateAutoExpect,\n    });\n    debugController.emit(DebugController.Events.SourceChanged, { text, header, footer, actions: actionTexts });\n  };\n\n  recorder.on(RecorderEvent.ElementPicked, (elementInfo: ElementInfo) => {\n    const locator: string = asLocator(debugController._sdkLanguage, elementInfo.selector);\n    debugController.emit(DebugController.Events.InspectRequested, { selector: elementInfo.selector, locator, ariaSnapshot: elementInfo.ariaSnapshot });\n  });\n  recorder.on(RecorderEvent.PausedStateChanged, (paused: boolean) => {\n    debugController.emit(DebugController.Events.Paused, { paused });\n  });\n  recorder.on(RecorderEvent.ModeChanged, (mode: Mode) => {\n    debugController.emit(DebugController.Events.SetModeRequested, { mode });\n  });\n  recorder.on(RecorderEvent.ActionAdded, (action: actions.ActionInContext) => {\n    actions.push(action);\n    actionsChanged();\n  });\n  recorder.on(RecorderEvent.SignalAdded, (signal: actions.SignalInContext) => {\n    const lastAction = actions.findLast(a => a.frame.pageGuid === signal.frame.pageGuid);\n    if (lastAction)\n      lastAction.action.signals.push(signal.signal);\n    actionsChanged();\n  });\n}\n"],
  "mappings": "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",
  "names": []
}
