{
  "version": 3,
  "sources": ["../../src/cli/programWithTestStub.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-console */\n\nimport { gracefullyProcessExitDoNotHang } from '../server/utils/processLauncher';\nimport { getPackageManager } from '../utils';\nimport { program } from './program';\nexport { program } from './program';\n\nfunction printPlaywrightTestError(command: string) {\n  const packages: string[] = [];\n  for (const pkg of ['playwright', 'playwright-chromium', 'playwright-firefox', 'playwright-webkit']) {\n    try {\n      require.resolve(pkg);\n      packages.push(pkg);\n    } catch (e) {\n    }\n  }\n  if (!packages.length)\n    packages.push('playwright');\n  const packageManager = getPackageManager();\n  if (packageManager === 'yarn') {\n    console.error(`Please install @playwright/test package before running \"yarn playwright ${command}\"`);\n    console.error(`  yarn remove ${packages.join(' ')}`);\n    console.error('  yarn add -D @playwright/test');\n  } else if (packageManager === 'pnpm') {\n    console.error(`Please install @playwright/test package before running \"pnpm exec playwright ${command}\"`);\n    console.error(`  pnpm remove ${packages.join(' ')}`);\n    console.error('  pnpm add -D @playwright/test');\n  } else {\n    console.error(`Please install @playwright/test package before running \"npx playwright ${command}\"`);\n    console.error(`  npm uninstall ${packages.join(' ')}`);\n    console.error('  npm install -D @playwright/test');\n  }\n}\n\nconst kExternalPlaywrightTestCommands = [\n  ['test', 'Run tests with Playwright Test.'],\n  ['show-report', 'Show Playwright Test HTML report.'],\n  ['merge-reports', 'Merge Playwright Test Blob reports'],\n];\nfunction addExternalPlaywrightTestCommands() {\n  for (const [command, description] of kExternalPlaywrightTestCommands) {\n    const playwrightTest = program.command(command)\n        .allowUnknownOption(true)\n        .allowExcessArguments(true);\n    playwrightTest.description(`${description} Available in @playwright/test package.`);\n    playwrightTest.action(async () => {\n      printPlaywrightTestError(command);\n      gracefullyProcessExitDoNotHang(1);\n    });\n  }\n}\n\nif (!process.env.PW_LANG_NAME)\n  addExternalPlaywrightTestCommands();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,6BAA+C;AAC/C,mBAAkC;AAClC,qBAAwB;AACxB,IAAAA,kBAAwB;AAExB,SAAS,yBAAyB,SAAiB;AACjD,QAAM,WAAqB,CAAC;AAC5B,aAAW,OAAO,CAAC,cAAc,uBAAuB,sBAAsB,mBAAmB,GAAG;AAClG,QAAI;AACF,cAAQ,QAAQ,GAAG;AACnB,eAAS,KAAK,GAAG;AAAA,IACnB,SAAS,GAAG;AAAA,IACZ;AAAA,EACF;AACA,MAAI,CAAC,SAAS;AACZ,aAAS,KAAK,YAAY;AAC5B,QAAM,qBAAiB,gCAAkB;AACzC,MAAI,mBAAmB,QAAQ;AAC7B,YAAQ,MAAM,2EAA2E,OAAO,GAAG;AACnG,YAAQ,MAAM,iBAAiB,SAAS,KAAK,GAAG,CAAC,EAAE;AACnD,YAAQ,MAAM,gCAAgC;AAAA,EAChD,WAAW,mBAAmB,QAAQ;AACpC,YAAQ,MAAM,gFAAgF,OAAO,GAAG;AACxG,YAAQ,MAAM,iBAAiB,SAAS,KAAK,GAAG,CAAC,EAAE;AACnD,YAAQ,MAAM,gCAAgC;AAAA,EAChD,OAAO;AACL,YAAQ,MAAM,0EAA0E,OAAO,GAAG;AAClG,YAAQ,MAAM,mBAAmB,SAAS,KAAK,GAAG,CAAC,EAAE;AACrD,YAAQ,MAAM,mCAAmC;AAAA,EACnD;AACF;AAEA,MAAM,kCAAkC;AAAA,EACtC,CAAC,QAAQ,iCAAiC;AAAA,EAC1C,CAAC,eAAe,mCAAmC;AAAA,EACnD,CAAC,iBAAiB,oCAAoC;AACxD;AACA,SAAS,oCAAoC;AAC3C,aAAW,CAAC,SAAS,WAAW,KAAK,iCAAiC;AACpE,UAAM,iBAAiB,uBAAQ,QAAQ,OAAO,EACzC,mBAAmB,IAAI,EACvB,qBAAqB,IAAI;AAC9B,mBAAe,YAAY,GAAG,WAAW,yCAAyC;AAClF,mBAAe,OAAO,YAAY;AAChC,+BAAyB,OAAO;AAChC,iEAA+B,CAAC;AAAA,IAClC,CAAC;AAAA,EACH;AACF;AAEA,IAAI,CAAC,QAAQ,IAAI;AACf,oCAAkC;",
  "names": ["import_program"]
}
