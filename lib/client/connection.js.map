{
  "version": 3,
  "sources": ["../../src/client/connection.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from './eventEmitter';\nimport { Android, AndroidDevice, AndroidSocket } from './android';\nimport { Artifact } from './artifact';\nimport { Browser } from './browser';\nimport { BrowserContext } from './browserContext';\nimport { BrowserType } from './browserType';\nimport { CDPSession } from './cdpSession';\nimport { ChannelOwner } from './channelOwner';\nimport { createInstrumentation } from './clientInstrumentation';\nimport { Dialog } from './dialog';\nimport { Electron, ElectronApplication } from './electron';\nimport { ElementHandle } from './elementHandle';\nimport { TargetClosedError, parseError } from './errors';\nimport { APIRequestContext } from './fetch';\nimport { Frame } from './frame';\nimport { JSHandle } from './jsHandle';\nimport { JsonPipe } from './jsonPipe';\nimport { LocalUtils } from './localUtils';\nimport { Request, Response, Route, WebSocket, WebSocketRoute } from './network';\nimport { BindingCall, Page } from './page';\nimport { Playwright } from './playwright';\nimport { Stream } from './stream';\nimport { Tracing } from './tracing';\nimport { Worker } from './worker';\nimport { WritableStream } from './writableStream';\nimport { ValidationError, findValidator  } from '../protocol/validator';\nimport { rewriteErrorMessage } from '../utils/isomorphic/stackTrace';\n\nimport type { ClientInstrumentation } from './clientInstrumentation';\nimport type { HeadersArray } from './types';\nimport type { ValidatorContext } from '../protocol/validator';\nimport type { Platform } from './platform';\nimport type * as channels from '@protocol/channels';\n\nclass Root extends ChannelOwner<channels.RootChannel> {\n  constructor(connection: Connection) {\n    super(connection, 'Root', '', {});\n  }\n\n  async initialize(): Promise<Playwright> {\n    return Playwright.from((await this._channel.initialize({\n      sdkLanguage: 'javascript',\n    })).playwright);\n  }\n}\n\nclass DummyChannelOwner extends ChannelOwner {\n}\n\nexport class Connection extends EventEmitter {\n  readonly _objects = new Map<string, ChannelOwner>();\n  onmessage = (message: object): void => {};\n  private _lastId = 0;\n  private _callbacks = new Map<number, { resolve: (a: any) => void, reject: (a: Error) => void, title: string | undefined, type: string, method: string }>();\n  private _rootObject: Root;\n  private _closedError: Error | undefined;\n  private _isRemote = false;\n  private _localUtils?: LocalUtils;\n  private _rawBuffers = false;\n  // Some connections allow resolving in-process dispatchers.\n  toImpl: ((client: ChannelOwner | Connection) => any) | undefined;\n  private _tracingCount = 0;\n  readonly _instrumentation: ClientInstrumentation;\n  // Used from @playwright/test fixtures -> TODO remove?\n  readonly headers: HeadersArray;\n\n  constructor(platform: Platform, localUtils?: LocalUtils, instrumentation?: ClientInstrumentation, headers: HeadersArray = []) {\n    super(platform);\n    this._instrumentation = instrumentation || createInstrumentation();\n    this._localUtils = localUtils;\n    this._rootObject = new Root(this);\n    this.headers = headers;\n  }\n\n  markAsRemote() {\n    this._isRemote = true;\n  }\n\n  isRemote() {\n    return this._isRemote;\n  }\n\n  useRawBuffers() {\n    this._rawBuffers = true;\n  }\n\n  rawBuffers() {\n    return this._rawBuffers;\n  }\n\n  localUtils(): LocalUtils | undefined {\n    return this._localUtils;\n  }\n\n  async initializePlaywright(): Promise<Playwright> {\n    return await this._rootObject.initialize();\n  }\n\n  getObjectWithKnownName(guid: string): any {\n    return this._objects.get(guid)!;\n  }\n\n  setIsTracing(isTracing: boolean) {\n    if (isTracing)\n      this._tracingCount++;\n    else\n      this._tracingCount--;\n  }\n\n  async sendMessageToServer(object: ChannelOwner, method: string, params: any, options: { apiName?: string, title?: string, internal?: boolean, frames?: channels.StackFrame[], stepId?: string }): Promise<any> {\n    if (this._closedError)\n      throw this._closedError;\n    if (object._wasCollected)\n      throw new Error('The object has been collected to prevent unbounded heap growth.');\n\n    const guid = object._guid;\n    const type = object._type;\n    const id = ++this._lastId;\n    const message = { id, guid, method, params };\n    if (this._platform.isLogEnabled('channel')) {\n      // Do not include metadata in debug logs to avoid noise.\n      this._platform.log('channel', 'SEND> ' + JSON.stringify(message));\n    }\n    const location = options.frames?.[0] ? { file: options.frames[0].file, line: options.frames[0].line, column: options.frames[0].column } : undefined;\n    const metadata: channels.Metadata = { title: options.title, location, internal: options.internal, stepId: options.stepId };\n    if (this._tracingCount && options.frames && type !== 'LocalUtils')\n      this._localUtils?.addStackToTracingNoReply({ callData: { stack: options.frames ?? [], id } }).catch(() => {});\n    // We need to exit zones before calling into the server, otherwise\n    // when we receive events from the server, we would be in an API zone.\n    this._platform.zones.empty.run(() => this.onmessage({ ...message, metadata }));\n    return await new Promise((resolve, reject) => this._callbacks.set(id, { resolve, reject, title: options.title, type, method }));\n  }\n\n  private _validatorFromWireContext(): ValidatorContext {\n    return {\n      tChannelImpl: this._tChannelImplFromWire.bind(this),\n      binary: this._rawBuffers ? 'buffer' : 'fromBase64',\n      isUnderTest: () => this._platform.isUnderTest(),\n    };\n  }\n\n  dispatch(message: object) {\n    if (this._closedError)\n      return;\n\n    const { id, guid, method, params, result, error, log } = message as any;\n    if (id) {\n      if (this._platform.isLogEnabled('channel'))\n        this._platform.log('channel', '<RECV ' + JSON.stringify(message));\n      const callback = this._callbacks.get(id);\n      if (!callback)\n        throw new Error(`Cannot find command to respond: ${id}`);\n      this._callbacks.delete(id);\n      if (error && !result) {\n        const parsedError = parseError(error);\n        rewriteErrorMessage(parsedError, parsedError.message + formatCallLog(this._platform, log));\n        callback.reject(parsedError);\n      } else {\n        const validator = findValidator(callback.type, callback.method, 'Result');\n        callback.resolve(validator(result, '', this._validatorFromWireContext()));\n      }\n      return;\n    }\n\n    if (this._platform.isLogEnabled('channel'))\n      this._platform.log('channel', '<EVENT ' + JSON.stringify(message));\n    if (method === '__create__') {\n      this._createRemoteObject(guid, params.type, params.guid, params.initializer);\n      return;\n    }\n\n    const object = this._objects.get(guid);\n    if (!object)\n      throw new Error(`Cannot find object to \"${method}\": ${guid}`);\n\n    if (method === '__adopt__') {\n      const child = this._objects.get(params.guid);\n      if (!child)\n        throw new Error(`Unknown new child: ${params.guid}`);\n      object._adopt(child);\n      return;\n    }\n\n    if (method === '__dispose__') {\n      object._dispose(params.reason);\n      return;\n    }\n\n    const validator = findValidator(object._type, method, 'Event');\n    (object._channel as any).emit(method, validator(params, '', this._validatorFromWireContext()));\n  }\n\n  close(cause?: string) {\n    if (this._closedError)\n      return;\n    this._closedError = new TargetClosedError(cause);\n    for (const callback of this._callbacks.values())\n      callback.reject(this._closedError);\n    this._callbacks.clear();\n    this.emit('close');\n  }\n\n  private _tChannelImplFromWire(names: '*' | string[], arg: any, path: string, context: ValidatorContext) {\n    if (arg && typeof arg === 'object' && typeof arg.guid === 'string') {\n      const object = this._objects.get(arg.guid)!;\n      if (!object)\n        throw new Error(`Object with guid ${arg.guid} was not bound in the connection`);\n      if (names !== '*' && !names.includes(object._type))\n        throw new ValidationError(`${path}: expected channel ${names.toString()}`);\n      return object._channel;\n    }\n    throw new ValidationError(`${path}: expected channel ${names.toString()}`);\n  }\n\n  private _createRemoteObject(parentGuid: string, type: string, guid: string, initializer: any): any {\n    const parent = this._objects.get(parentGuid);\n    if (!parent)\n      throw new Error(`Cannot find parent object ${parentGuid} to create ${guid}`);\n    let result: ChannelOwner<any>;\n    const validator = findValidator(type, '', 'Initializer');\n    initializer = validator(initializer, '', this._validatorFromWireContext());\n    switch (type) {\n      case 'Android':\n        result = new Android(parent, type, guid, initializer);\n        break;\n      case 'AndroidSocket':\n        result = new AndroidSocket(parent, type, guid, initializer);\n        break;\n      case 'AndroidDevice':\n        result = new AndroidDevice(parent, type, guid, initializer);\n        break;\n      case 'APIRequestContext':\n        result = new APIRequestContext(parent, type, guid, initializer);\n        break;\n      case 'Artifact':\n        result = new Artifact(parent, type, guid, initializer);\n        break;\n      case 'BindingCall':\n        result = new BindingCall(parent, type, guid, initializer);\n        break;\n      case 'Browser':\n        result = new Browser(parent, type, guid, initializer);\n        break;\n      case 'BrowserContext':\n        result = new BrowserContext(parent, type, guid, initializer);\n        break;\n      case 'BrowserType':\n        result = new BrowserType(parent, type, guid, initializer);\n        break;\n      case 'CDPSession':\n        result = new CDPSession(parent, type, guid, initializer);\n        break;\n      case 'Dialog':\n        result = new Dialog(parent, type, guid, initializer);\n        break;\n      case 'Electron':\n        result = new Electron(parent, type, guid, initializer);\n        break;\n      case 'ElectronApplication':\n        result = new ElectronApplication(parent, type, guid, initializer);\n        break;\n      case 'ElementHandle':\n        result = new ElementHandle(parent, type, guid, initializer);\n        break;\n      case 'Frame':\n        result = new Frame(parent, type, guid, initializer);\n        break;\n      case 'JSHandle':\n        result = new JSHandle(parent, type, guid, initializer);\n        break;\n      case 'JsonPipe':\n        result = new JsonPipe(parent, type, guid, initializer);\n        break;\n      case 'LocalUtils':\n        result = new LocalUtils(parent, type, guid, initializer);\n        if (!this._localUtils)\n          this._localUtils = result as LocalUtils;\n        break;\n      case 'Page':\n        result = new Page(parent, type, guid, initializer);\n        break;\n      case 'Playwright':\n        result = new Playwright(parent, type, guid, initializer);\n        break;\n      case 'Request':\n        result = new Request(parent, type, guid, initializer);\n        break;\n      case 'Response':\n        result = new Response(parent, type, guid, initializer);\n        break;\n      case 'Route':\n        result = new Route(parent, type, guid, initializer);\n        break;\n      case 'Stream':\n        result = new Stream(parent, type, guid, initializer);\n        break;\n      case 'SocksSupport':\n        result = new DummyChannelOwner(parent, type, guid, initializer);\n        break;\n      case 'Tracing':\n        result = new Tracing(parent, type, guid, initializer);\n        break;\n      case 'WebSocket':\n        result = new WebSocket(parent, type, guid, initializer);\n        break;\n      case 'WebSocketRoute':\n        result = new WebSocketRoute(parent, type, guid, initializer);\n        break;\n      case 'Worker':\n        result = new Worker(parent, type, guid, initializer);\n        break;\n      case 'WritableStream':\n        result = new WritableStream(parent, type, guid, initializer);\n        break;\n      default:\n        throw new Error('Missing type ' + type);\n    }\n    return result;\n  }\n}\n\nfunction formatCallLog(platform: Platform, log: string[] | undefined): string {\n  if (!log || !log.some(l => !!l))\n    return '';\n  return `\nCall log:\n${platform.colors.dim(log.join('\\n'))}\n`;\n}\n"],
  "mappings": "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",
  "names": ["validator"]
}
