{
  "version": 3,
  "sources": ["../../src/client/writableStream.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChannelOwner } from './channelOwner';\n\nimport type * as channels from '@protocol/channels';\nimport type { Writable } from 'stream';\n\nexport class WritableStream extends ChannelOwner<channels.WritableStreamChannel> {\n  static from(Stream: channels.WritableStreamChannel): WritableStream {\n    return (Stream as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.WritableStreamInitializer) {\n    super(parent, type, guid, initializer);\n  }\n\n  stream(): Writable {\n    return this._platform.streamWritable(this._channel);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,0BAA6B;AAKtB,MAAM,uBAAuB,iCAA6C;AAAA,EAC/E,OAAO,KAAK,QAAwD;AAClE,WAAQ,OAAe;AAAA,EACzB;AAAA,EAEA,YAAY,QAAsB,MAAc,MAAc,aAAiD;AAC7G,UAAM,QAAQ,MAAM,MAAM,WAAW;AAAA,EACvC;AAAA,EAEA,SAAmB;AACjB,WAAO,KAAK,UAAU,eAAe,KAAK,QAAQ;AAAA,EACpD;AACF;",
  "names": []
}
