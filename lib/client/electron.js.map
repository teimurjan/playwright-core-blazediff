{
  "version": 3,
  "sources": ["../../src/client/electron.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BrowserContext, prepareBrowserContextParams } from './browserContext';\nimport { ChannelOwner } from './channelOwner';\nimport { envObjectToArray } from './clientHelper';\nimport { ConsoleMessage } from './consoleMessage';\nimport { TargetClosedError, isTargetClosedError } from './errors';\nimport { Events } from './events';\nimport { JSHandle, parseResult, serializeArgument } from './jsHandle';\nimport { Waiter } from './waiter';\nimport { TimeoutSettings } from './timeoutSettings';\n\nimport type { Page } from './page';\nimport type { BrowserContextOptions, Env, Headers, WaitForEventOptions } from './types';\nimport type * as structs from '../../types/structs';\nimport type * as api from '../../types/types';\nimport type * as channels from '@protocol/channels';\nimport type * as childProcess from 'child_process';\nimport type { BrowserWindow } from 'electron';\nimport type { Playwright } from './playwright';\n\ntype ElectronOptions = Omit<channels.ElectronLaunchOptions, 'env'|'extraHTTPHeaders'|'recordHar'|'colorScheme'|'acceptDownloads'> & {\n  env?: Env,\n  extraHTTPHeaders?: Headers,\n  recordHar?: BrowserContextOptions['recordHar'],\n  colorScheme?: 'dark' | 'light' | 'no-preference' | null,\n  acceptDownloads?: boolean,\n  timeout?: number,\n};\n\ntype ElectronAppType = typeof import('electron');\n\nexport class Electron extends ChannelOwner<channels.ElectronChannel> implements api.Electron {\n  _playwright!: Playwright;\n\n  static from(electron: channels.ElectronChannel): Electron {\n    return (electron as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.ElectronInitializer) {\n    super(parent, type, guid, initializer);\n  }\n\n  async launch(options: ElectronOptions = {}): Promise<ElectronApplication> {\n    options = this._playwright.selectors._withSelectorOptions(options);\n    const params: channels.ElectronLaunchParams = {\n      ...await prepareBrowserContextParams(this._platform, options),\n      env: envObjectToArray(options.env ? options.env : this._platform.env),\n      tracesDir: options.tracesDir,\n      timeout: new TimeoutSettings(this._platform).launchTimeout(options),\n    };\n    const app = ElectronApplication.from((await this._channel.launch(params)).electronApplication);\n    this._playwright.selectors._contextsForSelectors.add(app._context);\n    app.once(Events.ElectronApplication.Close, () => this._playwright.selectors._contextsForSelectors.delete(app._context));\n    await app._context._initializeHarFromOptions(options.recordHar);\n    app._context.tracing._tracesDir = options.tracesDir;\n    return app;\n  }\n}\n\nexport class ElectronApplication extends ChannelOwner<channels.ElectronApplicationChannel> implements api.ElectronApplication {\n  readonly _context: BrowserContext;\n  private _windows = new Set<Page>();\n  private _timeoutSettings: TimeoutSettings;\n\n  static from(electronApplication: channels.ElectronApplicationChannel): ElectronApplication {\n    return (electronApplication as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.ElectronApplicationInitializer) {\n    super(parent, type, guid, initializer);\n\n    this._timeoutSettings = new TimeoutSettings(this._platform);\n    this._context = BrowserContext.from(initializer.context);\n    for (const page of this._context._pages)\n      this._onPage(page);\n    this._context.on(Events.BrowserContext.Page, page => this._onPage(page));\n    this._channel.on('close', () => {\n      this.emit(Events.ElectronApplication.Close);\n    });\n    this._channel.on('console', event => this.emit(Events.ElectronApplication.Console, new ConsoleMessage(this._platform, event)));\n    this._setEventToSubscriptionMapping(new Map<string, channels.ElectronApplicationUpdateSubscriptionParams['event']>([\n      [Events.ElectronApplication.Console, 'console'],\n    ]));\n  }\n\n  process(): childProcess.ChildProcess {\n    return this._connection.toImpl?.(this)?.process();\n  }\n\n  _onPage(page: Page) {\n    this._windows.add(page);\n    this.emit(Events.ElectronApplication.Window, page);\n    page.once(Events.Page.Close, () => this._windows.delete(page));\n  }\n\n  windows(): Page[] {\n    // TODO: add ElectronPage class inheriting from Page.\n    return [...this._windows];\n  }\n\n  async firstWindow(options?: { timeout?: number }): Promise<Page> {\n    if (this._windows.size)\n      return this._windows.values().next().value!;\n    return await this.waitForEvent('window', options);\n  }\n\n  context(): BrowserContext {\n    return this._context;\n  }\n\n  async [Symbol.asyncDispose]() {\n    await this.close();\n  }\n\n  async close() {\n    try {\n      await this._context.close();\n    } catch (e) {\n      if (isTargetClosedError(e))\n        return;\n      throw e;\n    }\n  }\n\n  async waitForEvent(event: string, optionsOrPredicate: WaitForEventOptions = {}): Promise<any> {\n    return await this._wrapApiCall(async () => {\n      const timeout = this._timeoutSettings.timeout(typeof optionsOrPredicate === 'function' ? {} : optionsOrPredicate);\n      const predicate = typeof optionsOrPredicate === 'function' ? optionsOrPredicate : optionsOrPredicate.predicate;\n      const waiter = Waiter.createForEvent(this, event);\n      waiter.rejectOnTimeout(timeout, `Timeout ${timeout}ms exceeded while waiting for event \"${event}\"`);\n      if (event !== Events.ElectronApplication.Close)\n        waiter.rejectOnEvent(this, Events.ElectronApplication.Close, () => new TargetClosedError());\n      const result = await waiter.waitForEvent(this, event, predicate as any);\n      waiter.dispose();\n      return result;\n    });\n  }\n\n  async browserWindow(page: Page): Promise<JSHandle<BrowserWindow>> {\n    const result = await this._channel.browserWindow({ page: page._channel });\n    return JSHandle.from(result.handle);\n  }\n\n  async evaluate<R, Arg>(pageFunction: structs.PageFunctionOn<ElectronAppType, Arg, R>, arg: Arg): Promise<R> {\n    const result = await this._channel.evaluateExpression({ expression: String(pageFunction), isFunction: typeof pageFunction === 'function', arg: serializeArgument(arg) });\n    return parseResult(result.value);\n  }\n\n  async evaluateHandle<R, Arg>(pageFunction: structs.PageFunctionOn<ElectronAppType, Arg, R>, arg: Arg): Promise<structs.SmartHandle<R>> {\n    const result = await this._channel.evaluateExpressionHandle({ expression: String(pageFunction), isFunction: typeof pageFunction === 'function', arg: serializeArgument(arg) });\n    return JSHandle.from(result.handle) as any as structs.SmartHandle<R>;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
