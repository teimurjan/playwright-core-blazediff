{
  "version": 3,
  "sources": ["../../src/client/errors.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseSerializedValue, serializeValue } from '../protocol/serializers';\nimport { isError } from '../utils/isomorphic/rtti';\n\nimport type { SerializedError } from '@protocol/channels';\n\nexport class TimeoutError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TimeoutError';\n  }\n}\n\nexport class TargetClosedError extends Error {\n  constructor(cause?: string) {\n    super(cause || 'Target page, context or browser has been closed');\n  }\n}\n\nexport function isTargetClosedError(error: Error) {\n  return error instanceof TargetClosedError;\n}\n\nexport function serializeError(e: any): SerializedError {\n  if (isError(e))\n    return { error: { message: e.message, stack: e.stack, name: e.name } };\n  return { value: serializeValue(e, value => ({ fallThrough: value })) };\n}\n\nexport function parseError(error: SerializedError): Error {\n  if (!error.error) {\n    if (error.value === undefined)\n      throw new Error('Serialized error must have either an error or a value');\n    return parseSerializedValue(error.value, undefined);\n  }\n  if (error.error.name === 'TimeoutError') {\n    const e = new TimeoutError(error.error.message);\n    e.stack = error.error.stack || '';\n    return e;\n  }\n  if (error.error.name === 'TargetClosedError') {\n    const e = new TargetClosedError(error.error.message);\n    e.stack = error.error.stack || '';\n    return e;\n  }\n  const e = new Error(error.error.message);\n  e.stack = error.error.stack || '';\n  e.name = error.error.name;\n  return e;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,yBAAqD;AACrD,kBAAwB;AAIjB,MAAM,qBAAqB,MAAM;AAAA,EACtC,YAAY,SAAiB;AAC3B,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EACd;AACF;AAEO,MAAM,0BAA0B,MAAM;AAAA,EAC3C,YAAY,OAAgB;AAC1B,UAAM,SAAS,iDAAiD;AAAA,EAClE;AACF;AAEO,SAAS,oBAAoB,OAAc;AAChD,SAAO,iBAAiB;AAC1B;AAEO,SAAS,eAAe,GAAyB;AACtD,UAAI,qBAAQ,CAAC;AACX,WAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,OAAO,EAAE,OAAO,MAAM,EAAE,KAAK,EAAE;AACvE,SAAO,EAAE,WAAO,mCAAe,GAAG,YAAU,EAAE,aAAa,MAAM,EAAE,EAAE;AACvE;AAEO,SAAS,WAAW,OAA+B;AACxD,MAAI,CAAC,MAAM,OAAO;AAChB,QAAI,MAAM,UAAU;AAClB,YAAM,IAAI,MAAM,uDAAuD;AACzE,eAAO,yCAAqB,MAAM,OAAO,MAAS;AAAA,EACpD;AACA,MAAI,MAAM,MAAM,SAAS,gBAAgB;AACvC,UAAMA,KAAI,IAAI,aAAa,MAAM,MAAM,OAAO;AAC9C,IAAAA,GAAE,QAAQ,MAAM,MAAM,SAAS;AAC/B,WAAOA;AAAA,EACT;AACA,MAAI,MAAM,MAAM,SAAS,qBAAqB;AAC5C,UAAMA,KAAI,IAAI,kBAAkB,MAAM,MAAM,OAAO;AACnD,IAAAA,GAAE,QAAQ,MAAM,MAAM,SAAS;AAC/B,WAAOA;AAAA,EACT;AACA,QAAM,IAAI,IAAI,MAAM,MAAM,MAAM,OAAO;AACvC,IAAE,QAAQ,MAAM,MAAM,SAAS;AAC/B,IAAE,OAAO,MAAM,MAAM;AACrB,SAAO;AACT;",
  "names": ["e"]
}
