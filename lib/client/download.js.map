{
  "version": 3,
  "sources": ["../../src/client/download.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Artifact } from './artifact';\nimport type { Page } from './page';\nimport type * as api from '../../types/types';\nimport type { Readable } from 'stream';\n\nexport class Download implements api.Download {\n  private _page: Page;\n  private _url: string;\n  private _suggestedFilename: string;\n  private _artifact: Artifact;\n\n  constructor(page: Page, url: string, suggestedFilename: string, artifact: Artifact) {\n    this._page = page;\n    this._url = url;\n    this._suggestedFilename = suggestedFilename;\n    this._artifact = artifact;\n  }\n\n  page(): Page {\n    return this._page;\n  }\n\n  url(): string {\n    return this._url;\n  }\n\n  suggestedFilename(): string {\n    return this._suggestedFilename;\n  }\n\n  async path(): Promise<string> {\n    return await this._artifact.pathAfterFinished();\n  }\n\n  async saveAs(path: string): Promise<void> {\n    return await this._artifact.saveAs(path);\n  }\n\n  async failure(): Promise<string | null> {\n    return await this._artifact.failure();\n  }\n\n  async createReadStream(): Promise<Readable> {\n    return await this._artifact.createReadStream();\n  }\n\n  async cancel(): Promise<void> {\n    return await this._artifact.cancel();\n  }\n\n  async delete(): Promise<void> {\n    return await this._artifact.delete();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBO,MAAM,SAAiC;AAAA,EAM5C,YAAY,MAAY,KAAa,mBAA2B,UAAoB;AAClF,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,qBAAqB;AAC1B,SAAK,YAAY;AAAA,EACnB;AAAA,EAEA,OAAa;AACX,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,MAAc;AACZ,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,oBAA4B;AAC1B,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,MAAM,OAAwB;AAC5B,WAAO,MAAM,KAAK,UAAU,kBAAkB;AAAA,EAChD;AAAA,EAEA,MAAM,OAAO,MAA6B;AACxC,WAAO,MAAM,KAAK,UAAU,OAAO,IAAI;AAAA,EACzC;AAAA,EAEA,MAAM,UAAkC;AACtC,WAAO,MAAM,KAAK,UAAU,QAAQ;AAAA,EACtC;AAAA,EAEA,MAAM,mBAAsC;AAC1C,WAAO,MAAM,KAAK,UAAU,iBAAiB;AAAA,EAC/C;AAAA,EAEA,MAAM,SAAwB;AAC5B,WAAO,MAAM,KAAK,UAAU,OAAO;AAAA,EACrC;AAAA,EAEA,MAAM,SAAwB;AAC5B,WAAO,MAAM,KAAK,UAAU,OAAO;AAAA,EACrC;AACF;",
  "names": []
}
