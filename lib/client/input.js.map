{
  "version": 3,
  "sources": ["../../src/client/input.ts"],
  "sourcesContent": ["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Page } from './page';\nimport type * as api from '../../types/types';\nimport type * as channels from '@protocol/channels';\n\nexport class Keyboard implements api.Keyboard {\n  private _page: Page;\n\n  constructor(page: Page) {\n    this._page = page;\n  }\n\n  async down(key: string) {\n    await this._page._channel.keyboardDown({ key });\n  }\n\n  async up(key: string) {\n    await this._page._channel.keyboardUp({ key });\n  }\n\n  async insertText(text: string) {\n    await this._page._channel.keyboardInsertText({ text });\n  }\n\n  async type(text: string, options: channels.PageKeyboardTypeOptions = {}) {\n    await this._page._channel.keyboardType({ text, ...options });\n  }\n\n  async press(key: string, options: channels.PageKeyboardPressOptions = {}) {\n    await this._page._channel.keyboardPress({ key, ...options });\n  }\n}\n\nexport class Mouse implements api.Mouse {\n  private _page: Page;\n\n  constructor(page: Page) {\n    this._page = page;\n  }\n\n  async move(x: number, y: number, options: { steps?: number } = {}) {\n    await this._page._channel.mouseMove({ x, y, ...options });\n  }\n\n  async down(options: channels.PageMouseDownOptions = {}) {\n    await this._page._channel.mouseDown({ ...options });\n  }\n\n  async up(options: channels.PageMouseUpOptions = {}) {\n    await this._page._channel.mouseUp(options);\n  }\n\n  async click(x: number, y: number, options: channels.PageMouseClickOptions = {}) {\n    await this._page._channel.mouseClick({ x, y, ...options });\n  }\n\n  async dblclick(x: number, y: number, options: Omit<channels.PageMouseClickOptions, 'clickCount'> = {}) {\n    await this._page._wrapApiCall(async () => {\n      await this.click(x, y, { ...options, clickCount: 2 });\n    }, { title: 'Double click' });\n  }\n\n  async wheel(deltaX: number, deltaY: number) {\n    await this._page._channel.mouseWheel({ deltaX, deltaY });\n  }\n}\n\nexport class Touchscreen implements api.Touchscreen {\n  private _page: Page;\n\n  constructor(page: Page) {\n    this._page = page;\n  }\n\n  async tap(x: number, y: number) {\n    await this._page._channel.touchscreenTap({ x, y });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBO,MAAM,SAAiC;AAAA,EAG5C,YAAY,MAAY;AACtB,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,MAAM,KAAK,KAAa;AACtB,UAAM,KAAK,MAAM,SAAS,aAAa,EAAE,IAAI,CAAC;AAAA,EAChD;AAAA,EAEA,MAAM,GAAG,KAAa;AACpB,UAAM,KAAK,MAAM,SAAS,WAAW,EAAE,IAAI,CAAC;AAAA,EAC9C;AAAA,EAEA,MAAM,WAAW,MAAc;AAC7B,UAAM,KAAK,MAAM,SAAS,mBAAmB,EAAE,KAAK,CAAC;AAAA,EACvD;AAAA,EAEA,MAAM,KAAK,MAAc,UAA4C,CAAC,GAAG;AACvE,UAAM,KAAK,MAAM,SAAS,aAAa,EAAE,MAAM,GAAG,QAAQ,CAAC;AAAA,EAC7D;AAAA,EAEA,MAAM,MAAM,KAAa,UAA6C,CAAC,GAAG;AACxE,UAAM,KAAK,MAAM,SAAS,cAAc,EAAE,KAAK,GAAG,QAAQ,CAAC;AAAA,EAC7D;AACF;AAEO,MAAM,MAA2B;AAAA,EAGtC,YAAY,MAAY;AACtB,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,MAAM,KAAK,GAAW,GAAW,UAA8B,CAAC,GAAG;AACjE,UAAM,KAAK,MAAM,SAAS,UAAU,EAAE,GAAG,GAAG,GAAG,QAAQ,CAAC;AAAA,EAC1D;AAAA,EAEA,MAAM,KAAK,UAAyC,CAAC,GAAG;AACtD,UAAM,KAAK,MAAM,SAAS,UAAU,EAAE,GAAG,QAAQ,CAAC;AAAA,EACpD;AAAA,EAEA,MAAM,GAAG,UAAuC,CAAC,GAAG;AAClD,UAAM,KAAK,MAAM,SAAS,QAAQ,OAAO;AAAA,EAC3C;AAAA,EAEA,MAAM,MAAM,GAAW,GAAW,UAA0C,CAAC,GAAG;AAC9E,UAAM,KAAK,MAAM,SAAS,WAAW,EAAE,GAAG,GAAG,GAAG,QAAQ,CAAC;AAAA,EAC3D;AAAA,EAEA,MAAM,SAAS,GAAW,GAAW,UAA8D,CAAC,GAAG;AACrG,UAAM,KAAK,MAAM,aAAa,YAAY;AACxC,YAAM,KAAK,MAAM,GAAG,GAAG,EAAE,GAAG,SAAS,YAAY,EAAE,CAAC;AAAA,IACtD,GAAG,EAAE,OAAO,eAAe,CAAC;AAAA,EAC9B;AAAA,EAEA,MAAM,MAAM,QAAgB,QAAgB;AAC1C,UAAM,KAAK,MAAM,SAAS,WAAW,EAAE,QAAQ,OAAO,CAAC;AAAA,EACzD;AACF;AAEO,MAAM,YAAuC;AAAA,EAGlD,YAAY,MAAY;AACtB,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,MAAM,IAAI,GAAW,GAAW;AAC9B,UAAM,KAAK,MAAM,SAAS,eAAe,EAAE,GAAG,EAAE,CAAC;AAAA,EACnD;AACF;",
  "names": []
}
