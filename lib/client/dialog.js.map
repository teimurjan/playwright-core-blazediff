{
  "version": 3,
  "sources": ["../../src/client/dialog.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChannelOwner } from './channelOwner';\nimport { Page } from './page';\n\nimport type * as api from '../../types/types';\nimport type * as channels from '@protocol/channels';\n\n\nexport class Dialog extends ChannelOwner<channels.DialogChannel> implements api.Dialog {\n  static from(dialog: channels.DialogChannel): Dialog {\n    return (dialog as any)._object;\n  }\n\n  private _page: Page | null;\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.DialogInitializer) {\n    super(parent, type, guid, initializer);\n    // Note: dialogs that open early during page initialization block it.\n    // Therefore, we must report the dialog without a page to be able to handle it.\n    this._page = Page.fromNullable(initializer.page);\n  }\n\n  page() {\n    return this._page;\n  }\n\n  type(): string {\n    return this._initializer.type;\n  }\n\n  message(): string {\n    return this._initializer.message;\n  }\n\n  defaultValue(): string {\n    return this._initializer.defaultValue;\n  }\n\n  async accept(promptText: string | undefined) {\n    await this._channel.accept({ promptText });\n  }\n\n  async dismiss() {\n    await this._channel.dismiss();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,0BAA6B;AAC7B,kBAAqB;AAMd,MAAM,eAAe,iCAA2D;AAAA,EACrF,OAAO,KAAK,QAAwC;AAClD,WAAQ,OAAe;AAAA,EACzB;AAAA,EAIA,YAAY,QAAsB,MAAc,MAAc,aAAyC;AACrG,UAAM,QAAQ,MAAM,MAAM,WAAW;AAGrC,SAAK,QAAQ,iBAAK,aAAa,YAAY,IAAI;AAAA,EACjD;AAAA,EAEA,OAAO;AACL,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,OAAe;AACb,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA,EAEA,UAAkB;AAChB,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA,EAEA,eAAuB;AACrB,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA,EAEA,MAAM,OAAO,YAAgC;AAC3C,UAAM,KAAK,SAAS,OAAO,EAAE,WAAW,CAAC;AAAA,EAC3C;AAAA,EAEA,MAAM,UAAU;AACd,UAAM,KAAK,SAAS,QAAQ;AAAA,EAC9B;AACF;",
  "names": []
}
