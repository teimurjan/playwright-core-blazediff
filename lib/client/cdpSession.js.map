{
  "version": 3,
  "sources": ["../../src/client/cdpSession.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChannelOwner } from './channelOwner';\n\nimport type * as api from '../../types/types';\nimport type { Protocol } from '../server/chromium/protocol';\nimport type * as channels from '@protocol/channels';\n\nexport class CDPSession extends ChannelOwner<channels.CDPSessionChannel> implements api.CDPSession {\n  static from(cdpSession: channels.CDPSessionChannel): CDPSession {\n    return (cdpSession as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.CDPSessionInitializer) {\n    super(parent, type, guid, initializer);\n\n    this._channel.on('event', ({ method, params }) => {\n      this.emit(method, params);\n    });\n\n    this.on = super.on;\n    this.addListener = super.addListener;\n    this.off = super.removeListener;\n    this.removeListener = super.removeListener;\n    this.once = super.once;\n  }\n\n  async send<T extends keyof Protocol.CommandParameters>(\n    method: T,\n    params?: Protocol.CommandParameters[T]\n  ): Promise<Protocol.CommandReturnValues[T]> {\n    const result = await this._channel.send({ method, params });\n    return result.result as Protocol.CommandReturnValues[T];\n  }\n\n  async detach() {\n    return await this._channel.detach();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,0BAA6B;AAMtB,MAAM,mBAAmB,iCAAmE;AAAA,EACjG,OAAO,KAAK,YAAoD;AAC9D,WAAQ,WAAmB;AAAA,EAC7B;AAAA,EAEA,YAAY,QAAsB,MAAc,MAAc,aAA6C;AACzG,UAAM,QAAQ,MAAM,MAAM,WAAW;AAErC,SAAK,SAAS,GAAG,SAAS,CAAC,EAAE,QAAQ,OAAO,MAAM;AAChD,WAAK,KAAK,QAAQ,MAAM;AAAA,IAC1B,CAAC;AAED,SAAK,KAAK,MAAM;AAChB,SAAK,cAAc,MAAM;AACzB,SAAK,MAAM,MAAM;AACjB,SAAK,iBAAiB,MAAM;AAC5B,SAAK,OAAO,MAAM;AAAA,EACpB;AAAA,EAEA,MAAM,KACJ,QACA,QAC0C;AAC1C,UAAM,SAAS,MAAM,KAAK,SAAS,KAAK,EAAE,QAAQ,OAAO,CAAC;AAC1D,WAAO,OAAO;AAAA,EAChB;AAAA,EAEA,MAAM,SAAS;AACb,WAAO,MAAM,KAAK,SAAS,OAAO;AAAA,EACpC;AACF;",
  "names": []
}
