{
  "version": 3,
  "sources": ["../../src/client/eventEmitter.ts"],
  "sourcesContent": ["/**\n * Copyright Joyent, Inc. and other Node contributors.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport type { EventEmitter as EventEmitterType } from 'events';\nimport type { Platform } from './platform';\n\ntype EventType = string | symbol;\ntype Listener = (...args: any[]) => any;\ntype EventMap = Record<EventType, Listener | Listener[]>;\n\nexport class EventEmitter implements EventEmitterType {\n\n  private _events: EventMap | undefined = undefined;\n  private _eventsCount = 0;\n  private _maxListeners: number | undefined = undefined;\n  readonly _pendingHandlers = new Map<EventType, Set<Promise<void>>>();\n  private _rejectionHandler: ((error: Error) => void) | undefined;\n  readonly _platform: Platform;\n\n  constructor(platform: Platform) {\n    this._platform = platform;\n    if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    }\n    this._maxListeners = this._maxListeners || undefined;\n    this.on = this.addListener;\n    this.off = this.removeListener;\n  }\n\n  setMaxListeners(n: number): this {\n    if (typeof n !== 'number' || n < 0 || Number.isNaN(n))\n      throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n    this._maxListeners = n;\n    return this;\n  }\n\n  getMaxListeners(): number {\n    return this._maxListeners === undefined ? this._platform.defaultMaxListeners() : this._maxListeners;\n  }\n\n  emit(type: EventType, ...args: any[]): boolean {\n    const events = this._events;\n    if (events === undefined)\n      return false;\n\n    const handler = events?.[type];\n    if (handler === undefined)\n      return false;\n\n    if (typeof handler === 'function') {\n      this._callHandler(type, handler, args);\n    } else {\n      const len = handler.length;\n      const listeners = handler.slice();\n      for (let i = 0; i < len; ++i)\n        this._callHandler(type, listeners[i], args);\n    }\n    return true;\n  }\n\n  private _callHandler(type: EventType, handler: Listener, args: any[]): void {\n    const promise = Reflect.apply(handler, this, args);\n    if (!(promise instanceof Promise))\n      return;\n    let set = this._pendingHandlers.get(type);\n    if (!set) {\n      set = new Set();\n      this._pendingHandlers.set(type, set);\n    }\n    set.add(promise);\n    promise.catch(e => {\n      if (this._rejectionHandler)\n        this._rejectionHandler(e);\n      else\n        throw e;\n    }).finally(() => set.delete(promise));\n  }\n\n  addListener(type: EventType, listener: Listener): this {\n    return this._addListener(type, listener, false);\n  }\n\n  on(type: EventType, listener: Listener): this {\n    return this._addListener(type, listener, false);\n  }\n\n  private _addListener(type: EventType, listener: Listener, prepend: boolean): this {\n    checkListener(listener);\n    let events = this._events;\n    let existing;\n    if (events === undefined) {\n      events = this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else {\n      // To avoid recursion in the case that type === \"newListener\"! Before\n      // adding it to the listeners, first emit \"newListener\".\n      if (events.newListener !== undefined) {\n        this.emit('newListener', type, unwrapListener(listener));\n\n        // Re-assign `events` because a newListener handler could have caused the\n        // this._events to be assigned to a new object\n        events = this._events!;\n      }\n      existing = events[type];\n    }\n\n    if (existing === undefined) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      existing = events![type] = listener;\n      ++this._eventsCount;\n    } else {\n      if (typeof existing === 'function') {\n        // Adding the second element, need to change to array.\n        existing = events![type] =\n          prepend ? [listener, existing] : [existing, listener];\n        // If we've already got an array, just append.\n      } else if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n\n      // Check for listener leak\n      const m = this.getMaxListeners();\n      if (m > 0 && existing.length > m && !(existing as any).warned) {\n        (existing as any).warned = true;\n        // No error code for this since it is a Warning\n        const w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + String(type) + ' listeners ' +\n                            'added. Use emitter.setMaxListeners() to ' +\n                            'increase limit') as any;\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = this;\n        w.type = type;\n        w.count = existing.length;\n        if (!this._platform.isUnderTest()) {\n          // eslint-disable-next-line no-console\n          console.warn(w);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  prependListener(type: EventType, listener: Listener): this {\n    return this._addListener(type, listener, true);\n  }\n\n  once(type: EventType, listener: Listener): this {\n    checkListener(listener);\n    this.on(type, new OnceWrapper(this, type, listener).wrapperFunction);\n    return this;\n  }\n\n  prependOnceListener(type: EventType, listener: Listener): this {\n    checkListener(listener);\n    this.prependListener(type, new OnceWrapper(this, type, listener).wrapperFunction);\n    return this;\n  }\n\n  removeListener(type: EventType, listener: Listener): this {\n    checkListener(listener);\n\n    const events = this._events;\n    if (events === undefined)\n      return this;\n\n    const list = events[type];\n    if (list === undefined)\n      return this;\n\n    if (list === listener || (list as any).listener === listener) {\n      if (--this._eventsCount === 0) {\n        this._events = Object.create(null);\n      } else {\n        delete events[type];\n        if (events.removeListener)\n          this.emit('removeListener', type, (list as any).listener ?? listener);\n      }\n    } else if (typeof list !== 'function') {\n      let position = -1;\n      let originalListener;\n\n      for (let i = list.length - 1; i >= 0; i--) {\n        if (list[i] === listener || wrappedListener(list[i]) === listener) {\n          originalListener = wrappedListener(list[i]);\n          position = i;\n          break;\n        }\n      }\n\n      if (position < 0)\n        return this;\n\n      if (position === 0)\n        list.shift();\n      else\n        list.splice(position, 1);\n\n      if (list.length === 1)\n        events[type] = list[0];\n\n      if (events.removeListener !== undefined)\n        this.emit('removeListener', type, originalListener || listener);\n    }\n\n    return this;\n\n  }\n\n  off(type: EventType, listener: Listener): this {\n    return this.removeListener(type, listener);\n  }\n\n  removeAllListeners(type?: EventType): this;\n  removeAllListeners(type: EventType | undefined, options: { behavior?: 'wait'|'ignoreErrors'|'default' }): Promise<void>;\n  removeAllListeners(type?: string, options?: { behavior?: 'wait'|'ignoreErrors'|'default' }): this | Promise<void> {\n    this._removeAllListeners(type);\n    if (!options)\n      return this;\n\n    if (options.behavior === 'wait') {\n      const errors: Error[] = [];\n      this._rejectionHandler = error => errors.push(error);\n      return this._waitFor(type).then(() => {\n        if (errors.length)\n          throw errors[0];\n      });\n    }\n\n    if (options.behavior === 'ignoreErrors')\n      this._rejectionHandler = () => {};\n\n    return Promise.resolve();\n  }\n\n  private _removeAllListeners(type?: string) {\n    const events = this._events;\n    if (!events)\n      return;\n\n    // not listening for removeListener, no need to emit\n    if (!events.removeListener) {\n      if (type === undefined) {\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n      } else if (events[type] !== undefined) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else\n          delete events[type];\n      }\n      return;\n    }\n\n    // emit removeListener for all listeners on all events\n    if (type === undefined) {\n      const keys = Object.keys(events);\n      let key;\n      for (let i = 0; i < keys.length; ++i) {\n        key = keys[i];\n        if (key === 'removeListener')\n          continue;\n        this._removeAllListeners(key);\n      }\n      this._removeAllListeners('removeListener');\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n      return;\n    }\n\n    const listeners = events[type];\n\n    if (typeof listeners === 'function') {\n      this.removeListener(type, listeners);\n    } else if (listeners !== undefined) {\n      // LIFO order\n      for (let i = listeners.length - 1; i >= 0; i--)\n        this.removeListener(type, listeners[i]);\n    }\n  }\n\n  listeners(type: EventType): Listener[] {\n    return this._listeners(this, type, true);\n  }\n\n  rawListeners(type: EventType): Listener[] {\n    return this._listeners(this, type, false);\n  }\n\n  listenerCount(type: EventType): number {\n    const events = this._events;\n    if (events !== undefined) {\n      const listener = events[type];\n      if (typeof listener === 'function')\n        return 1;\n      if (listener !== undefined)\n        return listener.length;\n    }\n    return 0;\n  }\n\n  eventNames(): Array<string | symbol> {\n    return this._eventsCount > 0 && this._events ? Reflect.ownKeys(this._events) : [];\n  }\n\n  private async _waitFor(type?: EventType) {\n    let promises: Promise<void>[] = [];\n    if (type) {\n      promises = [...(this._pendingHandlers.get(type) || [])];\n    } else {\n      promises = [];\n      for (const [, pending] of this._pendingHandlers)\n        promises.push(...pending);\n    }\n    await Promise.all(promises);\n  }\n\n  private _listeners(target: EventEmitter, type: EventType, unwrap: boolean): Listener[] {\n    const events = target._events;\n\n    if (events === undefined)\n      return [];\n\n    const listener = events[type];\n    if (listener === undefined)\n      return [];\n\n    if (typeof listener === 'function')\n      return unwrap ? [unwrapListener(listener)] : [listener];\n\n    return unwrap ? unwrapListeners(listener) : listener.slice();\n  }\n}\n\nfunction checkListener(listener: any) {\n  if (typeof listener !== 'function')\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n}\n\nclass OnceWrapper {\n  private _fired = false;\n  readonly wrapperFunction: (...args: any[]) => Promise<void> | void;\n  readonly _listener: Listener;\n  private _eventEmitter: EventEmitter;\n  private _eventType: EventType;\n\n  constructor(eventEmitter: EventEmitter, eventType: EventType, listener: Listener) {\n    this._eventEmitter = eventEmitter;\n    this._eventType = eventType;\n    this._listener = listener;\n    this.wrapperFunction = this._handle.bind(this);\n    (this.wrapperFunction as any).listener = listener;\n  }\n\n  private _handle(...args: any[]) {\n    if (this._fired)\n      return;\n    this._fired = true;\n    this._eventEmitter.removeListener(this._eventType, this.wrapperFunction);\n    return this._listener.apply(this._eventEmitter, args);\n  }\n}\n\nfunction unwrapListener(l: Listener): Listener {\n  return wrappedListener(l) ?? l;\n}\n\nfunction unwrapListeners(arr: Listener[]): Listener[] {\n  return arr.map(l => wrappedListener(l) ?? l);\n}\n\nfunction wrappedListener(l: Listener): Listener {\n  return (l as any).listener;\n}\n"],
  "mappings": "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",
  "names": []
}
