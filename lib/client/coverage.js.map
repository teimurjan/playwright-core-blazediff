{
  "version": 3,
  "sources": ["../../src/client/coverage.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as api from '../../types/types';\nimport type * as channels from '@protocol/channels';\n\nexport class Coverage implements api.Coverage {\n  private _channel: channels.PageChannel;\n\n  constructor(channel: channels.PageChannel) {\n    this._channel = channel;\n  }\n\n  async startJSCoverage(options: channels.PageStartJSCoverageOptions = {}) {\n    await this._channel.startJSCoverage(options);\n  }\n\n  async stopJSCoverage(): Promise<channels.PageStopJSCoverageResult['entries']> {\n    return (await this._channel.stopJSCoverage()).entries;\n  }\n\n  async startCSSCoverage(options: channels.PageStartCSSCoverageOptions = {}) {\n    await this._channel.startCSSCoverage(options);\n  }\n\n  async stopCSSCoverage(): Promise<channels.PageStopCSSCoverageResult['entries']> {\n    return (await this._channel.stopCSSCoverage()).entries;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBO,MAAM,SAAiC;AAAA,EAG5C,YAAY,SAA+B;AACzC,SAAK,WAAW;AAAA,EAClB;AAAA,EAEA,MAAM,gBAAgB,UAA+C,CAAC,GAAG;AACvE,UAAM,KAAK,SAAS,gBAAgB,OAAO;AAAA,EAC7C;AAAA,EAEA,MAAM,iBAAwE;AAC5E,YAAQ,MAAM,KAAK,SAAS,eAAe,GAAG;AAAA,EAChD;AAAA,EAEA,MAAM,iBAAiB,UAAgD,CAAC,GAAG;AACzE,UAAM,KAAK,SAAS,iBAAiB,OAAO;AAAA,EAC9C;AAAA,EAEA,MAAM,kBAA0E;AAC9E,YAAQ,MAAM,KAAK,SAAS,gBAAgB,GAAG;AAAA,EACjD;AACF;",
  "names": []
}
