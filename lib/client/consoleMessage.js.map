{
  "version": 3,
  "sources": ["../../src/client/consoleMessage.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JSHandle } from './jsHandle';\nimport { Page } from './page';\n\nimport type * as api from '../../types/types';\nimport type { Platform } from './platform';\nimport type * as channels from '@protocol/channels';\n\ntype ConsoleMessageLocation = channels.BrowserContextConsoleEvent['location'];\n\nexport class ConsoleMessage implements api.ConsoleMessage {\n\n  private _page: Page | null;\n  private _event: channels.BrowserContextConsoleEvent | channels.ElectronApplicationConsoleEvent;\n\n  constructor(platform: Platform, event: channels.BrowserContextConsoleEvent | channels.ElectronApplicationConsoleEvent) {\n    this._page = ('page' in event && event.page) ? Page.from(event.page) : null;\n    this._event = event;\n    if (platform.inspectCustom)\n      (this as any)[platform.inspectCustom] = () => this._inspect();\n  }\n\n  page() {\n    return this._page;\n  }\n\n  type(): ReturnType<api.ConsoleMessage['type']> {\n    return this._event.type as ReturnType<api.ConsoleMessage['type']>;\n  }\n\n  text(): string {\n    return this._event.text;\n  }\n\n  args(): JSHandle[] {\n    return this._event.args.map(JSHandle.from);\n  }\n\n  location(): ConsoleMessageLocation {\n    return this._event.location;\n  }\n\n  private _inspect() {\n    return this.text();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,sBAAyB;AACzB,kBAAqB;AAQd,MAAM,eAA6C;AAAA,EAKxD,YAAY,UAAoB,OAAuF;AACrH,SAAK,QAAS,UAAU,SAAS,MAAM,OAAQ,iBAAK,KAAK,MAAM,IAAI,IAAI;AACvE,SAAK,SAAS;AACd,QAAI,SAAS;AACX,MAAC,KAAa,SAAS,aAAa,IAAI,MAAM,KAAK,SAAS;AAAA,EAChE;AAAA,EAEA,OAAO;AACL,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,OAA+C;AAC7C,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EAEA,OAAe;AACb,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EAEA,OAAmB;AACjB,WAAO,KAAK,OAAO,KAAK,IAAI,yBAAS,IAAI;AAAA,EAC3C;AAAA,EAEA,WAAmC;AACjC,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EAEQ,WAAW;AACjB,WAAO,KAAK,KAAK;AAAA,EACnB;AACF;",
  "names": []
}
