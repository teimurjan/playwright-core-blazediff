{
  "version": 3,
  "sources": ["../../src/worker/timeoutManager.ts"],
  "sourcesContent": ["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ManualPromise, monotonicTime } from 'playwright-core/lib/utils';\nimport { colors } from 'playwright-core/lib/utils';\n\nimport { debugTest, formatLocation } from '../util';\n\nimport type { Location } from '../../types/testReporter';\n\nexport type TimeSlot = {\n  timeout: number;\n  elapsed: number;\n};\n\ntype RunnableType = 'test' | 'beforeAll' | 'afterAll' | 'beforeEach' | 'afterEach' | 'slow' | 'skip' | 'fail' | 'fixme' | 'teardown';\n\nexport type RunnableDescription = {\n  type: RunnableType;\n  location?: Location;\n  slot?: TimeSlot;  // Falls back to test slot.\n  fixture?: FixtureDescription;\n};\n\nexport type FixtureDescription = {\n  title: string;\n  phase: 'setup' | 'teardown';\n  location?: Location;\n  slot?: TimeSlot;  // Falls back to the runnable slot.\n};\n\ntype Running = {\n  runnable: RunnableDescription;\n  slot: TimeSlot;\n  start: number;\n  deadline: number;\n  timer: NodeJS.Timeout | undefined;\n  timeoutPromise: ManualPromise<any>;\n};\nexport const kMaxDeadline = 2147483647; // 2^31-1\n\nexport class TimeoutManager {\n  private _defaultSlot: TimeSlot;\n  private _running?: Running;\n  private _ignoreTimeouts = false;\n\n  constructor(timeout: number) {\n    this._defaultSlot = { timeout, elapsed: 0 };\n  }\n\n  setIgnoreTimeouts() {\n    this._ignoreTimeouts = true;\n    if (this._running)\n      this._updateTimeout(this._running);\n  }\n\n  interrupt() {\n    if (this._running)\n      this._running.timeoutPromise.reject(this._createTimeoutError(this._running));\n  }\n\n  isTimeExhaustedFor(runnable: RunnableDescription) {\n    const slot = runnable.fixture?.slot || runnable.slot || this._defaultSlot;\n    // Note: the \"-1\" here matches the +1 in _updateTimeout.\n    return slot.timeout > 0 && (slot.elapsed >= slot.timeout - 1);\n  }\n\n  async withRunnable<T>(runnable: RunnableDescription, cb: () => Promise<T>): Promise<T> {\n    if (this._running)\n      throw new Error(`Internal error: duplicate runnable`);\n    const running = this._running = {\n      runnable,\n      slot: runnable.fixture?.slot || runnable.slot || this._defaultSlot,\n      start: monotonicTime(),\n      deadline: kMaxDeadline,\n      timer: undefined,\n      timeoutPromise: new ManualPromise(),\n    };\n    let debugTitle = '';\n    try {\n      if (debugTest.enabled) {\n        debugTitle = runnable.fixture ? `${runnable.fixture.phase} \"${runnable.fixture.title}\"` : runnable.type;\n        const location = runnable.location ? ` at \"${formatLocation(runnable.location)}\"` : ``;\n        debugTest(`started ${debugTitle}${location}`);\n      }\n      this._updateTimeout(running);\n      return await Promise.race([\n        cb(),\n        running.timeoutPromise,\n      ]);\n    } finally {\n      if (running.timer)\n        clearTimeout(running.timer);\n      running.timer = undefined;\n      running.slot.elapsed += monotonicTime() - running.start;\n      this._running = undefined;\n      if (debugTest.enabled)\n        debugTest(`finished ${debugTitle}`);\n    }\n  }\n\n  private _updateTimeout(running: Running) {\n    if (running.timer)\n      clearTimeout(running.timer);\n    running.timer = undefined;\n    if (this._ignoreTimeouts || !running.slot.timeout) {\n      running.deadline = kMaxDeadline;\n      return;\n    }\n    running.deadline = running.start + (running.slot.timeout - running.slot.elapsed);\n    // Compensate for Node.js troubles with timeouts that can fire too early.\n    // We add an extra millisecond which seems to be enough.\n    // See https://github.com/nodejs/node/issues/26578.\n    const timeout = running.deadline - monotonicTime() + 1;\n    if (timeout <= 0)\n      running.timeoutPromise.reject(this._createTimeoutError(running));\n    else\n      running.timer = setTimeout(() => running.timeoutPromise.reject(this._createTimeoutError(running)), timeout);\n  }\n\n  defaultSlot() {\n    return this._defaultSlot;\n  }\n\n  slow() {\n    const slot = this._running ? this._running.slot : this._defaultSlot;\n    slot.timeout = slot.timeout * 3;\n    if (this._running)\n      this._updateTimeout(this._running);\n  }\n\n  setTimeout(timeout: number) {\n    const slot = this._running ? this._running.slot : this._defaultSlot;\n    slot.timeout = timeout;\n    if (this._running)\n      this._updateTimeout(this._running);\n  }\n\n  currentSlotDeadline() {\n    return this._running ? this._running.deadline : kMaxDeadline;\n  }\n\n  currentSlotType() {\n    return this._running ? this._running.runnable.type : 'test';\n  }\n\n  private _createTimeoutError(running: Running): Error {\n    let message = '';\n    const timeout = running.slot.timeout;\n    const runnable = running.runnable;\n    switch (runnable.type) {\n      case 'test': {\n        if (runnable.fixture) {\n          if (runnable.fixture.phase === 'setup')\n            message = `Test timeout of ${timeout}ms exceeded while setting up \"${runnable.fixture.title}\".`;\n          else\n            message = `Tearing down \"${runnable.fixture.title}\" exceeded the test timeout of ${timeout}ms.`;\n        } else {\n          message = `Test timeout of ${timeout}ms exceeded.`;\n        }\n        break;\n      }\n      case 'afterEach':\n      case 'beforeEach':\n        message = `Test timeout of ${timeout}ms exceeded while running \"${runnable.type}\" hook.`;\n        break;\n      case 'beforeAll':\n      case 'afterAll':\n        message = `\"${runnable.type}\" hook timeout of ${timeout}ms exceeded.`;\n        break;\n      case 'teardown': {\n        if (runnable.fixture)\n          message = `Worker teardown timeout of ${timeout}ms exceeded while ${runnable.fixture.phase === 'setup' ? 'setting up' : 'tearing down'} \"${runnable.fixture.title}\".`;\n        else\n          message = `Worker teardown timeout of ${timeout}ms exceeded.`;\n        break;\n      }\n      case 'skip':\n      case 'slow':\n      case 'fixme':\n      case 'fail':\n        message = `\"${runnable.type}\" modifier timeout of ${timeout}ms exceeded.`;\n        break;\n    }\n    const fixtureWithSlot = runnable.fixture?.slot ? runnable.fixture : undefined;\n    if (fixtureWithSlot)\n      message = `Fixture \"${fixtureWithSlot.title}\" timeout of ${timeout}ms exceeded during ${fixtureWithSlot.phase}.`;\n    message = colors.red(message);\n    const location = (fixtureWithSlot || runnable).location;\n    const error = new TimeoutManagerError(message);\n    error.name = '';\n    // Include location for hooks, modifiers and fixtures to distinguish between them.\n    error.stack = message + (location ? `\\n    at ${location.file}:${location.line}:${location.column}` : '');\n    return error;\n  }\n}\n\nexport class TimeoutManagerError extends Error {}\n"],
  "mappings": "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",
  "names": ["import_utils"]
}
