{
  "version": 3,
  "sources": ["../../../src/utils/isomorphic/time.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Hopefully, this file is never used in injected sources,\n// because it does not use `builtins.performance`,\n// and can break when clock emulation is engaged.\n\n/* eslint-disable no-restricted-globals */\n\nlet _timeOrigin = performance.timeOrigin;\nlet _timeShift = 0;\n\nexport function setTimeOrigin(origin: number) {\n  _timeOrigin = origin;\n  _timeShift = performance.timeOrigin - origin;\n}\n\nexport function timeOrigin(): number {\n  return _timeOrigin;\n}\n\nexport function monotonicTime(): number {\n  return Math.floor((performance.now() + _timeShift) * 1000) / 1000;\n}\n\nexport const DEFAULT_PLAYWRIGHT_TIMEOUT = 30_000;\nexport const DEFAULT_PLAYWRIGHT_LAUNCH_TIMEOUT = 3 * 60 * 1000; // 3 minutes\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA,IAAI,cAAc,YAAY;AAC9B,IAAI,aAAa;AAEV,SAAS,cAAc,QAAgB;AAC5C,gBAAc;AACd,eAAa,YAAY,aAAa;AACxC;AAEO,SAAS,aAAqB;AACnC,SAAO;AACT;AAEO,SAAS,gBAAwB;AACtC,SAAO,KAAK,OAAO,YAAY,IAAI,IAAI,cAAc,GAAI,IAAI;AAC/D;AAEO,MAAM,6BAA6B;AACnC,MAAM,oCAAoC,IAAI,KAAK;",
  "names": []
}
