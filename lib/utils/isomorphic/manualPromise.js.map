{
  "version": 3,
  "sources": ["../../../src/utils/isomorphic/manualPromise.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { captureRawStack } from './stackTrace';\n\nexport class ManualPromise<T = void> extends Promise<T> {\n  private _resolve!: (t: T) => void;\n  private _reject!: (e: Error) => void;\n  private _isDone: boolean;\n\n  constructor() {\n    let resolve: (t: T) => void;\n    let reject: (e: Error) => void;\n    super((f, r) => {\n      resolve = f;\n      reject = r;\n    });\n    this._isDone = false;\n    this._resolve = resolve!;\n    this._reject = reject!;\n  }\n\n  isDone() {\n    return this._isDone;\n  }\n\n  resolve(t: T) {\n    this._isDone = true;\n    this._resolve(t);\n  }\n\n  reject(e: Error) {\n    this._isDone = true;\n    this._reject(e);\n  }\n\n  static override get [Symbol.species]() {\n    return Promise;\n  }\n\n  override get [Symbol.toStringTag]() {\n    return 'ManualPromise';\n  }\n}\n\nexport class LongStandingScope {\n  private _terminateError: Error | undefined;\n  private _closeError: Error | undefined;\n  private _terminatePromises = new Map<ManualPromise<Error>, string[]>();\n  private _isClosed = false;\n\n  reject(error: Error) {\n    this._isClosed = true;\n    this._terminateError = error;\n    for (const p of this._terminatePromises.keys())\n      p.resolve(error);\n  }\n\n  close(error: Error) {\n    this._isClosed = true;\n    this._closeError = error;\n    for (const [p, frames] of this._terminatePromises)\n      p.resolve(cloneError(error, frames));\n  }\n\n  isClosed() {\n    return this._isClosed;\n  }\n\n  static async raceMultiple<T>(scopes: LongStandingScope[], promise: Promise<T>): Promise<T> {\n    return Promise.race(scopes.map(s => s.race(promise)));\n  }\n\n  async race<T>(promise: Promise<T> | Promise<T>[]): Promise<T> {\n    return this._race(Array.isArray(promise) ? promise : [promise], false) as Promise<T>;\n  }\n\n  async safeRace<T>(promise: Promise<T>, defaultValue?: T): Promise<T> {\n    return this._race([promise], true, defaultValue);\n  }\n\n  private async _race(promises: Promise<any>[], safe: boolean, defaultValue?: any): Promise<any> {\n    const terminatePromise = new ManualPromise<Error>();\n    const frames = captureRawStack();\n    if (this._terminateError)\n      terminatePromise.resolve(this._terminateError);\n    if (this._closeError)\n      terminatePromise.resolve(cloneError(this._closeError, frames));\n    this._terminatePromises.set(terminatePromise, frames);\n    try {\n      return await Promise.race([\n        terminatePromise.then(e => safe ? defaultValue : Promise.reject(e)),\n        ...promises\n      ]);\n    } finally {\n      this._terminatePromises.delete(terminatePromise);\n    }\n  }\n}\n\nfunction cloneError(error: Error, frames: string[]) {\n  const clone = new Error();\n  clone.name = error.name;\n  clone.message = error.message;\n  clone.stack = [error.name + ':' + error.message, ...frames].join('\\n');\n  return clone;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,wBAAgC;AAEzB,MAAM,sBAAgC,QAAW;AAAA,EAKtD,cAAc;AACZ,QAAI;AACJ,QAAI;AACJ,UAAM,CAAC,GAAG,MAAM;AACd,gBAAU;AACV,eAAS;AAAA,IACX,CAAC;AACD,SAAK,UAAU;AACf,SAAK,WAAW;AAChB,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,SAAS;AACP,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,QAAQ,GAAM;AACZ,SAAK,UAAU;AACf,SAAK,SAAS,CAAC;AAAA,EACjB;AAAA,EAEA,OAAO,GAAU;AACf,SAAK,UAAU;AACf,SAAK,QAAQ,CAAC;AAAA,EAChB;AAAA,EAEA,YAAqB,OAAO,OAAO,IAAI;AACrC,WAAO;AAAA,EACT;AAAA,EAEA,KAAc,OAAO,WAAW,IAAI;AAClC,WAAO;AAAA,EACT;AACF;AAEO,MAAM,kBAAkB;AAAA,EAAxB;AAGL,SAAQ,qBAAqB,oBAAI,IAAoC;AACrE,SAAQ,YAAY;AAAA;AAAA,EAEpB,OAAO,OAAc;AACnB,SAAK,YAAY;AACjB,SAAK,kBAAkB;AACvB,eAAW,KAAK,KAAK,mBAAmB,KAAK;AAC3C,QAAE,QAAQ,KAAK;AAAA,EACnB;AAAA,EAEA,MAAM,OAAc;AAClB,SAAK,YAAY;AACjB,SAAK,cAAc;AACnB,eAAW,CAAC,GAAG,MAAM,KAAK,KAAK;AAC7B,QAAE,QAAQ,WAAW,OAAO,MAAM,CAAC;AAAA,EACvC;AAAA,EAEA,WAAW;AACT,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,aAAa,aAAgB,QAA6B,SAAiC;AACzF,WAAO,QAAQ,KAAK,OAAO,IAAI,OAAK,EAAE,KAAK,OAAO,CAAC,CAAC;AAAA,EACtD;AAAA,EAEA,MAAM,KAAQ,SAAgD;AAC5D,WAAO,KAAK,MAAM,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO,GAAG,KAAK;AAAA,EACvE;AAAA,EAEA,MAAM,SAAY,SAAqB,cAA8B;AACnE,WAAO,KAAK,MAAM,CAAC,OAAO,GAAG,MAAM,YAAY;AAAA,EACjD;AAAA,EAEA,MAAc,MAAM,UAA0B,MAAe,cAAkC;AAC7F,UAAM,mBAAmB,IAAI,cAAqB;AAClD,UAAM,aAAS,mCAAgB;AAC/B,QAAI,KAAK;AACP,uBAAiB,QAAQ,KAAK,eAAe;AAC/C,QAAI,KAAK;AACP,uBAAiB,QAAQ,WAAW,KAAK,aAAa,MAAM,CAAC;AAC/D,SAAK,mBAAmB,IAAI,kBAAkB,MAAM;AACpD,QAAI;AACF,aAAO,MAAM,QAAQ,KAAK;AAAA,QACxB,iBAAiB,KAAK,OAAK,OAAO,eAAe,QAAQ,OAAO,CAAC,CAAC;AAAA,QAClE,GAAG;AAAA,MACL,CAAC;AAAA,IACH,UAAE;AACA,WAAK,mBAAmB,OAAO,gBAAgB;AAAA,IACjD;AAAA,EACF;AACF;AAEA,SAAS,WAAW,OAAc,QAAkB;AAClD,QAAM,QAAQ,IAAI,MAAM;AACxB,QAAM,OAAO,MAAM;AACnB,QAAM,UAAU,MAAM;AACtB,QAAM,QAAQ,CAAC,MAAM,OAAO,MAAM,MAAM,SAAS,GAAG,MAAM,EAAE,KAAK,IAAI;AACrE,SAAO;AACT;",
  "names": []
}
