{
  "version": 3,
  "sources": ["../src/inProcessFactory.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AndroidServerLauncherImpl } from './androidServerImpl';\nimport { BrowserServerLauncherImpl } from './browserServerImpl';\nimport { DispatcherConnection, PlaywrightDispatcher, RootDispatcher, createPlaywright } from './server';\nimport { nodePlatform } from './server/utils/nodePlatform';\nimport { Connection } from './client/connection';\n\nimport type { Playwright as PlaywrightAPI } from './client/playwright';\nimport type { Language } from './utils';\n\nexport function createInProcessPlaywright(): PlaywrightAPI {\n  const playwright = createPlaywright({ sdkLanguage: (process.env.PW_LANG_NAME as Language | undefined) || 'javascript' });\n  const clientConnection = new Connection(nodePlatform);\n  clientConnection.useRawBuffers();\n  const dispatcherConnection = new DispatcherConnection(true /* local */);\n\n  // Dispatch synchronously at first.\n  dispatcherConnection.onmessage = message => clientConnection.dispatch(message);\n  clientConnection.onmessage = message => dispatcherConnection.dispatch(message);\n\n  const rootScope = new RootDispatcher(dispatcherConnection);\n\n  // Initialize Playwright channel.\n  new PlaywrightDispatcher(rootScope, playwright);\n  const playwrightAPI = clientConnection.getObjectWithKnownName('Playwright') as PlaywrightAPI;\n  playwrightAPI.chromium._serverLauncher = new BrowserServerLauncherImpl('chromium');\n  playwrightAPI.firefox._serverLauncher = new BrowserServerLauncherImpl('firefox');\n  playwrightAPI.webkit._serverLauncher = new BrowserServerLauncherImpl('webkit');\n  playwrightAPI._android._serverLauncher = new AndroidServerLauncherImpl();\n  playwrightAPI._bidiChromium._serverLauncher = new BrowserServerLauncherImpl('_bidiChromium');\n  playwrightAPI._bidiFirefox._serverLauncher = new BrowserServerLauncherImpl('_bidiFirefox');\n\n  // Switch to async dispatch after we got Playwright object.\n  dispatcherConnection.onmessage = message => setImmediate(() => clientConnection.dispatch(message));\n  clientConnection.onmessage = message => setImmediate(() => dispatcherConnection.dispatch(message));\n\n  clientConnection.toImpl = x => {\n    if (x instanceof Connection)\n      return x === clientConnection ? dispatcherConnection : undefined;\n    if (!x)\n      return dispatcherConnection._dispatcherByGuid.get('');\n    return dispatcherConnection._dispatcherByGuid.get(x._guid)!._object;\n  };\n  return playwrightAPI;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,+BAA0C;AAC1C,+BAA0C;AAC1C,oBAA6F;AAC7F,0BAA6B;AAC7B,wBAA2B;AAKpB,SAAS,4BAA2C;AACzD,QAAM,iBAAa,gCAAiB,EAAE,aAAc,QAAQ,IAAI,gBAAyC,aAAa,CAAC;AACvH,QAAM,mBAAmB,IAAI,6BAAW,gCAAY;AACpD,mBAAiB,cAAc;AAC/B,QAAM,uBAAuB,IAAI;AAAA,IAAqB;AAAA;AAAA,EAAgB;AAGtE,uBAAqB,YAAY,aAAW,iBAAiB,SAAS,OAAO;AAC7E,mBAAiB,YAAY,aAAW,qBAAqB,SAAS,OAAO;AAE7E,QAAM,YAAY,IAAI,6BAAe,oBAAoB;AAGzD,MAAI,mCAAqB,WAAW,UAAU;AAC9C,QAAM,gBAAgB,iBAAiB,uBAAuB,YAAY;AAC1E,gBAAc,SAAS,kBAAkB,IAAI,mDAA0B,UAAU;AACjF,gBAAc,QAAQ,kBAAkB,IAAI,mDAA0B,SAAS;AAC/E,gBAAc,OAAO,kBAAkB,IAAI,mDAA0B,QAAQ;AAC7E,gBAAc,SAAS,kBAAkB,IAAI,mDAA0B;AACvE,gBAAc,cAAc,kBAAkB,IAAI,mDAA0B,eAAe;AAC3F,gBAAc,aAAa,kBAAkB,IAAI,mDAA0B,cAAc;AAGzF,uBAAqB,YAAY,aAAW,aAAa,MAAM,iBAAiB,SAAS,OAAO,CAAC;AACjG,mBAAiB,YAAY,aAAW,aAAa,MAAM,qBAAqB,SAAS,OAAO,CAAC;AAEjG,mBAAiB,SAAS,OAAK;AAC7B,QAAI,aAAa;AACf,aAAO,MAAM,mBAAmB,uBAAuB;AACzD,QAAI,CAAC;AACH,aAAO,qBAAqB,kBAAkB,IAAI,EAAE;AACtD,WAAO,qBAAqB,kBAAkB,IAAI,EAAE,KAAK,EAAG;AAAA,EAC9D;AACA,SAAO;AACT;",
  "names": []
}
