{
  "version": 3,
  "sources": ["../src/browserServerImpl.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PlaywrightServer } from './remote/playwrightServer';\nimport { helper } from './server/helper';\nimport { createPlaywright } from './server/playwright';\nimport { createGuid } from './server/utils/crypto';\nimport { isUnderTest } from './server/utils/debug';\nimport { rewriteErrorMessage } from './utils/isomorphic/stackTrace';\nimport { DEFAULT_PLAYWRIGHT_LAUNCH_TIMEOUT } from './utils/isomorphic/time';\nimport { ws } from './utilsBundle';\nimport * as validatorPrimitives from './protocol/validatorPrimitives';\nimport { ProgressController } from './server/progress';\n\nimport type { BrowserServer, BrowserServerLauncher } from './client/browserType';\nimport type { LaunchOptions, LaunchServerOptions, Logger, Env } from './client/types';\nimport type { ProtocolLogger } from './server/types';\nimport type { WebSocketEventEmitter } from './utilsBundle';\nimport type { Browser } from './server/browser';\n\nexport class BrowserServerLauncherImpl implements BrowserServerLauncher {\n  private _browserName: 'chromium' | 'firefox' | 'webkit' | '_bidiFirefox' | '_bidiChromium';\n\n  constructor(browserName: 'chromium' | 'firefox' | 'webkit' | '_bidiFirefox' | '_bidiChromium') {\n    this._browserName = browserName;\n  }\n\n  async launchServer(options: LaunchOptions & LaunchServerOptions & { _userDataDir?: string } = {}): Promise<BrowserServer> {\n    const playwright = createPlaywright({ sdkLanguage: 'javascript', isServer: true });\n    // 1. Pre-launch the browser\n    const metadata = { id: '', startTime: 0, endTime: 0, type: 'Internal', method: '', params: {}, log: [], internal: true };\n    const validatorContext = {\n      tChannelImpl: (names: '*' | string[], arg: any, path: string) => {\n        throw new validatorPrimitives.ValidationError(`${path}: channels are not expected in launchServer`);\n      },\n      binary: 'buffer',\n      isUnderTest,\n    } satisfies validatorPrimitives.ValidatorContext;\n    let launchOptions = {\n      ...options,\n      ignoreDefaultArgs: Array.isArray(options.ignoreDefaultArgs) ? options.ignoreDefaultArgs : undefined,\n      ignoreAllDefaultArgs: !!options.ignoreDefaultArgs && !Array.isArray(options.ignoreDefaultArgs),\n      env: options.env ? envObjectToArray(options.env) : undefined,\n      timeout: options.timeout ?? DEFAULT_PLAYWRIGHT_LAUNCH_TIMEOUT,\n    };\n\n    let browser: Browser;\n    try {\n      const controller = new ProgressController(metadata);\n      browser = await controller.run(async progress => {\n        if (options._userDataDir !== undefined) {\n          const validator = validatorPrimitives.scheme['BrowserTypeLaunchPersistentContextParams'];\n          launchOptions = validator({ ...launchOptions, userDataDir: options._userDataDir }, '', validatorContext);\n          const context = await playwright[this._browserName].launchPersistentContext(progress, options._userDataDir, launchOptions);\n          return context._browser;\n        } else {\n          const validator = validatorPrimitives.scheme['BrowserTypeLaunchParams'];\n          launchOptions = validator(launchOptions, '', validatorContext);\n          return await playwright[this._browserName].launch(progress, launchOptions, toProtocolLogger(options.logger));\n        }\n      });\n    } catch (e) {\n      const log = helper.formatBrowserLogs(metadata.log);\n      rewriteErrorMessage(e, `${e.message} Failed to launch browser.${log}`);\n      throw e;\n    }\n\n    return this.launchServerOnExistingBrowser(browser, options);\n  }\n\n  async launchServerOnExistingBrowser(browser: Browser, options: LaunchServerOptions): Promise<BrowserServer> {\n    const path = options.wsPath ? (options.wsPath.startsWith('/') ? options.wsPath : `/${options.wsPath}`) : `/${createGuid()}`;\n\n    // 2. Start the server\n    const server = new PlaywrightServer({ mode: options._sharedBrowser ? 'launchServerShared' : 'launchServer', path, maxConnections: Infinity, preLaunchedBrowser: browser, debugController: options._debugController });\n    const wsEndpoint = await server.listen(options.port, options.host);\n\n    // 3. Return the BrowserServer interface\n    const browserServer = new ws.EventEmitter() as (BrowserServer & WebSocketEventEmitter);\n    browserServer.process = () => browser.options.browserProcess.process!;\n    browserServer.wsEndpoint = () => wsEndpoint;\n    browserServer.close = () => browser.options.browserProcess.close();\n    browserServer[Symbol.asyncDispose] = browserServer.close;\n    browserServer.kill = () => browser.options.browserProcess.kill();\n    (browserServer as any)._disconnectForTest = () => server.close();\n    (browserServer as any)._userDataDirForTest = (browser as any)._userDataDirForTest;\n    browser.options.browserProcess.onclose = (exitCode, signal) => {\n      server.close();\n      browserServer.emit('close', exitCode, signal);\n    };\n    return browserServer;\n  }\n}\n\nfunction toProtocolLogger(logger: Logger | undefined): ProtocolLogger | undefined {\n  return logger ? (direction: 'send' | 'receive', message: object) => {\n    if (logger.isEnabled('protocol', 'verbose'))\n      logger.log('protocol', 'verbose', (direction === 'send' ? 'SEND \u25BA ' : '\u25C0 RECV ') + JSON.stringify(message), [], {});\n  } : undefined;\n}\n\nfunction envObjectToArray(env: Env): { name: string, value: string }[] {\n  const result: { name: string, value: string }[] = [];\n  for (const name in env) {\n    if (!Object.is(env[name], undefined))\n      result.push({ name, value: String(env[name]) });\n  }\n  return result;\n}\n"],
  "mappings": "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",
  "names": []
}
