{
  "version": 3,
  "sources": ["../../src/common/expectBundle.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const expect: typeof import('../../bundles/expect/third_party/index').expect = require('./expectBundleImpl').expect;\nexport const mock: typeof import('../../bundles/expect/node_modules/jest-mock') = require('./expectBundleImpl').mock;\nexport const asymmetricMatchers = require('./expectBundleImpl').asymmetricMatchers;\nexport const matcherUtils = require('./expectBundleImpl').matcherUtils;\nexport const EXPECTED_COLOR: typeof import('../../bundles/expect/node_modules/jest-matcher-utils/build').EXPECTED_COLOR = require('./expectBundleImpl').EXPECTED_COLOR;\nexport const INVERTED_COLOR: typeof import('../../bundles/expect/node_modules/jest-matcher-utils/build').INVERTED_COLOR = require('./expectBundleImpl').INVERTED_COLOR;\nexport const RECEIVED_COLOR: typeof import('../../bundles/expect/node_modules/jest-matcher-utils/build').RECEIVED_COLOR = require('./expectBundleImpl').RECEIVED_COLOR;\nexport const printReceived: typeof import('../../bundles/expect/node_modules/jest-matcher-utils/build').printReceived = require('./expectBundleImpl').printReceived;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBO,MAAM,SAAyE,QAAQ,oBAAoB,EAAE;AAC7G,MAAM,OAAqE,QAAQ,oBAAoB,EAAE;AACzG,MAAM,qBAAqB,QAAQ,oBAAoB,EAAE;AACzD,MAAM,eAAe,QAAQ,oBAAoB,EAAE;AACnD,MAAM,iBAA6G,QAAQ,oBAAoB,EAAE;AACjJ,MAAM,iBAA6G,QAAQ,oBAAoB,EAAE;AACjJ,MAAM,iBAA6G,QAAQ,oBAAoB,EAAE;AACjJ,MAAM,gBAA2G,QAAQ,oBAAoB,EAAE;",
  "names": []
}
