{
  "version": 3,
  "sources": ["../../../src/mcp/browser/backend.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as mcp from '../sdk/exports';\nimport * as mcpBundle from '../sdk/bundle';\nimport { snapshot, pickLocator, evaluate } from './tools';\nimport { defineToolSchema } from '../sdk/exports';\nimport { runOnPauseBackendLoop } from '../sdk/mdb';\nimport { stripAnsiEscapes } from '../../util';\n\nimport type { Tool } from './tool';\nimport type * as playwright from '../../../index';\nimport type { ServerBackendOnPause } from '../sdk/mdb';\n\ntype PageEx = playwright.Page & {\n  _snapshotForAI: () => Promise<string>;\n};\n\nconst tools = [snapshot, pickLocator, evaluate];\n\nexport class BrowserBackend implements ServerBackendOnPause {\n  readonly name = 'Playwright';\n  readonly version = '0.0.1';\n  private _tools: Tool<any>[] = tools;\n  private _page: playwright.Page;\n\n  constructor(page: playwright.Page) {\n    this._page = page;\n  }\n\n  async initialize() {\n  }\n\n  async listTools(): Promise<mcp.Tool[]> {\n    return [...this._tools.map(tool => mcp.toMcpTool(tool.schema)), mcp.toMcpTool(doneToolSchema)];\n  }\n\n  async callTool(name: string, args: mcp.CallToolRequest['params']['arguments']): Promise<mcp.CallToolResult> {\n    if (name === 'done') {\n      (this as ServerBackendOnPause).requestSelfDestruct?.();\n      return {\n        content: [{ type: 'text', text: 'Done' }],\n      };\n    }\n\n    const tool = this._tools.find(tool => tool.schema.name === name);\n    if (!tool)\n      throw new Error(`Tool not found: ${name}. Available tools: ${this._tools.map(tool => tool.schema.name).join(', ')}`);\n    const parsedArguments = tool.schema.inputSchema.parse(args || {});\n    return await tool.handle(this._page, parsedArguments);\n  }\n}\n\nconst doneToolSchema = defineToolSchema({\n  name: 'done',\n  title: 'Done',\n  description: 'Done',\n  inputSchema: mcpBundle.z.object({}),\n  type: 'destructive',\n});\n\nexport async function runBrowserBackendOnError(page: playwright.Page, message: () => string) {\n  if (!process.env.PLAYWRIGHT_DEBUGGER_ENABLED)\n    return;\n  const snapshot = await (page as PageEx)._snapshotForAI();\n  const introMessage = `### Paused on error:\n${stripAnsiEscapes(message())}\n\n### Current page snapshot:\n${snapshot}\n\n### Task\nTry recovering from the error prior to continuing, use following tools to recover: ${tools.map(tool => tool.schema.name).join(', ')}`;\n  await runOnPauseBackendLoop(process.env.PLAYWRIGHT_MDB_URL!, new BrowserBackend(page), introMessage);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,UAAqB;AACrB,gBAA2B;AAC3B,mBAAgD;AAChD,qBAAiC;AACjC,iBAAsC;AACtC,kBAAiC;AAUjC,MAAM,QAAQ,CAAC,uBAAU,0BAAa,qBAAQ;AAEvC,MAAM,eAA+C;AAAA,EAM1D,YAAY,MAAuB;AALnC,SAAS,OAAO;AAChB,SAAS,UAAU;AACnB,SAAQ,SAAsB;AAI5B,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,MAAM,aAAa;AAAA,EACnB;AAAA,EAEA,MAAM,YAAiC;AACrC,WAAO,CAAC,GAAG,KAAK,OAAO,IAAI,UAAQ,IAAI,UAAU,KAAK,MAAM,CAAC,GAAG,IAAI,UAAU,cAAc,CAAC;AAAA,EAC/F;AAAA,EAEA,MAAM,SAAS,MAAc,MAA+E;AAC1G,QAAI,SAAS,QAAQ;AACnB,MAAC,KAA8B,sBAAsB;AACrD,aAAO;AAAA,QACL,SAAS,CAAC,EAAE,MAAM,QAAQ,MAAM,OAAO,CAAC;AAAA,MAC1C;AAAA,IACF;AAEA,UAAM,OAAO,KAAK,OAAO,KAAK,CAAAA,UAAQA,MAAK,OAAO,SAAS,IAAI;AAC/D,QAAI,CAAC;AACH,YAAM,IAAI,MAAM,mBAAmB,IAAI,sBAAsB,KAAK,OAAO,IAAI,CAAAA,UAAQA,MAAK,OAAO,IAAI,EAAE,KAAK,IAAI,CAAC,EAAE;AACrH,UAAM,kBAAkB,KAAK,OAAO,YAAY,MAAM,QAAQ,CAAC,CAAC;AAChE,WAAO,MAAM,KAAK,OAAO,KAAK,OAAO,eAAe;AAAA,EACtD;AACF;AAEA,MAAM,qBAAiB,iCAAiB;AAAA,EACtC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,aAAa;AAAA,EACb,aAAa,UAAU,EAAE,OAAO,CAAC,CAAC;AAAA,EAClC,MAAM;AACR,CAAC;AAED,eAAsB,yBAAyB,MAAuB,SAAuB;AAC3F,MAAI,CAAC,QAAQ,IAAI;AACf;AACF,QAAMC,YAAW,MAAO,KAAgB,eAAe;AACvD,QAAM,eAAe;AAAA,MACrB,8BAAiB,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA,EAG3BA,SAAQ;AAAA;AAAA;AAAA,qFAG2E,MAAM,IAAI,UAAQ,KAAK,OAAO,IAAI,EAAE,KAAK,IAAI,CAAC;AACjI,YAAM,kCAAsB,QAAQ,IAAI,oBAAqB,IAAI,eAAe,IAAI,GAAG,YAAY;AACrG;",
  "names": ["tool", "snapshot"]
}
