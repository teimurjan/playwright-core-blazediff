{
  "version": 3,
  "sources": ["../../../src/mcp/sdk/bundle.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst bundle = require('../../mcpBundleImpl');\nconst zodToJsonSchema: typeof import('zod-to-json-schema').zodToJsonSchema = bundle.zodToJsonSchema;\nconst Client: typeof import('@modelcontextprotocol/sdk/client/index.js').Client = bundle.Client;\nconst Server: typeof import('@modelcontextprotocol/sdk/server/index.js').Server = bundle.Server;\nconst SSEServerTransport: typeof import('@modelcontextprotocol/sdk/server/sse.js').SSEServerTransport = bundle.SSEServerTransport;\nconst StdioClientTransport: typeof import('@modelcontextprotocol/sdk/client/stdio.js').StdioClientTransport = bundle.StdioClientTransport;\nconst StdioServerTransport: typeof import('@modelcontextprotocol/sdk/server/stdio.js').StdioServerTransport = bundle.StdioServerTransport;\nconst StreamableHTTPServerTransport: typeof import('@modelcontextprotocol/sdk/server/streamableHttp.js').StreamableHTTPServerTransport = bundle.StreamableHTTPServerTransport;\nconst StreamableHTTPClientTransport: typeof import('@modelcontextprotocol/sdk/client/streamableHttp.js').StreamableHTTPClientTransport = bundle.StreamableHTTPClientTransport;\nconst CallToolRequestSchema: typeof import('@modelcontextprotocol/sdk/types.js').CallToolRequestSchema = bundle.CallToolRequestSchema;\nconst ListRootsRequestSchema: typeof import('@modelcontextprotocol/sdk/types.js').ListRootsRequestSchema = bundle.ListRootsRequestSchema;\nconst ListToolsRequestSchema: typeof import('@modelcontextprotocol/sdk/types.js').ListToolsRequestSchema = bundle.ListToolsRequestSchema;\nconst PingRequestSchema: typeof import('@modelcontextprotocol/sdk/types.js').PingRequestSchema = bundle.PingRequestSchema;\nconst z: typeof import('zod') = bundle.z;\n\nexport {\n  zodToJsonSchema,\n  Client,\n  Server,\n  SSEServerTransport,\n  StdioClientTransport,\n  StdioServerTransport,\n  StreamableHTTPClientTransport,\n  StreamableHTTPServerTransport,\n  CallToolRequestSchema,\n  ListRootsRequestSchema,\n  ListToolsRequestSchema,\n  PingRequestSchema,\n  z,\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,MAAM,SAAS,QAAQ,qBAAqB;AAC5C,MAAM,kBAAuE,OAAO;AACpF,MAAM,SAA4E,OAAO;AACzF,MAAM,SAA4E,OAAO;AACzF,MAAM,qBAAkG,OAAO;AAC/G,MAAM,uBAAwG,OAAO;AACrH,MAAM,uBAAwG,OAAO;AACrH,MAAM,gCAAmI,OAAO;AAChJ,MAAM,gCAAmI,OAAO;AAChJ,MAAM,wBAAmG,OAAO;AAChH,MAAM,yBAAqG,OAAO;AAClH,MAAM,yBAAqG,OAAO;AAClH,MAAM,oBAA2F,OAAO;AACxG,MAAM,IAA0B,OAAO;",
  "names": []
}
