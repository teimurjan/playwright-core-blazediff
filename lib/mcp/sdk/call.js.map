{
  "version": 3,
  "sources": ["../../../src/mcp/sdk/call.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as mcpBundle from './bundle.js';\n\nimport type { CallToolRequest, CallToolResult } from '@modelcontextprotocol/sdk/types';\n\nexport async function callTool(mcpUrl: string, name: string, params: CallToolRequest['params']['arguments']): Promise<CallToolResult> {\n  const transport = new mcpBundle.StreamableHTTPClientTransport(new URL(mcpUrl));\n  const client = new mcpBundle.Client({ name: 'Internal', version: '0.0.0' });\n  await client.connect(transport);\n  try {\n    return await client.callTool({ name, arguments: params }) as CallToolResult;\n  } finally {\n    await transport.terminateSession();\n    await client.close();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,gBAA2B;AAI3B,eAAsB,SAAS,QAAgB,MAAc,QAAyE;AACpI,QAAM,YAAY,IAAI,UAAU,8BAA8B,IAAI,IAAI,MAAM,CAAC;AAC7E,QAAM,SAAS,IAAI,UAAU,OAAO,EAAE,MAAM,YAAY,SAAS,QAAQ,CAAC;AAC1E,QAAM,OAAO,QAAQ,SAAS;AAC9B,MAAI;AACF,WAAO,MAAM,OAAO,SAAS,EAAE,MAAM,WAAW,OAAO,CAAC;AAAA,EAC1D,UAAE;AACA,UAAM,UAAU,iBAAiB;AACjC,UAAM,OAAO,MAAM;AAAA,EACrB;AACF;",
  "names": []
}
