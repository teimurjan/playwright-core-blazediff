{
  "version": 3,
  "sources": ["../../../src/mcp/sdk/tool.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { zodToJsonSchema } from './bundle.js';\n\nimport type { z } from 'zod';\nimport type * as mcpServer from './server.js';\n\nexport type ToolSchema<Input extends z.Schema> = {\n  name: string;\n  title: string;\n  description: string;\n  inputSchema: Input;\n  type: 'readOnly' | 'destructive';\n};\n\nexport function toMcpTool(tool: ToolSchema<any>): mcpServer.Tool {\n  return {\n    name: tool.name,\n    description: tool.description,\n    inputSchema: zodToJsonSchema(tool.inputSchema, { strictUnions: true }) as mcpServer.Tool['inputSchema'],\n    annotations: {\n      title: tool.title,\n      readOnlyHint: tool.type === 'readOnly',\n      destructiveHint: tool.type === 'destructive',\n      openWorldHint: true,\n    },\n  };\n}\n\nexport function defineToolSchema<Input extends z.Schema>(tool: ToolSchema<Input>): ToolSchema<Input> {\n  return tool;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,oBAAgC;AAazB,SAAS,UAAU,MAAuC;AAC/D,SAAO;AAAA,IACL,MAAM,KAAK;AAAA,IACX,aAAa,KAAK;AAAA,IAClB,iBAAa,+BAAgB,KAAK,aAAa,EAAE,cAAc,KAAK,CAAC;AAAA,IACrE,aAAa;AAAA,MACX,OAAO,KAAK;AAAA,MACZ,cAAc,KAAK,SAAS;AAAA,MAC5B,iBAAiB,KAAK,SAAS;AAAA,MAC/B,eAAe;AAAA,IACjB;AAAA,EACF;AACF;AAEO,SAAS,iBAAyC,MAA4C;AACnG,SAAO;AACT;",
  "names": []
}
