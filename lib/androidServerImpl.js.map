{
  "version": 3,
  "sources": ["../src/androidServerImpl.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PlaywrightServer } from './remote/playwrightServer';\nimport { createPlaywright } from './server/playwright';\nimport { createGuid } from './server/utils/crypto';\nimport { ws } from './utilsBundle';\nimport { ProgressController } from './server/progress';\n\nimport type { BrowserServer } from './client/browserType';\nimport type { LaunchAndroidServerOptions } from './client/types';\nimport type { WebSocketEventEmitter } from './utilsBundle';\n\nexport class AndroidServerLauncherImpl {\n  async launchServer(options: LaunchAndroidServerOptions = {}): Promise<BrowserServer> {\n    const playwright = createPlaywright({ sdkLanguage: 'javascript', isServer: true });\n    // 1. Pre-connect to the device\n    const controller = new ProgressController();\n    let devices = await controller.run(progress => playwright.android.devices(progress, {\n      host: options.adbHost,\n      port: options.adbPort,\n      omitDriverInstall: options.omitDriverInstall,\n    }));\n\n    if (devices.length === 0)\n      throw new Error('No devices found');\n\n    if (options.deviceSerialNumber) {\n      devices = devices.filter(d => d.serial === options.deviceSerialNumber);\n      if (devices.length === 0)\n        throw new Error(`No device with serial number '${options.deviceSerialNumber}' was found`);\n    }\n\n    if (devices.length > 1)\n      throw new Error(`More than one device found. Please specify deviceSerialNumber`);\n\n    const device = devices[0];\n\n    const path = options.wsPath ? (options.wsPath.startsWith('/') ? options.wsPath : `/${options.wsPath}`) : `/${createGuid()}`;\n\n    // 2. Start the server\n    const server = new PlaywrightServer({ mode: 'launchServer', path, maxConnections: 1, preLaunchedAndroidDevice: device });\n    const wsEndpoint = await server.listen(options.port, options.host);\n\n    // 3. Return the BrowserServer interface\n    const browserServer = new ws.EventEmitter() as (BrowserServer & WebSocketEventEmitter);\n    browserServer.wsEndpoint = () => wsEndpoint;\n    browserServer.close = () => device.close();\n    browserServer.kill = () => device.close();\n    device.on('close', () => {\n      server.close();\n      browserServer.emit('close');\n    });\n    return browserServer;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,8BAAiC;AACjC,wBAAiC;AACjC,oBAA2B;AAC3B,yBAAmB;AACnB,sBAAmC;AAM5B,MAAM,0BAA0B;AAAA,EACrC,MAAM,aAAa,UAAsC,CAAC,GAA2B;AACnF,UAAM,iBAAa,oCAAiB,EAAE,aAAa,cAAc,UAAU,KAAK,CAAC;AAEjF,UAAM,aAAa,IAAI,mCAAmB;AAC1C,QAAI,UAAU,MAAM,WAAW,IAAI,cAAY,WAAW,QAAQ,QAAQ,UAAU;AAAA,MAClF,MAAM,QAAQ;AAAA,MACd,MAAM,QAAQ;AAAA,MACd,mBAAmB,QAAQ;AAAA,IAC7B,CAAC,CAAC;AAEF,QAAI,QAAQ,WAAW;AACrB,YAAM,IAAI,MAAM,kBAAkB;AAEpC,QAAI,QAAQ,oBAAoB;AAC9B,gBAAU,QAAQ,OAAO,OAAK,EAAE,WAAW,QAAQ,kBAAkB;AACrE,UAAI,QAAQ,WAAW;AACrB,cAAM,IAAI,MAAM,iCAAiC,QAAQ,kBAAkB,aAAa;AAAA,IAC5F;AAEA,QAAI,QAAQ,SAAS;AACnB,YAAM,IAAI,MAAM,+DAA+D;AAEjF,UAAM,SAAS,QAAQ,CAAC;AAExB,UAAM,OAAO,QAAQ,SAAU,QAAQ,OAAO,WAAW,GAAG,IAAI,QAAQ,SAAS,IAAI,QAAQ,MAAM,KAAM,QAAI,0BAAW,CAAC;AAGzH,UAAM,SAAS,IAAI,yCAAiB,EAAE,MAAM,gBAAgB,MAAM,gBAAgB,GAAG,0BAA0B,OAAO,CAAC;AACvH,UAAM,aAAa,MAAM,OAAO,OAAO,QAAQ,MAAM,QAAQ,IAAI;AAGjE,UAAM,gBAAgB,IAAI,sBAAG,aAAa;AAC1C,kBAAc,aAAa,MAAM;AACjC,kBAAc,QAAQ,MAAM,OAAO,MAAM;AACzC,kBAAc,OAAO,MAAM,OAAO,MAAM;AACxC,WAAO,GAAG,SAAS,MAAM;AACvB,aAAO,MAAM;AACb,oBAAc,KAAK,OAAO;AAAA,IAC5B,CAAC;AACD,WAAO;AAAA,EACT;AACF;",
  "names": []
}
